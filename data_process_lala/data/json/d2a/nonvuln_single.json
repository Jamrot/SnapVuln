{"single_graph": {"nodes": [{"type": "Function", "ID": 0, "name": "ibm 4758 load pubkey"}, {"type": "FUNCDEF", "childNum": "0", "ID": 1, "code": "ibm 4758 load pubkey ( engine * e , const char * key id , ui method * ui method , void * callback data )"}, {"type": "PARAMLIST", "childNum": "2", "ID": 2, "code": "engine * e , const char * key id , ui method * ui method , void * callback data"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "void * callback data", "location": "3"}, {"type": "IDEN", "childNum": "1", "ID": 4, "code": "callback data"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 5, "code": "void *"}, {"type": "PARAM", "childNum": "2", "ID": 6, "code": "ui method * ui method", "location": "2"}, {"type": "IDEN", "childNum": "1", "ID": 7, "code": "ui method"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 8, "code": "ui method *"}, {"type": "PARAM", "childNum": "1", "ID": 9, "code": "const char * key id", "location": "1"}, {"type": "IDEN", "childNum": "1", "ID": 10, "code": "key id"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 11, "code": "const char *"}, {"type": "PARAM", "childNum": "0", "ID": 12, "code": "engine * e", "location": "1"}, {"type": "IDEN", "childNum": "1", "ID": 13, "code": "e"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 14, "code": "engine *"}, {"type": "RETURNTYPE", "childNum": "1", "ID": 15, "code": "static evp pkey *"}, {"type": "COMPSTATE", "childNum": "0", "ID": 16, "code": "", "location": "4"}, {"type": "RETURNSTATE", "childNum": "36", "ID": 17, "code": "return null ;", "location": "68"}, {"type": "IDEN", "childNum": "0", "ID": 18, "code": "null"}, {"type": "IFSTATE", "childNum": "35", "ID": 19, "code": "if ( key token )"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 20, "code": "openssl free ( key token )", "location": "67"}, {"type": "CALLEXPR", "childNum": "0", "ID": 21, "code": "openssl free ( key token )"}, {"type": "ARGULIST", "childNum": "1", "ID": 22, "code": "key token"}, {"type": "ARGUMENT", "childNum": "0", "ID": 23, "code": "key token"}, {"type": "IDEN", "childNum": "0", "ID": 24, "code": "key token"}, {"type": "CALLEE", "childNum": "0", "ID": 25, "code": "openssl free"}, {"type": "IDEN", "childNum": "0", "ID": 26, "code": "openssl free"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "key token", "location": "66"}, {"type": "IDEN", "childNum": "0", "ID": 28, "code": "key token"}, {"type": "LABEL", "childNum": "34", "ID": 29, "code": "err :", "location": "65"}, {"type": "IDEN", "childNum": "0", "ID": 30, "code": "err"}, {"type": "RETURNSTATE", "childNum": "33", "ID": 31, "code": "return res ;", "location": "64"}, {"type": "IDEN", "childNum": "0", "ID": 32, "code": "res"}, {"type": "EXPRSTATE", "childNum": "32", "ID": 33, "code": "evp pkey assign rsa ( res , rtmp )", "location": "62"}, {"type": "CALLEXPR", "childNum": "0", "ID": 34, "code": "evp pkey assign rsa ( res , rtmp )"}, {"type": "ARGULIST", "childNum": "1", "ID": 35, "code": "res"}, {"type": "ARGUMENT", "childNum": "1", "ID": 36, "code": "rtmp"}, {"type": "IDEN", "childNum": "0", "ID": 37, "code": "rtmp"}, {"type": "ARGUMENT", "childNum": "0", "ID": 38, "code": "res"}, {"type": "IDEN", "childNum": "0", "ID": 39, "code": "res"}, {"type": "CALLEE", "childNum": "0", "ID": 40, "code": "evp pkey assign rsa"}, {"type": "IDEN", "childNum": "0", "ID": 41, "code": "evp pkey assign rsa"}, {"type": "EXPRSTATE", "childNum": "31", "ID": 42, "code": "res = evp pkey new ( )", "location": "61"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 43, "code": "res = evp pkey new ( )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 44, "code": "evp pkey new ( )"}, {"type": "ARGULIST", "childNum": "1", "ID": 45, "code": ""}, {"type": "CALLEE", "childNum": "0", "ID": 46, "code": "evp pkey new"}, {"type": "IDEN", "childNum": "0", "ID": 47, "code": "evp pkey new"}, {"type": "IDEN", "childNum": "0", "ID": 48, "code": "res"}, {"type": "EXPRSTATE", "childNum": "30", "ID": 49, "code": "rtmp - > flags | = rsa flag ext pkey", "location": "60"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 50, "code": "rtmp - > flags | = rsa flag ext pkey"}, {"type": "IDEN", "childNum": "1", "ID": 51, "code": "rsa flag ext pkey"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 52, "code": "rtmp - > flags"}, {"type": "IDEN", "childNum": "1", "ID": 53, "code": "flags"}, {"type": "IDEN", "childNum": "0", "ID": 54, "code": "rtmp"}, {"type": "EXPRSTATE", "childNum": "29", "ID": 55, "code": "rtmp - > n = bn bin2bn ( modulus , modulus field length , null )", "location": "59"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 56, "code": "rtmp - > n = bn bin2bn ( modulus , modulus field length , null )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 57, "code": "bn bin2bn ( modulus , modulus field length , null )"}, {"type": "ARGULIST", "childNum": "1", "ID": 58, "code": "modulus"}, {"type": "ARGUMENT", "childNum": "2", "ID": 59, "code": "null"}, {"type": "IDEN", "childNum": "0", "ID": 60, "code": "null"}, {"type": "ARGUMENT", "childNum": "1", "ID": 61, "code": "modulus field length"}, {"type": "IDEN", "childNum": "0", "ID": 62, "code": "modulus field length"}, {"type": "ARGUMENT", "childNum": "0", "ID": 63, "code": "modulus"}, {"type": "IDEN", "childNum": "0", "ID": 64, "code": "modulus"}, {"type": "CALLEE", "childNum": "0", "ID": 65, "code": "bn bin2bn"}, {"type": "IDEN", "childNum": "0", "ID": 66, "code": "bn bin2bn"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 67, "code": "rtmp - > n"}, {"type": "IDEN", "childNum": "1", "ID": 68, "code": "n"}, {"type": "IDEN", "childNum": "0", "ID": 69, "code": "rtmp"}, {"type": "EXPRSTATE", "childNum": "28", "ID": 70, "code": "rtmp - > e = bn bin2bn ( exponent , exponent length , null )", "location": "58"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 71, "code": "rtmp - > e = bn bin2bn ( exponent , exponent length , null )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 72, "code": "bn bin2bn ( exponent , exponent length , null )"}, {"type": "ARGULIST", "childNum": "1", "ID": 73, "code": "exponent"}, {"type": "ARGUMENT", "childNum": "2", "ID": 74, "code": "null"}, {"type": "IDEN", "childNum": "0", "ID": 75, "code": "null"}, {"type": "ARGUMENT", "childNum": "1", "ID": 76, "code": "exponent length"}, {"type": "IDEN", "childNum": "0", "ID": 77, "code": "exponent length"}, {"type": "ARGUMENT", "childNum": "0", "ID": 78, "code": "exponent"}, {"type": "IDEN", "childNum": "0", "ID": 79, "code": "exponent"}, {"type": "CALLEE", "childNum": "0", "ID": 80, "code": "bn bin2bn"}, {"type": "IDEN", "childNum": "0", "ID": 81, "code": "bn bin2bn"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 82, "code": "rtmp - > e"}, {"type": "IDEN", "childNum": "1", "ID": 83, "code": "e"}, {"type": "IDEN", "childNum": "0", "ID": 84, "code": "rtmp"}, {"type": "EXPRSTATE", "childNum": "27", "ID": 85, "code": "rsa set ex data ( rtmp , hndidx , ( char * ) key token )", "location": "57"}, {"type": "CALLEXPR", "childNum": "0", "ID": 86, "code": "rsa set ex data ( rtmp , hndidx , ( char * ) key token )"}, {"type": "ARGULIST", "childNum": "1", "ID": 87, "code": "rtmp"}, {"type": "ARGUMENT", "childNum": "2", "ID": 88, "code": "( char * ) key token"}, {"type": "CASTEXPR", "childNum": "0", "ID": 89, "code": "( char * ) key token"}, {"type": "IDEN", "childNum": "0", "ID": 90, "code": "key token"}, {"type": "CASTTAR", "childNum": "0", "ID": 91, "code": "char *"}, {"type": "ARGUMENT", "childNum": "1", "ID": 92, "code": "hndidx"}, {"type": "IDEN", "childNum": "0", "ID": 93, "code": "hndidx"}, {"type": "ARGUMENT", "childNum": "0", "ID": 94, "code": "rtmp"}, {"type": "IDEN", "childNum": "0", "ID": 95, "code": "rtmp"}, {"type": "CALLEE", "childNum": "0", "ID": 96, "code": "rsa set ex data"}, {"type": "IDEN", "childNum": "0", "ID": 97, "code": "rsa set ex data"}, {"type": "EXPRSTATE", "childNum": "26", "ID": 98, "code": "rtmp = rsa new method ( e )", "location": "56"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 99, "code": "rtmp = rsa new method ( e )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 100, "code": "rsa new method ( e )"}, {"type": "ARGULIST", "childNum": "1", "ID": 101, "code": "e"}, {"type": "ARGUMENT", "childNum": "0", "ID": 102, "code": "e"}, {"type": "IDEN", "childNum": "0", "ID": 103, "code": "e"}, {"type": "CALLEE", "childNum": "0", "ID": 104, "code": "rsa new method"}, {"type": "IDEN", "childNum": "0", "ID": 105, "code": "rsa new method"}, {"type": "IDEN", "childNum": "0", "ID": 106, "code": "rtmp"}, {"type": "EXPRSTATE", "childNum": "25", "ID": 107, "code": "( * ( long * ) key token ) = key token length", "location": "55"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 108, "code": "( * ( long * ) key token ) = key token length"}, {"type": "IDEN", "childNum": "1", "ID": 109, "code": "key token length"}, {"type": "UNAOP", "childNum": "0", "ID": 110, "code": "* ( long * ) key token"}, {"type": "CASTEXPR", "childNum": "1", "ID": 111, "code": "( long * ) key token"}, {"type": "IDEN", "childNum": "0", "ID": 112, "code": "key token"}, {"type": "CASTTAR", "childNum": "0", "ID": 113, "code": "long *"}, {"type": "UNARYOPER", "childNum": "0", "ID": 114, "code": "*"}, {"type": "IFSTATE", "childNum": "24", "ID": 115, "code": "if ( ! get modulus and exponent ( key token + sizeof ( long ) , & exponent length , exponent , & modulus length , & modulus field length , modulus ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 116, "code": "", "location": "46"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 117, "code": "goto err ;", "location": "52"}, {"type": "IDEN", "childNum": "0", "ID": 118, "code": "err"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 119, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , cca4758 r failed loading public key )", "location": "50"}, {"type": "CALLEXPR", "childNum": "0", "ID": 120, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , cca4758 r failed loading public key )"}, {"type": "ARGULIST", "childNum": "1", "ID": 121, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "ARGUMENT", "childNum": "1", "ID": 122, "code": "cca4758 r failed loading public key"}, {"type": "IDEN", "childNum": "0", "ID": 123, "code": "cca4758 r failed loading public key"}, {"type": "ARGUMENT", "childNum": "0", "ID": 124, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "IDEN", "childNum": "0", "ID": 125, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "CALLEE", "childNum": "0", "ID": 126, "code": "cca4758err"}, {"type": "IDEN", "childNum": "0", "ID": 127, "code": "cca4758err"}, {"type": "COND", "childNum": "0", "ID": 128, "code": "! get modulus and exponent ( key token + sizeof ( long ) , & exponent length , exponent , & modulus length , & modulus field length , modulus )", "location": "47"}, {"type": "UNAOP", "childNum": "0", "ID": 129, "code": "! get modulus and exponent ( key token + sizeof ( long ) , & exponent length , exponent , & modulus length , & modulus field length , modulus )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 130, "code": "get modulus and exponent ( key token + sizeof ( long ) , & exponent length , exponent , & modulus length , & modulus field length , modulus )"}, {"type": "ARGULIST", "childNum": "1", "ID": 131, "code": "key token + sizeof ( long )"}, {"type": "ARGUMENT", "childNum": "5", "ID": 132, "code": "modulus"}, {"type": "IDEN", "childNum": "0", "ID": 133, "code": "modulus"}, {"type": "ARGUMENT", "childNum": "4", "ID": 134, "code": "& modulus field length"}, {"type": "UNAOP", "childNum": "0", "ID": 135, "code": "& modulus field length"}, {"type": "IDEN", "childNum": "1", "ID": 136, "code": "modulus field length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 137, "code": "&"}, {"type": "ARGUMENT", "childNum": "3", "ID": 138, "code": "& modulus length"}, {"type": "UNAOP", "childNum": "0", "ID": 139, "code": "& modulus length"}, {"type": "IDEN", "childNum": "1", "ID": 140, "code": "modulus length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 141, "code": "&"}, {"type": "ARGUMENT", "childNum": "2", "ID": 142, "code": "exponent"}, {"type": "IDEN", "childNum": "0", "ID": 143, "code": "exponent"}, {"type": "ARGUMENT", "childNum": "1", "ID": 144, "code": "& exponent length"}, {"type": "UNAOP", "childNum": "0", "ID": 145, "code": "& exponent length"}, {"type": "IDEN", "childNum": "1", "ID": 146, "code": "exponent length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 147, "code": "&"}, {"type": "ARGUMENT", "childNum": "0", "ID": 148, "code": "key token + sizeof ( long )"}, {"type": "ADDIEXPR", "childNum": "0", "ID": 149, "code": "key token + sizeof ( long )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 150, "code": "sizeof ( long )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 151, "code": "long"}, {"type": "SIZEOF", "childNum": "0", "ID": 152, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 153, "code": "key token"}, {"type": "CALLEE", "childNum": "0", "ID": 154, "code": "get modulus and exponent"}, {"type": "IDEN", "childNum": "0", "ID": 155, "code": "get modulus and exponent"}, {"type": "UNARYOPER", "childNum": "0", "ID": 156, "code": "!"}, {"type": "IFSTATE", "childNum": "23", "ID": 157, "code": "if ( return code )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 158, "code": "", "location": "39"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 159, "code": "goto err ;", "location": "44"}, {"type": "IDEN", "childNum": "0", "ID": 160, "code": "err"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 161, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , err r malloc failure )", "location": "43"}, {"type": "CALLEXPR", "childNum": "0", "ID": 162, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , err r malloc failure )"}, {"type": "ARGULIST", "childNum": "1", "ID": 163, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "ARGUMENT", "childNum": "1", "ID": 164, "code": "err r malloc failure"}, {"type": "IDEN", "childNum": "0", "ID": 165, "code": "err r malloc failure"}, {"type": "ARGUMENT", "childNum": "0", "ID": 166, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "IDEN", "childNum": "0", "ID": 167, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "CALLEE", "childNum": "0", "ID": 168, "code": "cca4758err"}, {"type": "IDEN", "childNum": "0", "ID": 169, "code": "cca4758err"}, {"type": "COND", "childNum": "0", "ID": 170, "code": "return code", "location": "42"}, {"type": "IDEN", "childNum": "0", "ID": 171, "code": "return code"}, {"type": "EXPRSTATE", "childNum": "22", "ID": 172, "code": "key record read ( & return code , & reason code , & exit data length , exit data , & rule array length , rule array , key label , & key token length , key token + sizeof ( long ) )", "location": "38"}, {"type": "CALLEXPR", "childNum": "0", "ID": 173, "code": "key record read ( & return code , & reason code , & exit data length , exit data , & rule array length , rule array , key label , & key token length , key token + sizeof ( long ) )"}, {"type": "ARGULIST", "childNum": "1", "ID": 174, "code": "& return code"}, {"type": "ARGUMENT", "childNum": "8", "ID": 175, "code": "key token + sizeof ( long )"}, {"type": "ADDIEXPR", "childNum": "0", "ID": 176, "code": "key token + sizeof ( long )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 177, "code": "sizeof ( long )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 178, "code": "long"}, {"type": "SIZEOF", "childNum": "0", "ID": 179, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 180, "code": "key token"}, {"type": "ARGUMENT", "childNum": "7", "ID": 181, "code": "& key token length"}, {"type": "UNAOP", "childNum": "0", "ID": 182, "code": "& key token length"}, {"type": "IDEN", "childNum": "1", "ID": 183, "code": "key token length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 184, "code": "&"}, {"type": "ARGUMENT", "childNum": "6", "ID": 185, "code": "key label"}, {"type": "IDEN", "childNum": "0", "ID": 186, "code": "key label"}, {"type": "ARGUMENT", "childNum": "5", "ID": 187, "code": "rule array"}, {"type": "IDEN", "childNum": "0", "ID": 188, "code": "rule array"}, {"type": "ARGUMENT", "childNum": "4", "ID": 189, "code": "& rule array length"}, {"type": "UNAOP", "childNum": "0", "ID": 190, "code": "& rule array length"}, {"type": "IDEN", "childNum": "1", "ID": 191, "code": "rule array length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 192, "code": "&"}, {"type": "ARGUMENT", "childNum": "3", "ID": 193, "code": "exit data"}, {"type": "IDEN", "childNum": "0", "ID": 194, "code": "exit data"}, {"type": "ARGUMENT", "childNum": "2", "ID": 195, "code": "& exit data length"}, {"type": "UNAOP", "childNum": "0", "ID": 196, "code": "& exit data length"}, {"type": "IDEN", "childNum": "1", "ID": 197, "code": "exit data length"}, {"type": "UNARYOPER", "childNum": "0", "ID": 198, "code": "&"}, {"type": "ARGUMENT", "childNum": "1", "ID": 199, "code": "& reason code"}, {"type": "UNAOP", "childNum": "0", "ID": 200, "code": "& reason code"}, {"type": "IDEN", "childNum": "1", "ID": 201, "code": "reason code"}, {"type": "UNARYOPER", "childNum": "0", "ID": 202, "code": "&"}, {"type": "ARGUMENT", "childNum": "0", "ID": 203, "code": "& return code"}, {"type": "UNAOP", "childNum": "0", "ID": 204, "code": "& return code"}, {"type": "IDEN", "childNum": "1", "ID": 205, "code": "return code"}, {"type": "UNARYOPER", "childNum": "0", "ID": 206, "code": "&"}, {"type": "CALLEE", "childNum": "0", "ID": 207, "code": "key record read"}, {"type": "IDEN", "childNum": "0", "ID": 208, "code": "key record read"}, {"type": "IFSTATE", "childNum": "21", "ID": 209, "code": "if ( ! key token )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 210, "code": "", "location": "30"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 211, "code": "goto err ;", "location": "35"}, {"type": "IDEN", "childNum": "0", "ID": 212, "code": "err"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 213, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , err r malloc failure )", "location": "34"}, {"type": "CALLEXPR", "childNum": "0", "ID": 214, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , err r malloc failure )"}, {"type": "ARGULIST", "childNum": "1", "ID": 215, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "ARGUMENT", "childNum": "1", "ID": 216, "code": "err r malloc failure"}, {"type": "IDEN", "childNum": "0", "ID": 217, "code": "err r malloc failure"}, {"type": "ARGUMENT", "childNum": "0", "ID": 218, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "IDEN", "childNum": "0", "ID": 219, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "CALLEE", "childNum": "0", "ID": 220, "code": "cca4758err"}, {"type": "IDEN", "childNum": "0", "ID": 221, "code": "cca4758err"}, {"type": "COND", "childNum": "0", "ID": 222, "code": "! key token", "location": "33"}, {"type": "UNAOP", "childNum": "0", "ID": 223, "code": "! key token"}, {"type": "IDEN", "childNum": "1", "ID": 224, "code": "key token"}, {"type": "UNARYOPER", "childNum": "0", "ID": 225, "code": "!"}, {"type": "EXPRSTATE", "childNum": "20", "ID": 226, "code": "key token = openssl malloc ( max cca pka token size + sizeof ( long ) )", "location": "32"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 227, "code": "key token = openssl malloc ( max cca pka token size + sizeof ( long ) )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 228, "code": "openssl malloc ( max cca pka token size + sizeof ( long ) )"}, {"type": "ARGULIST", "childNum": "1", "ID": 229, "code": "max cca pka token size + sizeof ( long )"}, {"type": "ARGUMENT", "childNum": "0", "ID": 230, "code": "max cca pka token size + sizeof ( long )"}, {"type": "ADDIEXPR", "childNum": "0", "ID": 231, "code": "max cca pka token size + sizeof ( long )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 232, "code": "sizeof ( long )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 233, "code": "long"}, {"type": "SIZEOF", "childNum": "0", "ID": 234, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 235, "code": "max cca pka token size"}, {"type": "CALLEE", "childNum": "0", "ID": 236, "code": "openssl malloc"}, {"type": "IDEN", "childNum": "0", "ID": 237, "code": "openssl malloc"}, {"type": "IDEN", "childNum": "0", "ID": 238, "code": "key token"}, {"type": "EXPRSTATE", "childNum": "19", "ID": 239, "code": "memcpy ( key label , key id , key label length )", "location": "30"}, {"type": "CALLEXPR", "childNum": "0", "ID": 240, "code": "memcpy ( key label , key id , key label length )"}, {"type": "ARGULIST", "childNum": "1", "ID": 241, "code": "key label"}, {"type": "ARGUMENT", "childNum": "2", "ID": 242, "code": "key label length"}, {"type": "IDEN", "childNum": "0", "ID": 243, "code": "key label length"}, {"type": "ARGUMENT", "childNum": "1", "ID": 244, "code": "key id"}, {"type": "IDEN", "childNum": "0", "ID": 245, "code": "key id"}, {"type": "ARGUMENT", "childNum": "0", "ID": 246, "code": "key label"}, {"type": "IDEN", "childNum": "0", "ID": 247, "code": "key label"}, {"type": "CALLEE", "childNum": "0", "ID": 248, "code": "memcpy"}, {"type": "IDEN", "childNum": "0", "ID": 249, "code": "memcpy"}, {"type": "EXPRSTATE", "childNum": "18", "ID": 250, "code": "memset ( key label , ' ' , sizeof ( key label ) )", "location": "29"}, {"type": "CALLEXPR", "childNum": "0", "ID": 251, "code": "memset ( key label , ' ' , sizeof ( key label ) )"}, {"type": "ARGULIST", "childNum": "1", "ID": 252, "code": "key label"}, {"type": "ARGUMENT", "childNum": "2", "ID": 253, "code": "sizeof ( key label )"}, {"type": "SIZEOFEXPR", "childNum": "0", "ID": 254, "code": "sizeof ( key label )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 255, "code": "key label"}, {"type": "SIZEOF", "childNum": "0", "ID": 256, "code": "sizeof"}, {"type": "ARGUMENT", "childNum": "1", "ID": 257, "code": "' '"}, {"type": "PRIEXPR", "childNum": "0", "ID": 258, "code": "' '"}, {"type": "ARGUMENT", "childNum": "0", "ID": 259, "code": "key label"}, {"type": "IDEN", "childNum": "0", "ID": 260, "code": "key label"}, {"type": "CALLEE", "childNum": "0", "ID": 261, "code": "memset"}, {"type": "IDEN", "childNum": "0", "ID": 262, "code": "memset"}, {"type": "IFSTATE", "childNum": "17", "ID": 263, "code": "if ( key label length > sizeof ( key label ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 264, "code": "", "location": "20"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 265, "code": "return null ;", "location": "26"}, {"type": "IDEN", "childNum": "0", "ID": 266, "code": "null"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 267, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , cca4758 r size too large or too small )", "location": "24"}, {"type": "CALLEXPR", "childNum": "0", "ID": 268, "code": "cca4758err ( cca4758 f ibm 4758 load pubkey , cca4758 r size too large or too small )"}, {"type": "ARGULIST", "childNum": "1", "ID": 269, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "ARGUMENT", "childNum": "1", "ID": 270, "code": "cca4758 r size too large or too small"}, {"type": "IDEN", "childNum": "0", "ID": 271, "code": "cca4758 r size too large or too small"}, {"type": "ARGUMENT", "childNum": "0", "ID": 272, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "IDEN", "childNum": "0", "ID": 273, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "CALLEE", "childNum": "0", "ID": 274, "code": "cca4758err"}, {"type": "IDEN", "childNum": "0", "ID": 275, "code": "cca4758err"}, {"type": "COND", "childNum": "0", "ID": 276, "code": "key label length > sizeof ( key label )", "location": "23"}, {"type": "RELATIONEXPRE", "childNum": "0", "ID": 277, "code": "key label length > sizeof ( key label )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 278, "code": "sizeof ( key label )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 279, "code": "key label"}, {"type": "SIZEOF", "childNum": "0", "ID": 280, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 281, "code": "key label length"}, {"type": "IDENDECLSTATE", "childNum": "16", "ID": 282, "code": "long exponent length = sizeof ( exponent ) ;", "location": "21"}, {"type": "IDENDECL", "childNum": "0", "ID": 283, "code": "exponent length = sizeof ( exponent )"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 284, "code": "exponent length = sizeof ( exponent )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 285, "code": "sizeof ( exponent )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 286, "code": "exponent"}, {"type": "SIZEOF", "childNum": "0", "ID": 287, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 288, "code": "exponent length"}, {"type": "IDEN", "childNum": "0", "ID": 289, "code": "exponent length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 290, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "15", "ID": 291, "code": "unsigned char exponent [ 512 ] ;", "location": "20"}, {"type": "IDENDECL", "childNum": "0", "ID": 292, "code": "exponent [ 512 ]"}, {"type": "PRIEXPR", "childNum": "2", "ID": 293, "code": "512"}, {"type": "IDEN", "childNum": "1", "ID": 294, "code": "exponent"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 295, "code": "unsigned char [ 512 ]"}, {"type": "IDENDECLSTATE", "childNum": "14", "ID": 296, "code": "long modulus length = 0 ;", "location": "19"}, {"type": "IDENDECL", "childNum": "0", "ID": 297, "code": "modulus length = 0"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 298, "code": "modulus length = 0"}, {"type": "PRIEXPR", "childNum": "1", "ID": 299, "code": "0"}, {"type": "IDEN", "childNum": "0", "ID": 300, "code": "modulus length"}, {"type": "IDEN", "childNum": "0", "ID": 301, "code": "modulus length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 302, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "13", "ID": 303, "code": "long modulus field length = sizeof ( modulus ) ;", "location": "18"}, {"type": "IDENDECL", "childNum": "0", "ID": 304, "code": "modulus field length = sizeof ( modulus )"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 305, "code": "modulus field length = sizeof ( modulus )"}, {"type": "SIZEOFEXPR", "childNum": "1", "ID": 306, "code": "sizeof ( modulus )"}, {"type": "SIZEOFOPERA", "childNum": "1", "ID": 307, "code": "modulus"}, {"type": "SIZEOF", "childNum": "0", "ID": 308, "code": "sizeof"}, {"type": "IDEN", "childNum": "0", "ID": 309, "code": "modulus field length"}, {"type": "IDEN", "childNum": "0", "ID": 310, "code": "modulus field length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 311, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "12", "ID": 312, "code": "unsigned char modulus [ 512 ] ;", "location": "17"}, {"type": "IDENDECL", "childNum": "0", "ID": 313, "code": "modulus [ 512 ]"}, {"type": "PRIEXPR", "childNum": "2", "ID": 314, "code": "512"}, {"type": "IDEN", "childNum": "1", "ID": 315, "code": "modulus"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 316, "code": "unsigned char [ 512 ]"}, {"type": "IDENDECLSTATE", "childNum": "11", "ID": 317, "code": "unsigned long key label length = strlen ( key id ) ;", "location": "16"}, {"type": "IDENDECL", "childNum": "0", "ID": 318, "code": "key label length = strlen ( key id )"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 319, "code": "key label length = strlen ( key id )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 320, "code": "strlen ( key id )"}, {"type": "ARGULIST", "childNum": "1", "ID": 321, "code": "key id"}, {"type": "ARGUMENT", "childNum": "0", "ID": 322, "code": "key id"}, {"type": "IDEN", "childNum": "0", "ID": 323, "code": "key id"}, {"type": "CALLEE", "childNum": "0", "ID": 324, "code": "strlen"}, {"type": "IDEN", "childNum": "0", "ID": 325, "code": "strlen"}, {"type": "IDEN", "childNum": "0", "ID": 326, "code": "key label length"}, {"type": "IDEN", "childNum": "0", "ID": 327, "code": "key label length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 328, "code": "unsigned long"}, {"type": "IDENDECLSTATE", "childNum": "10", "ID": 329, "code": "unsigned char key label [ 64 ] ;", "location": "15"}, {"type": "IDENDECL", "childNum": "0", "ID": 330, "code": "key label [ 64 ]"}, {"type": "PRIEXPR", "childNum": "2", "ID": 331, "code": "64"}, {"type": "IDEN", "childNum": "1", "ID": 332, "code": "key label"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 333, "code": "unsigned char [ 64 ]"}, {"type": "IDENDECLSTATE", "childNum": "9", "ID": 334, "code": "unsigned char rule array [ 8 ] ;", "location": "14"}, {"type": "IDENDECL", "childNum": "0", "ID": 335, "code": "rule array [ 8 ]"}, {"type": "PRIEXPR", "childNum": "2", "ID": 336, "code": "8"}, {"type": "IDEN", "childNum": "1", "ID": 337, "code": "rule array"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 338, "code": "unsigned char [ 8 ]"}, {"type": "IDENDECLSTATE", "childNum": "8", "ID": 339, "code": "unsigned char exit data [ 8 ] ;", "location": "13"}, {"type": "IDENDECL", "childNum": "0", "ID": 340, "code": "exit data [ 8 ]"}, {"type": "PRIEXPR", "childNum": "2", "ID": 341, "code": "8"}, {"type": "IDEN", "childNum": "1", "ID": 342, "code": "exit data"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 343, "code": "unsigned char [ 8 ]"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 344, "code": "long rule array length = 0 ;", "location": "12"}, {"type": "IDENDECL", "childNum": "0", "ID": 345, "code": "rule array length = 0"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 346, "code": "rule array length = 0"}, {"type": "PRIEXPR", "childNum": "1", "ID": 347, "code": "0"}, {"type": "IDEN", "childNum": "0", "ID": 348, "code": "rule array length"}, {"type": "IDEN", "childNum": "0", "ID": 349, "code": "rule array length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 350, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "6", "ID": 351, "code": "long exit data length = 0 ;", "location": "11"}, {"type": "IDENDECL", "childNum": "0", "ID": 352, "code": "exit data length = 0"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 353, "code": "exit data length = 0"}, {"type": "PRIEXPR", "childNum": "1", "ID": 354, "code": "0"}, {"type": "IDEN", "childNum": "0", "ID": 355, "code": "exit data length"}, {"type": "IDEN", "childNum": "0", "ID": 356, "code": "exit data length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 357, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "5", "ID": 358, "code": "long reason code ;", "location": "10"}, {"type": "IDENDECL", "childNum": "0", "ID": 359, "code": "reason code"}, {"type": "IDEN", "childNum": "1", "ID": 360, "code": "reason code"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 361, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "4", "ID": 362, "code": "long return code ;", "location": "9"}, {"type": "IDENDECL", "childNum": "0", "ID": 363, "code": "return code"}, {"type": "IDEN", "childNum": "1", "ID": 364, "code": "return code"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 365, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "3", "ID": 366, "code": "long key token length = max cca pka token size ;", "location": "8"}, {"type": "IDENDECL", "childNum": "0", "ID": 367, "code": "key token length = max cca pka token size"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 368, "code": "key token length = max cca pka token size"}, {"type": "IDEN", "childNum": "1", "ID": 369, "code": "max cca pka token size"}, {"type": "IDEN", "childNum": "1", "ID": 370, "code": "max cca pka token size"}, {"type": "IDEN", "childNum": "1", "ID": 371, "code": "key token length"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 372, "code": "long"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 373, "code": "unsigned char * key token = null ;", "location": "7"}, {"type": "IDENDECL", "childNum": "0", "ID": 374, "code": "* key token = null"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 375, "code": "* key token = null"}, {"type": "IDEN", "childNum": "1", "ID": 376, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 377, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 378, "code": "key token"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 379, "code": "unsigned char *"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 380, "code": "evp pkey * res = null ;", "location": "6"}, {"type": "IDENDECL", "childNum": "0", "ID": 381, "code": "* res = null"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 382, "code": "* res = null"}, {"type": "IDEN", "childNum": "1", "ID": 383, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 384, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 385, "code": "res"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 386, "code": "evp pkey *"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 387, "code": "rsa * rtmp = null ;", "location": "5"}, {"type": "IDENDECL", "childNum": "0", "ID": 388, "code": "* rtmp = null"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 389, "code": "* rtmp = null"}, {"type": "IDEN", "childNum": "1", "ID": 390, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 391, "code": "null"}, {"type": "IDEN", "childNum": "1", "ID": 392, "code": "rtmp"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 393, "code": "rsa *"}, {"type": "CFGENTRYNODE", "ID": 394, "code": "entry"}, {"type": "CFGEXITNODE", "ID": 395, "code": "exit"}, {"type": "SYS", "ID": 396, "code": "& exit data length"}, {"type": "SYS", "ID": 397, "code": "bn bin2bn"}, {"type": "SYS", "ID": 398, "code": "return code"}, {"type": "SYS", "ID": 399, "code": "strlen"}, {"type": "SYS", "ID": 400, "code": "rtmp - > e"}, {"type": "SYS", "ID": 401, "code": "cca4758 f ibm 4758 load pubkey"}, {"type": "SYS", "ID": 402, "code": "* ( long * ) key token"}, {"type": "SYS", "ID": 403, "code": "exponent length"}, {"type": "SYS", "ID": 404, "code": "exit data"}, {"type": "SYS", "ID": 405, "code": "rtmp - > n"}, {"type": "SYS", "ID": 406, "code": "rtmp - > flags"}, {"type": "SYS", "ID": 407, "code": "callback data"}, {"type": "SYS", "ID": 408, "code": "key token"}, {"type": "SYS", "ID": 409, "code": "rule array"}, {"type": "SYS", "ID": 410, "code": "key label"}, {"type": "SYS", "ID": 411, "code": "exponent"}, {"type": "SYS", "ID": 412, "code": "res"}, {"type": "SYS", "ID": 413, "code": "null"}, {"type": "SYS", "ID": 414, "code": "openssl malloc"}, {"type": "SYS", "ID": 415, "code": "key id"}, {"type": "SYS", "ID": 416, "code": "key label length"}, {"type": "SYS", "ID": 417, "code": "rsa flag ext pkey"}, {"type": "SYS", "ID": 418, "code": "get modulus and exponent"}, {"type": "SYS", "ID": 419, "code": "rsa new method"}, {"type": "SYS", "ID": 420, "code": "max cca pka token size"}, {"type": "SYS", "ID": 421, "code": "& rule array length"}, {"type": "SYS", "ID": 422, "code": "err r malloc failure"}, {"type": "SYS", "ID": 423, "code": "cca4758 r size too large or too small"}, {"type": "SYS", "ID": 424, "code": "ui method"}, {"type": "SYS", "ID": 425, "code": "& key token length"}, {"type": "SYS", "ID": 426, "code": "* rtmp"}, {"type": "SYS", "ID": 427, "code": "cca4758 r failed loading public key"}, {"type": "SYS", "ID": 428, "code": "rule array length"}, {"type": "SYS", "ID": 429, "code": "* key token"}, {"type": "SYS", "ID": 430, "code": "rtmp"}, {"type": "SYS", "ID": 431, "code": "& return code"}, {"type": "SYS", "ID": 432, "code": "& exponent length"}, {"type": "SYS", "ID": 433, "code": "modulus field length"}, {"type": "SYS", "ID": 434, "code": "reason code"}, {"type": "SYS", "ID": 435, "code": "modulus"}, {"type": "SYS", "ID": 436, "code": "evp pkey new"}, {"type": "SYS", "ID": 437, "code": "& modulus field length"}, {"type": "SYS", "ID": 438, "code": "modulus length"}, {"type": "SYS", "ID": 439, "code": "e"}, {"type": "SYS", "ID": 440, "code": "& modulus length"}, {"type": "SYS", "ID": 441, "code": "hndidx"}, {"type": "SYS", "ID": 442, "code": "key token length"}, {"type": "SYS", "ID": 443, "code": "& reason code"}, {"type": "SYS", "ID": 444, "code": "exit data length"}], "edges": [["IS_AST_PARENT", 3, 4], ["IS_AST_PARENT", 3, 5], ["IS_AST_PARENT", 2, 3], ["IS_AST_PARENT", 6, 7], ["IS_AST_PARENT", 6, 8], ["IS_AST_PARENT", 2, 6], ["IS_AST_PARENT", 9, 10], ["IS_AST_PARENT", 9, 11], ["IS_AST_PARENT", 2, 9], ["IS_AST_PARENT", 12, 13], ["IS_AST_PARENT", 12, 14], ["IS_AST_PARENT", 2, 12], ["IS_AST_PARENT", 1, 2], ["IS_AST_PARENT", 1, 15], ["IS_AST_PARENT", 17, 18], ["IS_AST_PARENT", 16, 17], ["IS_AST_PARENT", 23, 24], ["IS_AST_PARENT", 22, 23], ["IS_AST_PARENT", 21, 22], ["IS_AST_PARENT", 25, 26], ["IS_AST_PARENT", 21, 25], ["IS_AST_PARENT", 20, 21], ["IS_AST_PARENT", 19, 20], ["IS_AST_PARENT", 27, 28], ["IS_AST_PARENT", 19, 27], ["IS_AST_PARENT", 16, 19], ["IS_AST_PARENT", 29, 30], ["IS_AST_PARENT", 16, 29], ["IS_AST_PARENT", 31, 32], ["IS_AST_PARENT", 16, 31], ["IS_AST_PARENT", 36, 37], ["IS_AST_PARENT", 35, 36], ["IS_AST_PARENT", 38, 39], ["IS_AST_PARENT", 35, 38], ["IS_AST_PARENT", 34, 35], ["IS_AST_PARENT", 40, 41], ["IS_AST_PARENT", 34, 40], ["IS_AST_PARENT", 33, 34], ["IS_AST_PARENT", 16, 33], ["IS_AST_PARENT", 44, 45], ["IS_AST_PARENT", 46, 47], ["IS_AST_PARENT", 44, 46], ["IS_AST_PARENT", 43, 44], ["IS_AST_PARENT", 43, 48], ["IS_AST_PARENT", 42, 43], ["IS_AST_PARENT", 16, 42], ["IS_AST_PARENT", 50, 51], ["IS_AST_PARENT", 52, 53], ["IS_AST_PARENT", 52, 54], ["IS_AST_PARENT", 50, 52], ["IS_AST_PARENT", 49, 50], ["IS_AST_PARENT", 16, 49], ["IS_AST_PARENT", 59, 60], ["IS_AST_PARENT", 58, 59], ["IS_AST_PARENT", 61, 62], ["IS_AST_PARENT", 58, 61], ["IS_AST_PARENT", 63, 64], ["IS_AST_PARENT", 58, 63], ["IS_AST_PARENT", 57, 58], ["IS_AST_PARENT", 65, 66], ["IS_AST_PARENT", 57, 65], ["IS_AST_PARENT", 56, 57], ["IS_AST_PARENT", 67, 68], ["IS_AST_PARENT", 67, 69], ["IS_AST_PARENT", 56, 67], ["IS_AST_PARENT", 55, 56], ["IS_AST_PARENT", 16, 55], ["IS_AST_PARENT", 74, 75], ["IS_AST_PARENT", 73, 74], ["IS_AST_PARENT", 76, 77], ["IS_AST_PARENT", 73, 76], ["IS_AST_PARENT", 78, 79], ["IS_AST_PARENT", 73, 78], ["IS_AST_PARENT", 72, 73], ["IS_AST_PARENT", 80, 81], ["IS_AST_PARENT", 72, 80], ["IS_AST_PARENT", 71, 72], ["IS_AST_PARENT", 82, 83], ["IS_AST_PARENT", 82, 84], ["IS_AST_PARENT", 71, 82], ["IS_AST_PARENT", 70, 71], ["IS_AST_PARENT", 16, 70], ["IS_AST_PARENT", 89, 90], ["IS_AST_PARENT", 89, 91], ["IS_AST_PARENT", 88, 89], ["IS_AST_PARENT", 87, 88], ["IS_AST_PARENT", 92, 93], ["IS_AST_PARENT", 87, 92], ["IS_AST_PARENT", 94, 95], ["IS_AST_PARENT", 87, 94], ["IS_AST_PARENT", 86, 87], ["IS_AST_PARENT", 96, 97], ["IS_AST_PARENT", 86, 96], ["IS_AST_PARENT", 85, 86], ["IS_AST_PARENT", 16, 85], ["IS_AST_PARENT", 102, 103], ["IS_AST_PARENT", 101, 102], ["IS_AST_PARENT", 100, 101], ["IS_AST_PARENT", 104, 105], ["IS_AST_PARENT", 100, 104], ["IS_AST_PARENT", 99, 100], ["IS_AST_PARENT", 99, 106], ["IS_AST_PARENT", 98, 99], ["IS_AST_PARENT", 16, 98], ["IS_AST_PARENT", 108, 109], ["IS_AST_PARENT", 111, 112], ["IS_AST_PARENT", 111, 113], ["IS_AST_PARENT", 110, 111], ["IS_AST_PARENT", 110, 114], ["IS_AST_PARENT", 108, 110], ["IS_AST_PARENT", 107, 108], ["IS_AST_PARENT", 16, 107], ["IS_AST_PARENT", 117, 118], ["IS_AST_PARENT", 116, 117], ["IS_AST_PARENT", 122, 123], ["IS_AST_PARENT", 121, 122], ["IS_AST_PARENT", 124, 125], ["IS_AST_PARENT", 121, 124], ["IS_AST_PARENT", 120, 121], ["IS_AST_PARENT", 126, 127], ["IS_AST_PARENT", 120, 126], ["IS_AST_PARENT", 119, 120], ["IS_AST_PARENT", 116, 119], ["IS_AST_PARENT", 115, 116], ["IS_AST_PARENT", 132, 133], ["IS_AST_PARENT", 131, 132], ["IS_AST_PARENT", 135, 136], ["IS_AST_PARENT", 135, 137], ["IS_AST_PARENT", 134, 135], ["IS_AST_PARENT", 131, 134], ["IS_AST_PARENT", 139, 140], ["IS_AST_PARENT", 139, 141], ["IS_AST_PARENT", 138, 139], ["IS_AST_PARENT", 131, 138], ["IS_AST_PARENT", 142, 143], ["IS_AST_PARENT", 131, 142], ["IS_AST_PARENT", 145, 146], ["IS_AST_PARENT", 145, 147], ["IS_AST_PARENT", 144, 145], ["IS_AST_PARENT", 131, 144], ["IS_AST_PARENT", 150, 151], ["IS_AST_PARENT", 150, 152], ["IS_AST_PARENT", 149, 150], ["IS_AST_PARENT", 149, 153], ["IS_AST_PARENT", 148, 149], ["IS_AST_PARENT", 131, 148], ["IS_AST_PARENT", 130, 131], ["IS_AST_PARENT", 154, 155], ["IS_AST_PARENT", 130, 154], ["IS_AST_PARENT", 129, 130], ["IS_AST_PARENT", 129, 156], ["IS_AST_PARENT", 128, 129], ["IS_AST_PARENT", 115, 128], ["IS_AST_PARENT", 16, 115], ["IS_AST_PARENT", 159, 160], ["IS_AST_PARENT", 158, 159], ["IS_AST_PARENT", 164, 165], ["IS_AST_PARENT", 163, 164], ["IS_AST_PARENT", 166, 167], ["IS_AST_PARENT", 163, 166], ["IS_AST_PARENT", 162, 163], ["IS_AST_PARENT", 168, 169], ["IS_AST_PARENT", 162, 168], ["IS_AST_PARENT", 161, 162], ["IS_AST_PARENT", 158, 161], ["IS_AST_PARENT", 157, 158], ["IS_AST_PARENT", 170, 171], ["IS_AST_PARENT", 157, 170], ["IS_AST_PARENT", 16, 157], ["IS_AST_PARENT", 177, 178], ["IS_AST_PARENT", 177, 179], ["IS_AST_PARENT", 176, 177], ["IS_AST_PARENT", 176, 180], ["IS_AST_PARENT", 175, 176], ["IS_AST_PARENT", 174, 175], ["IS_AST_PARENT", 182, 183], ["IS_AST_PARENT", 182, 184], ["IS_AST_PARENT", 181, 182], ["IS_AST_PARENT", 174, 181], ["IS_AST_PARENT", 185, 186], ["IS_AST_PARENT", 174, 185], ["IS_AST_PARENT", 187, 188], ["IS_AST_PARENT", 174, 187], ["IS_AST_PARENT", 190, 191], ["IS_AST_PARENT", 190, 192], ["IS_AST_PARENT", 189, 190], ["IS_AST_PARENT", 174, 189], ["IS_AST_PARENT", 193, 194], ["IS_AST_PARENT", 174, 193], ["IS_AST_PARENT", 196, 197], ["IS_AST_PARENT", 196, 198], ["IS_AST_PARENT", 195, 196], ["IS_AST_PARENT", 174, 195], ["IS_AST_PARENT", 200, 201], ["IS_AST_PARENT", 200, 202], ["IS_AST_PARENT", 199, 200], ["IS_AST_PARENT", 174, 199], ["IS_AST_PARENT", 204, 205], ["IS_AST_PARENT", 204, 206], ["IS_AST_PARENT", 203, 204], ["IS_AST_PARENT", 174, 203], ["IS_AST_PARENT", 173, 174], ["IS_AST_PARENT", 207, 208], ["IS_AST_PARENT", 173, 207], ["IS_AST_PARENT", 172, 173], ["IS_AST_PARENT", 16, 172], ["IS_AST_PARENT", 211, 212], ["IS_AST_PARENT", 210, 211], ["IS_AST_PARENT", 216, 217], ["IS_AST_PARENT", 215, 216], ["IS_AST_PARENT", 218, 219], ["IS_AST_PARENT", 215, 218], ["IS_AST_PARENT", 214, 215], ["IS_AST_PARENT", 220, 221], ["IS_AST_PARENT", 214, 220], ["IS_AST_PARENT", 213, 214], ["IS_AST_PARENT", 210, 213], ["IS_AST_PARENT", 209, 210], ["IS_AST_PARENT", 223, 224], ["IS_AST_PARENT", 223, 225], ["IS_AST_PARENT", 222, 223], ["IS_AST_PARENT", 209, 222], ["IS_AST_PARENT", 16, 209], ["IS_AST_PARENT", 232, 233], ["IS_AST_PARENT", 232, 234], ["IS_AST_PARENT", 231, 232], ["IS_AST_PARENT", 231, 235], ["IS_AST_PARENT", 230, 231], ["IS_AST_PARENT", 229, 230], ["IS_AST_PARENT", 228, 229], ["IS_AST_PARENT", 236, 237], ["IS_AST_PARENT", 228, 236], ["IS_AST_PARENT", 227, 228], ["IS_AST_PARENT", 227, 238], ["IS_AST_PARENT", 226, 227], ["IS_AST_PARENT", 16, 226], ["IS_AST_PARENT", 242, 243], ["IS_AST_PARENT", 241, 242], ["IS_AST_PARENT", 244, 245], ["IS_AST_PARENT", 241, 244], ["IS_AST_PARENT", 246, 247], ["IS_AST_PARENT", 241, 246], ["IS_AST_PARENT", 240, 241], ["IS_AST_PARENT", 248, 249], ["IS_AST_PARENT", 240, 248], ["IS_AST_PARENT", 239, 240], ["IS_AST_PARENT", 16, 239], ["IS_AST_PARENT", 254, 255], ["IS_AST_PARENT", 254, 256], ["IS_AST_PARENT", 253, 254], ["IS_AST_PARENT", 252, 253], ["IS_AST_PARENT", 257, 258], ["IS_AST_PARENT", 252, 257], ["IS_AST_PARENT", 259, 260], ["IS_AST_PARENT", 252, 259], ["IS_AST_PARENT", 251, 252], ["IS_AST_PARENT", 261, 262], ["IS_AST_PARENT", 251, 261], ["IS_AST_PARENT", 250, 251], ["IS_AST_PARENT", 16, 250], ["IS_AST_PARENT", 265, 266], ["IS_AST_PARENT", 264, 265], ["IS_AST_PARENT", 270, 271], ["IS_AST_PARENT", 269, 270], ["IS_AST_PARENT", 272, 273], ["IS_AST_PARENT", 269, 272], ["IS_AST_PARENT", 268, 269], ["IS_AST_PARENT", 274, 275], ["IS_AST_PARENT", 268, 274], ["IS_AST_PARENT", 267, 268], ["IS_AST_PARENT", 264, 267], ["IS_AST_PARENT", 263, 264], ["IS_AST_PARENT", 278, 279], ["IS_AST_PARENT", 278, 280], ["IS_AST_PARENT", 277, 278], ["IS_AST_PARENT", 277, 281], ["IS_AST_PARENT", 276, 277], ["IS_AST_PARENT", 263, 276], ["IS_AST_PARENT", 16, 263], ["IS_AST_PARENT", 285, 286], ["IS_AST_PARENT", 285, 287], ["IS_AST_PARENT", 284, 285], ["IS_AST_PARENT", 284, 288], ["IS_AST_PARENT", 283, 284], ["IS_AST_PARENT", 283, 289], ["IS_AST_PARENT", 283, 290], ["IS_AST_PARENT", 282, 283], ["IS_AST_PARENT", 16, 282], ["IS_AST_PARENT", 292, 293], ["IS_AST_PARENT", 292, 294], ["IS_AST_PARENT", 292, 295], ["IS_AST_PARENT", 291, 292], ["IS_AST_PARENT", 16, 291], ["IS_AST_PARENT", 298, 299], ["IS_AST_PARENT", 298, 300], ["IS_AST_PARENT", 297, 298], ["IS_AST_PARENT", 297, 301], ["IS_AST_PARENT", 297, 302], ["IS_AST_PARENT", 296, 297], ["IS_AST_PARENT", 16, 296], ["IS_AST_PARENT", 306, 307], ["IS_AST_PARENT", 306, 308], ["IS_AST_PARENT", 305, 306], ["IS_AST_PARENT", 305, 309], ["IS_AST_PARENT", 304, 305], ["IS_AST_PARENT", 304, 310], ["IS_AST_PARENT", 304, 311], ["IS_AST_PARENT", 303, 304], ["IS_AST_PARENT", 16, 303], ["IS_AST_PARENT", 313, 314], ["IS_AST_PARENT", 313, 315], ["IS_AST_PARENT", 313, 316], ["IS_AST_PARENT", 312, 313], ["IS_AST_PARENT", 16, 312], ["IS_AST_PARENT", 322, 323], ["IS_AST_PARENT", 321, 322], ["IS_AST_PARENT", 320, 321], ["IS_AST_PARENT", 324, 325], ["IS_AST_PARENT", 320, 324], ["IS_AST_PARENT", 319, 320], ["IS_AST_PARENT", 319, 326], ["IS_AST_PARENT", 318, 319], ["IS_AST_PARENT", 318, 327], ["IS_AST_PARENT", 318, 328], ["IS_AST_PARENT", 317, 318], ["IS_AST_PARENT", 16, 317], ["IS_AST_PARENT", 330, 331], ["IS_AST_PARENT", 330, 332], ["IS_AST_PARENT", 330, 333], ["IS_AST_PARENT", 329, 330], ["IS_AST_PARENT", 16, 329], ["IS_AST_PARENT", 335, 336], ["IS_AST_PARENT", 335, 337], ["IS_AST_PARENT", 335, 338], ["IS_AST_PARENT", 334, 335], ["IS_AST_PARENT", 16, 334], ["IS_AST_PARENT", 340, 341], ["IS_AST_PARENT", 340, 342], ["IS_AST_PARENT", 340, 343], ["IS_AST_PARENT", 339, 340], ["IS_AST_PARENT", 16, 339], ["IS_AST_PARENT", 346, 347], ["IS_AST_PARENT", 346, 348], ["IS_AST_PARENT", 345, 346], ["IS_AST_PARENT", 345, 349], ["IS_AST_PARENT", 345, 350], ["IS_AST_PARENT", 344, 345], ["IS_AST_PARENT", 16, 344], ["IS_AST_PARENT", 353, 354], ["IS_AST_PARENT", 353, 355], ["IS_AST_PARENT", 352, 353], ["IS_AST_PARENT", 352, 356], ["IS_AST_PARENT", 352, 357], ["IS_AST_PARENT", 351, 352], ["IS_AST_PARENT", 16, 351], ["IS_AST_PARENT", 359, 360], ["IS_AST_PARENT", 359, 361], ["IS_AST_PARENT", 358, 359], ["IS_AST_PARENT", 16, 358], ["IS_AST_PARENT", 363, 364], ["IS_AST_PARENT", 363, 365], ["IS_AST_PARENT", 362, 363], ["IS_AST_PARENT", 16, 362], ["IS_AST_PARENT", 368, 369], ["IS_AST_PARENT", 368, 370], ["IS_AST_PARENT", 367, 368], ["IS_AST_PARENT", 367, 371], ["IS_AST_PARENT", 367, 372], ["IS_AST_PARENT", 366, 367], ["IS_AST_PARENT", 16, 366], ["IS_AST_PARENT", 375, 376], ["IS_AST_PARENT", 375, 377], ["IS_AST_PARENT", 374, 375], ["IS_AST_PARENT", 374, 378], ["IS_AST_PARENT", 374, 379], ["IS_AST_PARENT", 373, 374], ["IS_AST_PARENT", 16, 373], ["IS_AST_PARENT", 382, 383], ["IS_AST_PARENT", 382, 384], ["IS_AST_PARENT", 381, 382], ["IS_AST_PARENT", 381, 385], ["IS_AST_PARENT", 381, 386], ["IS_AST_PARENT", 380, 381], ["IS_AST_PARENT", 16, 380], ["IS_AST_PARENT", 389, 390], ["IS_AST_PARENT", 389, 391], ["IS_AST_PARENT", 388, 389], ["IS_AST_PARENT", 388, 392], ["IS_AST_PARENT", 388, 393], ["IS_AST_PARENT", 387, 388], ["IS_AST_PARENT", 16, 387], ["IS_AST_PARENT", 1, 16], ["FLOWS_TO", 394, 12], ["FLOWS_TO", 12, 9], ["FLOWS_TO", 9, 6], ["FLOWS_TO", 6, 3], ["FLOWS_TO", 3, 387], ["FLOWS_TO", 387, 380], ["FLOWS_TO", 380, 373], ["FLOWS_TO", 373, 366], ["FLOWS_TO", 366, 362], ["FLOWS_TO", 362, 358], ["FLOWS_TO", 358, 351], ["FLOWS_TO", 351, 344], ["FLOWS_TO", 344, 339], ["FLOWS_TO", 339, 334], ["FLOWS_TO", 334, 329], ["FLOWS_TO", 329, 317], ["FLOWS_TO", 317, 312], ["FLOWS_TO", 312, 303], ["FLOWS_TO", 303, 296], ["FLOWS_TO", 296, 291], ["FLOWS_TO", 291, 282], ["FLOWS_TO", 282, 276], ["FLOWS_TO", 276, 267], ["FLOWS_TO", 276, 250], ["FLOWS_TO", 267, 265], ["FLOWS_TO", 265, 395], ["FLOWS_TO", 250, 239], ["FLOWS_TO", 239, 226], ["FLOWS_TO", 226, 222], ["FLOWS_TO", 222, 213], ["FLOWS_TO", 222, 172], ["FLOWS_TO", 213, 211], ["FLOWS_TO", 211, 29], ["FLOWS_TO", 172, 170], ["FLOWS_TO", 170, 161], ["FLOWS_TO", 170, 128], ["FLOWS_TO", 161, 159], ["FLOWS_TO", 159, 29], ["FLOWS_TO", 128, 119], ["FLOWS_TO", 128, 107], ["FLOWS_TO", 119, 117], ["FLOWS_TO", 117, 29], ["FLOWS_TO", 107, 98], ["FLOWS_TO", 98, 85], ["FLOWS_TO", 85, 70], ["FLOWS_TO", 70, 55], ["FLOWS_TO", 55, 49], ["FLOWS_TO", 49, 42], ["FLOWS_TO", 42, 33], ["FLOWS_TO", 33, 31], ["FLOWS_TO", 31, 395], ["FLOWS_TO", 29, 27], ["FLOWS_TO", 27, 20], ["FLOWS_TO", 27, 17], ["FLOWS_TO", 20, 17], ["FLOWS_TO", 17, 395], ["USE", 172, 396], ["USE", 195, 396], ["USE", 70, 397], ["USE", 71, 397], ["USE", 55, 397], ["USE", 56, 397], ["DEF", 362, 398], ["DEF", 363, 398], ["USE", 170, 398], ["USE", 317, 399], ["USE", 319, 399], ["DEF", 70, 400], ["DEF", 71, 400], ["USE", 267, 401], ["USE", 272, 401], ["USE", 213, 401], ["USE", 218, 401], ["USE", 161, 401], ["USE", 166, 401], ["USE", 119, 401], ["USE", 124, 401], ["DEF", 107, 402], ["DEF", 108, 402], ["DEF", 282, 403], ["DEF", 284, 403], ["USE", 70, 403], ["USE", 76, 403], ["DEF", 339, 404], ["DEF", 340, 404], ["USE", 172, 404], ["USE", 193, 404], ["DEF", 55, 405], ["DEF", 56, 405], ["DEF", 49, 406], ["DEF", 50, 406], ["USE", 49, 406], ["USE", 50, 406], ["DEF", 3, 407], ["DEF", 373, 408], ["DEF", 374, 408], ["DEF", 226, 408], ["DEF", 227, 408], ["USE", 222, 408], ["USE", 172, 408], ["USE", 175, 408], ["USE", 128, 408], ["USE", 148, 408], ["USE", 107, 408], ["USE", 110, 408], ["USE", 85, 408], ["USE", 88, 408], ["USE", 27, 408], ["USE", 20, 408], ["USE", 23, 408], ["DEF", 334, 409], ["DEF", 335, 409], ["USE", 172, 409], ["USE", 187, 409], ["DEF", 329, 410], ["DEF", 330, 410], ["USE", 250, 410], ["USE", 259, 410], ["USE", 239, 410], ["USE", 246, 410], ["USE", 172, 410], ["USE", 185, 410], ["DEF", 291, 411], ["DEF", 292, 411], ["USE", 128, 411], ["USE", 142, 411], ["USE", 70, 411], ["USE", 78, 411], ["DEF", 380, 412], ["DEF", 381, 412], ["DEF", 42, 412], ["DEF", 43, 412], ["USE", 33, 412], ["USE", 38, 412], ["USE", 31, 412], ["USE", 387, 413], ["USE", 389, 413], ["USE", 380, 413], ["USE", 382, 413], ["USE", 373, 413], ["USE", 375, 413], ["USE", 265, 413], ["USE", 70, 413], ["USE", 74, 413], ["USE", 55, 413], ["USE", 59, 413], ["USE", 17, 413], ["USE", 226, 414], ["USE", 227, 414], ["DEF", 9, 415], ["USE", 317, 415], ["USE", 322, 415], ["USE", 239, 415], ["USE", 244, 415], ["DEF", 317, 416], ["DEF", 319, 416], ["USE", 276, 416], ["USE", 239, 416], ["USE", 242, 416], ["USE", 49, 417], ["USE", 50, 417], ["USE", 128, 418], ["USE", 98, 419], ["USE", 99, 419], ["USE", 366, 420], ["USE", 368, 420], ["USE", 226, 420], ["USE", 230, 420], ["USE", 172, 421], ["USE", 189, 421], ["USE", 213, 422], ["USE", 216, 422], ["USE", 161, 422], ["USE", 164, 422], ["USE", 267, 423], ["USE", 270, 423], ["DEF", 6, 424], ["USE", 172, 425], ["USE", 181, 425], ["DEF", 70, 426], ["DEF", 71, 426], ["DEF", 55, 426], ["DEF", 56, 426], ["DEF", 49, 426], ["DEF", 50, 426], ["USE", 49, 426], ["USE", 50, 426], ["USE", 119, 427], ["USE", 122, 427], ["DEF", 344, 428], ["DEF", 346, 428], ["DEF", 107, 429], ["DEF", 108, 429], ["DEF", 387, 430], ["DEF", 388, 430], ["DEF", 98, 430], ["DEF", 99, 430], ["USE", 85, 430], ["USE", 94, 430], ["USE", 70, 430], ["USE", 82, 430], ["USE", 55, 430], ["USE", 67, 430], ["USE", 49, 430], ["USE", 52, 430], ["USE", 33, 430], ["USE", 36, 430], ["USE", 172, 431], ["USE", 203, 431], ["USE", 128, 432], ["USE", 144, 432], ["DEF", 303, 433], ["DEF", 305, 433], ["USE", 55, 433], ["USE", 61, 433], ["DEF", 358, 434], ["DEF", 359, 434], ["DEF", 312, 435], ["DEF", 313, 435], ["USE", 128, 435], ["USE", 132, 435], ["USE", 55, 435], ["USE", 63, 435], ["USE", 42, 436], ["USE", 43, 436], ["USE", 128, 437], ["USE", 134, 437], ["DEF", 296, 438], ["DEF", 298, 438], ["DEF", 12, 439], ["USE", 98, 439], ["USE", 102, 439], ["USE", 128, 440], ["USE", 138, 440], ["USE", 85, 441], ["USE", 92, 441], ["DEF", 366, 442], ["DEF", 367, 442], ["USE", 107, 442], ["USE", 108, 442], ["USE", 172, 443], ["USE", 199, 443], ["DEF", 351, 444], ["DEF", 353, 444], ["REACHES", 98, 85], ["REACHES", 98, 70], ["REACHES", 98, 55], ["REACHES", 98, 49], ["REACHES", 98, 33], ["REACHES", 362, 170], ["REACHES", 282, 70], ["REACHES", 303, 55], ["REACHES", 339, 172], ["REACHES", 226, 222], ["REACHES", 334, 172], ["REACHES", 226, 172], ["REACHES", 226, 128], ["REACHES", 226, 107], ["REACHES", 226, 85], ["REACHES", 226, 27], ["REACHES", 226, 20], ["REACHES", 312, 128], ["REACHES", 312, 55], ["REACHES", 329, 250], ["REACHES", 329, 239], ["REACHES", 329, 172], ["REACHES", 291, 128], ["REACHES", 291, 70], ["REACHES", 42, 33], ["REACHES", 42, 31], ["REACHES", 9, 317], ["REACHES", 9, 239], ["REACHES", 12, 98], ["REACHES", 317, 276], ["REACHES", 317, 239], ["REACHES", 366, 107], ["REACHES", 55, 49], ["POST_DOM", 31, 33], ["POST_DOM", 282, 291], ["POST_DOM", 303, 312], ["POST_DOM", 3, 6], ["POST_DOM", 17, 20], ["POST_DOM", 366, 373], ["POST_DOM", 395, 222], ["POST_DOM", 395, 394], ["POST_DOM", 17, 27], ["POST_DOM", 98, 107], ["POST_DOM", 159, 161], ["POST_DOM", 395, 31], ["POST_DOM", 334, 339], ["POST_DOM", 296, 303], ["POST_DOM", 358, 362], ["POST_DOM", 276, 282], ["POST_DOM", 70, 85], ["POST_DOM", 387, 3], ["POST_DOM", 27, 29], ["POST_DOM", 373, 380], ["POST_DOM", 312, 317], ["POST_DOM", 6, 9], ["POST_DOM", 9, 12], ["POST_DOM", 29, 159], ["POST_DOM", 265, 267], ["POST_DOM", 317, 329], ["POST_DOM", 395, 17], ["POST_DOM", 395, 395], ["POST_DOM", 29, 211], ["POST_DOM", 395, 265], ["POST_DOM", 42, 49], ["POST_DOM", 395, 170], ["POST_DOM", 85, 98], ["POST_DOM", 170, 172], ["POST_DOM", 49, 55], ["POST_DOM", 239, 250], ["POST_DOM", 226, 239], ["POST_DOM", 395, 128], ["POST_DOM", 329, 334], ["POST_DOM", 344, 351], ["POST_DOM", 380, 387], ["POST_DOM", 117, 119], ["POST_DOM", 291, 296], ["POST_DOM", 55, 70], ["POST_DOM", 222, 226], ["POST_DOM", 33, 42], ["POST_DOM", 395, 276], ["POST_DOM", 351, 358], ["POST_DOM", 362, 366], ["POST_DOM", 29, 117], ["POST_DOM", 339, 344], ["POST_DOM", 211, 213], ["CONTROLS", 128, 33], ["CONTROLS", 128, 27], ["CONTROLS", 128, 107], ["CONTROLS", 128, 31], ["CONTROLS", 128, 85], ["CONTROLS", 128, 29], ["CONTROLS", 128, 17], ["CONTROLS", 128, 49], ["CONTROLS", 128, 98], ["CONTROLS", 128, 55], ["CONTROLS", 128, 119], ["CONTROLS", 128, 70], ["CONTROLS", 128, 42], ["CONTROLS", 128, 117], ["CONTROLS", 394, 291], ["CONTROLS", 394, 312], ["CONTROLS", 394, 6], ["CONTROLS", 394, 373], ["CONTROLS", 394, 339], ["CONTROLS", 394, 303], ["CONTROLS", 394, 362], ["CONTROLS", 394, 282], ["CONTROLS", 394, 3], ["CONTROLS", 394, 380], ["CONTROLS", 394, 317], ["CONTROLS", 394, 9], ["CONTROLS", 394, 12], ["CONTROLS", 394, 329], ["CONTROLS", 394, 334], ["CONTROLS", 394, 351], ["CONTROLS", 394, 387], ["CONTROLS", 394, 296], ["CONTROLS", 394, 276], ["CONTROLS", 394, 358], ["CONTROLS", 394, 366], ["CONTROLS", 394, 344], ["CONTROLS", 27, 20], ["CONTROLS", 222, 27], ["CONTROLS", 222, 29], ["CONTROLS", 222, 17], ["CONTROLS", 222, 211], ["CONTROLS", 222, 170], ["CONTROLS", 222, 172], ["CONTROLS", 222, 213], ["CONTROLS", 276, 222], ["CONTROLS", 276, 267], ["CONTROLS", 276, 265], ["CONTROLS", 276, 250], ["CONTROLS", 276, 239], ["CONTROLS", 276, 226], ["CONTROLS", 170, 27], ["CONTROLS", 170, 161], ["CONTROLS", 170, 29], ["CONTROLS", 170, 159], ["CONTROLS", 170, 17], ["CONTROLS", 170, 128], ["IS_FUNCTION_OF_AST", 0, 1], ["IS_FUNCTION_OF_CFG", 0, 394]]}, "bug_txt": "static EVP_PKEY *ibm_4758_load_pubkey(ENGINE *e, const char *key_id,\n                                      UI_METHOD *ui_method,\n                                      void *callback_data)\n{\n    RSA *rtmp = NULL;\n    EVP_PKEY *res = NULL;\n    unsigned char *keyToken = NULL;\n    long keyTokenLength = MAX_CCA_PKA_TOKEN_SIZE;\n    long returnCode;\n    long reasonCode;\n    long exitDataLength = 0;\n    long ruleArrayLength = 0;\n    unsigned char exitData[8];\n    unsigned char ruleArray[8];\n    unsigned char keyLabel[64];\n    unsigned long keyLabelLength = strlen(key_id);\n    unsigned char modulus[512];\n    long modulusFieldLength = sizeof(modulus);\n    long modulusLength = 0;\n    unsigned char exponent[512];\n    long exponentLength = sizeof(exponent);\n\n    if (keyLabelLength > sizeof(keyLabel)) {\n        CCA4758err(CCA4758_F_IBM_4758_LOAD_PUBKEY,\n                   CCA4758_R_SIZE_TOO_LARGE_OR_TOO_SMALL);\n        return NULL;\n    }\n\n    memset(keyLabel, ' ', sizeof(keyLabel));\n    memcpy(keyLabel, key_id, keyLabelLength);\n\n    keyToken = OPENSSL_malloc(MAX_CCA_PKA_TOKEN_SIZE + sizeof(long));\n    if (!keyToken) {\n        CCA4758err(CCA4758_F_IBM_4758_LOAD_PUBKEY, ERR_R_MALLOC_FAILURE);\n        goto err;\n    }\n\n    keyRecordRead(&returnCode, &reasonCode, &exitDataLength, exitData,\n                  &ruleArrayLength, ruleArray, keyLabel, &keyTokenLength,\n                  keyToken + sizeof(long));\n\n    if (returnCode) {\n        CCA4758err(CCA4758_F_IBM_4758_LOAD_PUBKEY, ERR_R_MALLOC_FAILURE);\n        goto err;\n    }\n\n    if (!getModulusAndExponent(keyToken + sizeof(long), &exponentLength,\n                               exponent, &modulusLength, &modulusFieldLength,\n                               modulus)) {\n        CCA4758err(CCA4758_F_IBM_4758_LOAD_PUBKEY,\n                   CCA4758_R_FAILED_LOADING_PUBLIC_KEY);\n        goto err;\n    }\n\n    (*(long *)keyToken) = keyTokenLength;\n    rtmp = RSA_new_method(e);\n    RSA_set_ex_data(rtmp, hndidx, (char *)keyToken);\n    rtmp->e = BN_bin2bn(exponent, exponentLength, NULL);\n    rtmp->n = BN_bin2bn(modulus, modulusFieldLength, NULL);\n    rtmp->flags |= RSA_FLAG_EXT_PKEY;\n    res = EVP_PKEY_new();\n    EVP_PKEY_assign_RSA(res, rtmp);\n\n    return res;\n err:\n    if (keyToken)\n        OPENSSL_free(keyToken);\n    return NULL;\n}", "bug_tokens": ["static", "evp", "pkey", "*", "ibm", "4758", "load", "pubkey", "(", "engine", "*", "e", ",", "const", "char", "*", "key", "id", ",", "ui", "method", "*", "ui", "method", ",", "void", "*", "callback", "data", ")", "{", "rsa", "*", "rtmp", "=", "null", ";", "evp", "pkey", "*", "res", "=", "null", ";", "unsigned", "char", "*", "key", "token", "=", "null", ";", "long", "key", "token", "length", "=", "max", "cca", "pka", "token", "size", ";", "long", "return", "code", ";", "long", "reason", "code", ";", "long", "exit", "data", "length", "=", "0", ";", "long", "rule", "array", "length", "=", "0", ";", "unsigned", "char", "exit", "data", "[", "8", "]", ";", "unsigned", "char", "rule", "array", "[", "8", "]", ";", "unsigned", "char", "key", "label", "[", "64", "]", ";", "unsigned", "long", "key", "label", "length", "=", "strlen", "(", "key", "id", ")", ";", "unsigned", "char", "modulus", "[", "512", "]", ";", "long", "modulus", "field", "length", "=", "sizeof", "(", "modulus", ")", ";", "long", "modulus", "length", "=", "0", ";", "unsigned", "char", "exponent", "[", "512", "]", ";", "long", "exponent", "length", "=", "sizeof", "(", "exponent", ")", ";", "if", "(", "key", "label", "length", ">", "sizeof", "(", "key", "label", ")", ")", "{", "cca4758err", "(", "cca4758", "f", "ibm", "4758", "load", "pubkey", ",", "cca4758", "r", "size", "too", "large", "or", "too", "small", ")", ";", "return", "null", ";", "}", "memset", "(", "key", "label", ",", "'", "'", ",", "sizeof", "(", "key", "label", ")", ")", ";", "memcpy", "(", "key", "label", ",", "key", "id", ",", "key", "label", "length", ")", ";", "key", "token", "=", "openssl", "malloc", "(", "max", "cca", "pka", "token", "size", "+", "sizeof", "(", "long", ")", ")", ";", "if", "(", "!", "key", "token", ")", "{", "cca4758err", "(", "cca4758", "f", "ibm", "4758", "load", "pubkey", ",", "err", "r", "malloc", "failure", ")", ";", "goto", "err", ";", "}", "key", "record", "read", "(", "&", "return", "code", ",", "&", "reason", "code", ",", "&", "exit", "data", "length", ",", "exit", "data", ",", "&", "rule", "array", "length", ",", "rule", "array", ",", "key", "label", ",", "&", "key", "token", "length", ",", "key", "token", "+", "sizeof", "(", "long", ")", ")", ";", "if", "(", "return", "code", ")", "{", "cca4758err", "(", "cca4758", "f", "ibm", "4758", "load", "pubkey", ",", "err", "r", "malloc", "failure", ")", ";", "goto", "err", ";", "}", "if", "(", "!", "get", "modulus", "and", "exponent", "(", "key", "token", "+", "sizeof", "(", "long", ")", ",", "&", "exponent", "length", ",", "exponent", ",", "&", "modulus", "length", ",", "&", "modulus", "field", "length", ",", "modulus", ")", ")", "{", "cca4758err", "(", "cca4758", "f", "ibm", "4758", "load", "pubkey", ",", "cca4758", "r", "failed", "loading", "public", "key", ")", ";", "goto", "err", ";", "}", "(", "*", "(", "long", "*", ")", "key", "token", ")", "=", "key", "token", "length", ";", "rtmp", "=", "rsa", "new", "method", "(", "e", ")", ";", "rsa", "set", "ex", "data", "(", "rtmp", ",", "hndidx", ",", "(", "char", "*", ")", "key", "token", ")", ";", "rtmp", "-", ">", "e", "=", "bn", "bin2bn", "(", "exponent", ",", "exponent", "length", ",", "null", ")", ";", "rtmp", "-", ">", "n", "=", "bn", "bin2bn", "(", "modulus", ",", "modulus", "field", "length", ",", "null", ")", ";", "rtmp", "-", ">", "flags", "|", "=", "rsa", "flag", "ext", "pkey", ";", "res", "=", "evp", "pkey", "new", "(", ")", ";", "evp", "pkey", "assign", "rsa", "(", "res", ",", "rtmp", ")", ";", "return", "res", ";", "err", ":", "if", "(", "key", "token", ")", "openssl", "free", "(", "key", "token", ")", ";", "return", "null", ";", "}"], "bug_func": "data_process/data/d2a/func/nonvuln/single/openssl-ff401af6af575e5a29f6abb37cfa1f3e7baf0ae2_0-auto_labeler-BUFFER_OVERRUN_L5-bug_function.c", "file": "data_process/data/d2a/func/nonvuln/multi/openssl-ff401af6af575e5a29f6abb37cfa1f3e7baf0ae2_0-auto_labeler-BUFFER_OVERRUN_L5-multi_function.c", "vul_type": "nonvuln", "target": 0}