{"bo_slices": [{"nodes": [{"type": "PARAM", "childNum": "0", "ID": 40, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 42, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 41, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGENTRYNODE", "ID": 43, "code": "ENTRY"}, {"type": "Function", "ID": 39, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 40, 42], ["REACHES", 40, 41], ["REACHES", 42, 41], ["CONTROLS", 43, 42], ["CONTROLS", 43, 40], ["CONTROLS", 43, 41], ["IS_FUNCTION_OF_CFG", 39, 43], ["REACHES", 34, 37], ["REACHES", 34, 36], ["REACHES", 34, 35], ["CONTROLS", 36, 35], ["CONTROLS", 38, 34], ["CONTROLS", 38, 37], ["CONTROLS", 38, 36], ["IS_FUNCTION_OF_CFG", 33, 38], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 35, 39], ["CONTROLS", 37, 39], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 40, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 41, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "CFGENTRYNODE", "ID": 42, "code": "ENTRY"}, {"type": "Function", "ID": 39, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 40, 41], ["CONTROLS", 42, 40], ["CONTROLS", 42, 41], ["IS_FUNCTION_OF_CFG", 39, 42], ["REACHES", 34, 37], ["REACHES", 34, 36], ["REACHES", 34, 35], ["CONTROLS", 36, 35], ["CONTROLS", 38, 34], ["CONTROLS", 38, 37], ["CONTROLS", 38, 36], ["IS_FUNCTION_OF_CFG", 33, 38], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 35, 39], ["CONTROLS", 37, 39], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 40, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 41, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "CFGENTRYNODE", "ID": 42, "code": "ENTRY"}, {"type": "Function", "ID": 39, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 40, 41], ["CONTROLS", 42, 41], ["CONTROLS", 42, 40], ["IS_FUNCTION_OF_CFG", 39, 42], ["REACHES", 34, 37], ["REACHES", 34, 36], ["REACHES", 34, 35], ["CONTROLS", 36, 35], ["CONTROLS", 38, 34], ["CONTROLS", 38, 37], ["CONTROLS", 38, 36], ["IS_FUNCTION_OF_CFG", 33, 38], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 35, 39], ["CONTROLS", 37, 39], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 40, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 41, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "CFGENTRYNODE", "ID": 42, "code": "ENTRY"}, {"type": "Function", "ID": 39, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 40, 41], ["CONTROLS", 42, 41], ["CONTROLS", 42, 40], ["IS_FUNCTION_OF_CFG", 39, 42], ["REACHES", 34, 37], ["REACHES", 34, 36], ["REACHES", 34, 35], ["CONTROLS", 36, 35], ["CONTROLS", 38, 34], ["CONTROLS", 38, 37], ["CONTROLS", 38, 36], ["IS_FUNCTION_OF_CFG", 33, 38], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 35, 39], ["CONTROLS", 37, 39], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "PARAM", "childNum": "4", "ID": 29, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 37, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 49, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 34, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 31, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 48, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 38, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "PARAM", "childNum": "3", "ID": 30, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 47, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 45, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 40, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 43, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 33, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 39, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 44, "code": "ctx -> md", "location": "117"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 50, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 35, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 41, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 46, "code": "reset = 1", "location": "115"}, {"type": "PARAM", "childNum": "1", "ID": 32, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 42, "code": "key != NULL", "location": "123"}, {"type": "CFGENTRYNODE", "ID": 51, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_Init_ex"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 29, 37], ["REACHES", 49, 34], ["REACHES", 31, 48], ["REACHES", 31, 38], ["REACHES", 31, 37], ["REACHES", 31, 36], ["REACHES", 30, 47], ["REACHES", 30, 48], ["REACHES", 30, 45], ["REACHES", 30, 40], ["REACHES", 43, 40], ["REACHES", 30, 37], ["REACHES", 43, 37], ["REACHES", 33, 39], ["REACHES", 33, 48], ["REACHES", 33, 45], ["REACHES", 33, 44], ["REACHES", 33, 43], ["REACHES", 33, 37], ["REACHES", 33, 36], ["REACHES", 50, 35], ["REACHES", 41, 35], ["REACHES", 46, 35], ["REACHES", 32, 48], ["REACHES", 32, 42], ["REACHES", 32, 37], ["REACHES", 40, 39], ["REACHES", 40, 38], ["REACHES", 45, 39], ["REACHES", 45, 37], ["REACHES", 45, 36], ["CONTROLS", 51, 50], ["CONTROLS", 51, 29], ["CONTROLS", 51, 32], ["CONTROLS", 51, 49], ["CONTROLS", 51, 48], ["CONTROLS", 51, 31], ["CONTROLS", 51, 33], ["CONTROLS", 51, 30], ["CONTROLS", 42, 39], ["CONTROLS", 42, 41], ["CONTROLS", 42, 40], ["CONTROLS", 42, 35], ["CONTROLS", 47, 42], ["CONTROLS", 47, 46], ["CONTROLS", 47, 45], ["CONTROLS", 47, 44], ["CONTROLS", 44, 42], ["CONTROLS", 44, 43], ["CONTROLS", 39, 38], ["CONTROLS", 36, 35], ["CONTROLS", 48, 47], ["CONTROLS", 37, 35], ["CONTROLS", 38, 36], ["CONTROLS", 38, 37], ["CONTROLS", 35, 34], ["IS_FUNCTION_OF_CFG", 28, 51], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["CONTROLS", 7, 28]]}, {"nodes": [{"type": "PARAM", "childNum": "4", "ID": 29, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 38, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "PARAM", "childNum": "2", "ID": 31, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 47, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 39, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 37, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 36, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 30, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 46, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 45, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 41, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 43, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 33, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 40, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 44, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 34, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 35, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "PARAM", "childNum": "1", "ID": 32, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 42, "code": "key != NULL", "location": "123"}, {"type": "CFGENTRYNODE", "ID": 48, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_Init_ex"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 29, 38], ["REACHES", 31, 47], ["REACHES", 31, 39], ["REACHES", 31, 38], ["REACHES", 31, 37], ["REACHES", 31, 36], ["REACHES", 30, 46], ["REACHES", 30, 47], ["REACHES", 30, 45], ["REACHES", 30, 41], ["REACHES", 43, 41], ["REACHES", 30, 38], ["REACHES", 43, 38], ["REACHES", 33, 40], ["REACHES", 33, 47], ["REACHES", 33, 45], ["REACHES", 33, 44], ["REACHES", 33, 43], ["REACHES", 33, 38], ["REACHES", 33, 37], ["REACHES", 33, 34], ["REACHES", 33, 36], ["REACHES", 33, 35], ["REACHES", 36, 35], ["REACHES", 36, 34], ["REACHES", 32, 47], ["REACHES", 32, 42], ["REACHES", 32, 38], ["REACHES", 41, 40], ["REACHES", 41, 39], ["REACHES", 45, 40], ["REACHES", 45, 38], ["REACHES", 45, 37], ["REACHES", 45, 35], ["REACHES", 36, 34], ["REACHES", 36, 35], ["REACHES", 45, 34], ["CONTROLS", 48, 29], ["CONTROLS", 48, 32], ["CONTROLS", 48, 47], ["CONTROLS", 48, 31], ["CONTROLS", 48, 33], ["CONTROLS", 48, 30], ["CONTROLS", 42, 40], ["CONTROLS", 42, 41], ["CONTROLS", 46, 42], ["CONTROLS", 46, 45], ["CONTROLS", 46, 44], ["CONTROLS", 44, 42], ["CONTROLS", 44, 43], ["CONTROLS", 40, 39], ["CONTROLS", 37, 35], ["CONTROLS", 37, 36], ["CONTROLS", 47, 46], ["CONTROLS", 38, 35], ["CONTROLS", 39, 37], ["CONTROLS", 39, 38], ["CONTROLS", 35, 34], ["IS_FUNCTION_OF_CFG", 28, 48], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["CONTROLS", 7, 28]]}, {"nodes": [{"type": "PARAM", "childNum": "2", "ID": 30, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 43, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 35, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 34, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 33, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "PARAM", "childNum": "3", "ID": 29, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 42, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 41, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 37, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 39, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 32, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 40, "code": "ctx -> md", "location": "117"}, {"type": "PARAM", "childNum": "1", "ID": 31, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 38, "code": "key != NULL", "location": "123"}, {"type": "CFGENTRYNODE", "ID": 44, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_Init_ex"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 30, 43], ["REACHES", 30, 35], ["REACHES", 30, 34], ["REACHES", 30, 33], ["REACHES", 29, 42], ["REACHES", 29, 43], ["REACHES", 29, 41], ["REACHES", 29, 37], ["REACHES", 39, 37], ["REACHES", 32, 36], ["REACHES", 32, 43], ["REACHES", 32, 41], ["REACHES", 32, 40], ["REACHES", 32, 39], ["REACHES", 32, 34], ["REACHES", 32, 33], ["REACHES", 31, 43], ["REACHES", 31, 38], ["REACHES", 31, 33], ["REACHES", 37, 36], ["REACHES", 37, 35], ["REACHES", 41, 36], ["REACHES", 41, 34], ["REACHES", 41, 33], ["CONTROLS", 44, 31], ["CONTROLS", 44, 43], ["CONTROLS", 44, 30], ["CONTROLS", 44, 32], ["CONTROLS", 44, 29], ["CONTROLS", 38, 36], ["CONTROLS", 38, 37], ["CONTROLS", 42, 38], ["CONTROLS", 42, 41], ["CONTROLS", 42, 40], ["CONTROLS", 40, 38], ["CONTROLS", 40, 39], ["CONTROLS", 36, 35], ["CONTROLS", 34, 33], ["CONTROLS", 43, 42], ["CONTROLS", 35, 34], ["IS_FUNCTION_OF_CFG", 28, 44], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["CONTROLS", 7, 28]]}, {"nodes": [{"type": "PARAM", "childNum": "2", "ID": 30, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 38, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "PARAM", "childNum": "3", "ID": 29, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 37, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 33, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 32, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "ctx -> md", "location": "117"}, {"type": "PARAM", "childNum": "1", "ID": 31, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 34, "code": "key != NULL", "location": "123"}, {"type": "CFGENTRYNODE", "ID": 39, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_Init_ex"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 30, 38], ["REACHES", 29, 37], ["REACHES", 29, 38], ["REACHES", 29, 33], ["REACHES", 35, 33], ["REACHES", 32, 38], ["REACHES", 32, 36], ["REACHES", 32, 35], ["REACHES", 31, 38], ["REACHES", 31, 34], ["CONTROLS", 39, 31], ["CONTROLS", 39, 38], ["CONTROLS", 39, 30], ["CONTROLS", 39, 32], ["CONTROLS", 39, 29], ["CONTROLS", 34, 33], ["CONTROLS", 37, 34], ["CONTROLS", 37, 36], ["CONTROLS", 36, 34], ["CONTROLS", 36, 35], ["CONTROLS", 38, 37], ["IS_FUNCTION_OF_CFG", 28, 39], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["CONTROLS", 7, 28]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "CFGENTRYNODE", "ID": 37, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 34, 36], ["REACHES", 34, 35], ["CONTROLS", 36, 35], ["CONTROLS", 37, 34], ["CONTROLS", 37, 36], ["IS_FUNCTION_OF_CFG", 33, 37], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "CFGENTRYNODE", "ID": 36, "code": "ENTRY"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "CFGENTRYNODE", "ID": 32, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 34, 35], ["CONTROLS", 36, 34], ["CONTROLS", 36, 35], ["IS_FUNCTION_OF_CFG", 33, 36], ["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 31, 30], ["REACHES", 31, 29], ["CONTROLS", 32, 31], ["CONTROLS", 32, 30], ["CONTROLS", 30, 29], ["IS_FUNCTION_OF_CFG", 28, 32], ["CONTROLS", 7, 28], ["CONTROLS", 29, 33]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "17", "ID": 14, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 22, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 21, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 20, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 17, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 27, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 7, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 24, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 23, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 25, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 16, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 26, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 18, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 15, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 13, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 28, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 14, 12], ["REACHES", 3, 8], ["REACHES", 6, 22], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 17], ["REACHES", 6, 8], ["REACHES", 27, 8], ["REACHES", 8, 7], ["REACHES", 1, 24], ["REACHES", 23, 9], ["REACHES", 1, 9], ["REACHES", 25, 16], ["REACHES", 26, 10], ["REACHES", 26, 9], ["REACHES", 26, 8], ["REACHES", 21, 10], ["REACHES", 21, 9], ["REACHES", 2, 8], ["REACHES", 20, 10], ["REACHES", 5, 10], ["REACHES", 20, 9], ["REACHES", 5, 9], ["REACHES", 17, 10], ["REACHES", 18, 10], ["REACHES", 17, 9], ["REACHES", 18, 9], ["REACHES", 4, 10], ["REACHES", 4, 9], ["REACHES", 15, 13], ["REACHES", 11, 10], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 11, 8], ["REACHES", 16, 15], ["REACHES", 16, 14], ["REACHES", 16, 10], ["REACHES", 16, 9], ["REACHES", 16, 8], ["CONTROLS", 8, 7], ["CONTROLS", 28, 5], ["CONTROLS", 28, 3], ["CONTROLS", 28, 2], ["CONTROLS", 28, 1], ["CONTROLS", 28, 6], ["CONTROLS", 28, 22], ["CONTROLS", 28, 27], ["CONTROLS", 28, 25], ["CONTROLS", 28, 4], ["CONTROLS", 28, 24], ["CONTROLS", 28, 26], ["CONTROLS", 9, 8], ["CONTROLS", 12, 11], ["CONTROLS", 12, 9], ["CONTROLS", 12, 10], ["CONTROLS", 13, 12], ["CONTROLS", 16, 14], ["CONTROLS", 16, 13], ["CONTROLS", 16, 15], ["CONTROLS", 22, 20], ["CONTROLS", 22, 21], ["CONTROLS", 22, 19], ["CONTROLS", 22, 16], ["CONTROLS", 24, 23], ["CONTROLS", 10, 8], ["CONTROLS", 19, 18], ["CONTROLS", 19, 17], ["IS_FUNCTION_OF_CFG", 0, 28]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "17", "ID": 14, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 22, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 21, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 20, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 17, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 27, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 7, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 24, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 23, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 25, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 16, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 26, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 18, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 15, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 13, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 28, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 14, 12], ["REACHES", 3, 8], ["REACHES", 6, 22], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 17], ["REACHES", 6, 8], ["REACHES", 27, 8], ["REACHES", 8, 7], ["REACHES", 1, 24], ["REACHES", 23, 9], ["REACHES", 1, 9], ["REACHES", 25, 16], ["REACHES", 26, 10], ["REACHES", 26, 9], ["REACHES", 26, 8], ["REACHES", 21, 10], ["REACHES", 21, 9], ["REACHES", 2, 8], ["REACHES", 20, 10], ["REACHES", 5, 10], ["REACHES", 20, 9], ["REACHES", 5, 9], ["REACHES", 17, 10], ["REACHES", 18, 10], ["REACHES", 17, 9], ["REACHES", 18, 9], ["REACHES", 4, 10], ["REACHES", 4, 9], ["REACHES", 15, 13], ["REACHES", 11, 10], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 11, 8], ["REACHES", 16, 15], ["REACHES", 16, 14], ["REACHES", 16, 10], ["REACHES", 16, 9], ["REACHES", 16, 8], ["CONTROLS", 8, 7], ["CONTROLS", 28, 5], ["CONTROLS", 28, 3], ["CONTROLS", 28, 2], ["CONTROLS", 28, 1], ["CONTROLS", 28, 6], ["CONTROLS", 28, 22], ["CONTROLS", 28, 27], ["CONTROLS", 28, 25], ["CONTROLS", 28, 4], ["CONTROLS", 28, 24], ["CONTROLS", 28, 26], ["CONTROLS", 9, 8], ["CONTROLS", 12, 11], ["CONTROLS", 12, 9], ["CONTROLS", 12, 10], ["CONTROLS", 13, 12], ["CONTROLS", 16, 14], ["CONTROLS", 16, 13], ["CONTROLS", 16, 15], ["CONTROLS", 22, 20], ["CONTROLS", 22, 21], ["CONTROLS", 22, 19], ["CONTROLS", 22, 16], ["CONTROLS", 24, 23], ["CONTROLS", 10, 8], ["CONTROLS", 19, 18], ["CONTROLS", 19, 17], ["IS_FUNCTION_OF_CFG", 0, 28]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 1, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 5, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 2, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "CFGENTRYNODE", "ID": 6, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 1, 4], ["REACHES", 5, 3], ["REACHES", 3, 2], ["CONTROLS", 6, 1], ["CONTROLS", 6, 4], ["CONTROLS", 6, 5], ["CONTROLS", 3, 2], ["CONTROLS", 4, 3], ["IS_FUNCTION_OF_CFG", 0, 6]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 1, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 5, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 2, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "CFGENTRYNODE", "ID": 6, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 1, 4], ["REACHES", 5, 3], ["REACHES", 3, 2], ["CONTROLS", 6, 1], ["CONTROLS", 6, 4], ["CONTROLS", 6, 5], ["CONTROLS", 3, 2], ["CONTROLS", 4, 3], ["IS_FUNCTION_OF_CFG", 0, 6]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 1, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "IDENDECLSTATE", "childNum": "6", "ID": 4, "code": "const X509_ALGOR * macalg ;", "location": "15"}, {"type": "EXPRSTATE", "childNum": "14", "ID": 2, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )", "location": "33"}, {"type": "CFGENTRYNODE", "ID": 5, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 1, 3], ["REACHES", 4, 2], ["CONTROLS", 5, 1], ["CONTROLS", 5, 4], ["CONTROLS", 5, 3], ["CONTROLS", 3, 2], ["IS_FUNCTION_OF_CFG", 0, 5]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 1, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "13", "ID": 2, "code": "X509_SIG_get0 ( p12 -> mac -> dinfo , & macalg , NULL )", "location": "32"}, {"type": "CFGENTRYNODE", "ID": 4, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 1, 3], ["REACHES", 1, 2], ["CONTROLS", 4, 1], ["CONTROLS", 4, 3], ["CONTROLS", 3, 2], ["IS_FUNCTION_OF_CFG", 0, 4]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 1, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 2, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "CFGENTRYNODE", "ID": 5, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 1, 4], ["REACHES", 1, 3], ["REACHES", 1, 2], ["CONTROLS", 5, 1], ["CONTROLS", 5, 4], ["CONTROLS", 4, 3], ["CONTROLS", 3, 2], ["IS_FUNCTION_OF_CFG", 0, 5]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "PARAM", "childNum": "3", "ID": 3, "code": "unsigned char * mac", "location": "2"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "PARAM", "childNum": "0", "ID": 6, "code": "PKCS12 * p12", "location": "1"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 20, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 19, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 16, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 26, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "PARAM", "childNum": "5", "ID": 1, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 22, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 24, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 25, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 9, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "PARAM", "childNum": "4", "ID": 2, "code": "unsigned int * maclen", "location": "2"}, {"type": "PARAM", "childNum": "1", "ID": 5, "code": "const char * pass", "location": "1"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 17, "code": "iter = 1", "location": "29"}, {"type": "PARAM", "childNum": "2", "ID": 4, "code": "int passlen", "location": "1"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 14, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 32, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 31, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 29, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "CFGENTRYNODE", "ID": 33, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 13, 11], ["REACHES", 3, 7], ["REACHES", 6, 21], ["REACHES", 6, 20], ["REACHES", 6, 19], ["REACHES", 6, 18], ["REACHES", 6, 16], ["REACHES", 6, 7], ["REACHES", 26, 7], ["REACHES", 1, 23], ["REACHES", 22, 8], ["REACHES", 1, 8], ["REACHES", 24, 15], ["REACHES", 25, 9], ["REACHES", 25, 8], ["REACHES", 25, 7], ["REACHES", 20, 9], ["REACHES", 20, 8], ["REACHES", 2, 7], ["REACHES", 19, 9], ["REACHES", 5, 9], ["REACHES", 19, 8], ["REACHES", 5, 8], ["REACHES", 16, 9], ["REACHES", 17, 9], ["REACHES", 16, 8], ["REACHES", 17, 8], ["REACHES", 4, 9], ["REACHES", 4, 8], ["REACHES", 14, 12], ["REACHES", 10, 9], ["REACHES", 14, 8], ["REACHES", 14, 7], ["REACHES", 10, 7], ["REACHES", 15, 14], ["REACHES", 15, 13], ["REACHES", 15, 9], ["REACHES", 15, 8], ["REACHES", 15, 7], ["CONTROLS", 27, 5], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 1], ["CONTROLS", 27, 6], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 4], ["CONTROLS", 27, 23], ["CONTROLS", 27, 25], ["CONTROLS", 8, 7], ["CONTROLS", 11, 10], ["CONTROLS", 11, 8], ["CONTROLS", 11, 9], ["CONTROLS", 12, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 12], ["CONTROLS", 15, 14], ["CONTROLS", 21, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 18], ["CONTROLS", 21, 15], ["CONTROLS", 23, 22], ["CONTROLS", 9, 7], ["CONTROLS", 18, 17], ["CONTROLS", 18, 16], ["IS_FUNCTION_OF_CFG", 0, 27], ["REACHES", 32, 31], ["REACHES", 32, 30], ["REACHES", 32, 29], ["CONTROLS", 33, 32], ["CONTROLS", 33, 31], ["CONTROLS", 30, 29], ["CONTROLS", 31, 30], ["IS_FUNCTION_OF_CFG", 28, 33], ["CONTROLS", 7, 28]]}], "ml_slices": [{"nodes": [{"type": "EXPRSTATE", "childNum": "2", "ID": 22, "code": "ctx -> key_length = len", "location": "138"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 20, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 4, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 0, "code": "return rv ;", "location": "164"}, {"type": "FORINIT", "childNum": "0", "ID": 18, "code": "i = 0 ;", "location": "146"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 15, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "INCDECOP", "childNum": "2", "ID": 16, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 17, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 10, "code": "i ++", "location": "152"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 9, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "FORINIT", "childNum": "0", "ID": 12, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 11, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 31, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 28, "code": "j < len", "location": "128"}, {"type": "CFGEXITNODE", "ID": 32, "code": "EXIT"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 6, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 13, "code": "goto err ;", "location": "150"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "reset", "location": "145"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 29, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 25, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 24, "code": "return 0 ;", "location": "136"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 23, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "LABEL", "childNum": "9", "ID": 3, "code": "err :", "location": "161"}, {"type": "COND", "childNum": "0", "ID": 2, "code": "reset", "location": "162"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 26, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 7, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 5, "code": "goto err ;", "location": "159"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 1, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}], "edges": [["REACHES", 22, 21], ["REACHES", 22, 20], ["REACHES", 4, 0], ["REACHES", 18, 15], ["REACHES", 18, 16], ["REACHES", 18, 17], ["REACHES", 16, 17], ["REACHES", 16, 16], ["REACHES", 16, 15], ["REACHES", 10, 9], ["REACHES", 12, 11], ["REACHES", 10, 10], ["REACHES", 12, 9], ["REACHES", 10, 11], ["REACHES", 12, 10], ["REACHES", 31, 30], ["REACHES", 31, 28], ["REACHES", 22, 32], ["REACHES", 22, 15], ["REACHES", 22, 8], ["REACHES", 22, 14], ["REACHES", 22, 6], ["REACHES", 22, 20], ["REACHES", 22, 21], ["REACHES", 22, 9], ["REACHES", 15, 15], ["REACHES", 9, 9], ["REACHES", 15, 9], ["CONTROLS", 11, 10], ["CONTROLS", 11, 9], ["CONTROLS", 14, 11], ["CONTROLS", 14, 13], ["CONTROLS", 14, 12], ["CONTROLS", 14, 8], ["CONTROLS", 19, 14], ["CONTROLS", 19, 6], ["CONTROLS", 19, 17], ["CONTROLS", 19, 18], ["CONTROLS", 30, 28], ["CONTROLS", 30, 29], ["CONTROLS", 25, 24], ["CONTROLS", 25, 19], ["CONTROLS", 25, 23], ["CONTROLS", 25, 21], ["CONTROLS", 25, 0], ["CONTROLS", 25, 22], ["CONTROLS", 25, 3], ["CONTROLS", 25, 2], ["CONTROLS", 27, 19], ["CONTROLS", 27, 21], ["CONTROLS", 27, 0], ["CONTROLS", 27, 3], ["CONTROLS", 27, 2], ["CONTROLS", 27, 26], ["CONTROLS", 28, 25], ["CONTROLS", 28, 27], ["CONTROLS", 21, 20], ["CONTROLS", 8, 6], ["CONTROLS", 8, 7], ["CONTROLS", 6, 5], ["CONTROLS", 6, 4], ["CONTROLS", 17, 16], ["CONTROLS", 17, 15], ["CONTROLS", 2, 1]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 36, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 35, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 34, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 33, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 32, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 39, "code": "EXIT"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 30, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "4", "ID": 41, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 73, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 60, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 54, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 88, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 61, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 55, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 47, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 43, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 87, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 74, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 71, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 69, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 68, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 42, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 83, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 77, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 81, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 45, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 76, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 82, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 66, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 52, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "0", "ID": 67, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 89, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 65, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 78, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 84, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 48, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 50, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 46, "code": "return rv ;", "location": "164"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 90, "code": "int rv = 0 ;", "location": "106"}, {"type": "PARAM", "childNum": "1", "ID": 44, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 79, "code": "key != NULL", "location": "123"}, {"type": "FORINIT", "childNum": "0", "ID": 64, "code": "i = 0 ;", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 62, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 63, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 56, "code": "i ++", "location": "152"}, {"type": "FORINIT", "childNum": "0", "ID": 58, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 57, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "CFGEXITNODE", "ID": 92, "code": "EXIT"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 59, "code": "goto err ;", "location": "150"}, {"type": "CFGENTRYNODE", "ID": 91, "code": "ENTRY"}, {"type": "LABEL", "childNum": "9", "ID": 49, "code": "err :", "location": "161"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 80, "code": "return 0 ;", "location": "120"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 75, "code": "return 0 ;", "location": "127"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 70, "code": "return 0 ;", "location": "136"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 86, "code": "return 0 ;", "location": "112"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 72, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 53, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 51, "code": "goto err ;", "location": "159"}, {"type": "Function", "ID": 40, "name": "HMAC_Init_ex"}, {"type": "PARAM", "childNum": "0", "ID": 23, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 28, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 26, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 24, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 25, "code": "return 0 ;", "location": "88"}, {"type": "CFGENTRYNODE", "ID": 29, "code": "ENTRY"}, {"type": "Function", "ID": 22, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 13, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 20, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 17, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 15, "code": "return ctx ;", "location": "80"}, {"type": "CFGENTRYNODE", "ID": 21, "code": "ENTRY"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 16, "code": "return NULL ;", "location": "77"}, {"type": "Function", "ID": 14, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 31, 37], ["REACHES", 31, 36], ["REACHES", 31, 35], ["REACHES", 31, 34], ["REACHES", 31, 33], ["REACHES", 31, 32], ["REACHES", 33, 39], ["REACHES", 33, 32], ["CONTROLS", 38, 33], ["CONTROLS", 38, 34], ["CONTROLS", 38, 36], ["CONTROLS", 38, 37], ["CONTROLS", 38, 31], ["CONTROLS", 38, 35], ["CONTROLS", 38, 32], ["IS_FUNCTION_OF_CFG", 30, 38], ["REACHES", 41, 73], ["REACHES", 41, 60], ["REACHES", 41, 54], ["REACHES", 88, 61], ["REACHES", 88, 60], ["REACHES", 88, 55], ["REACHES", 88, 54], ["REACHES", 88, 47], ["REACHES", 43, 87], ["REACHES", 43, 74], ["REACHES", 43, 73], ["REACHES", 43, 71], ["REACHES", 43, 69], ["REACHES", 43, 68], ["REACHES", 42, 85], ["REACHES", 42, 87], ["REACHES", 42, 83], ["REACHES", 42, 77], ["REACHES", 81, 77], ["REACHES", 42, 73], ["REACHES", 42, 54], ["REACHES", 81, 73], ["REACHES", 42, 60], ["REACHES", 81, 54], ["REACHES", 81, 60], ["REACHES", 45, 76], ["REACHES", 45, 87], ["REACHES", 45, 54], ["REACHES", 45, 83], ["REACHES", 45, 82], ["REACHES", 45, 81], ["REACHES", 45, 73], ["REACHES", 45, 60], ["REACHES", 45, 71], ["REACHES", 45, 66], ["REACHES", 45, 69], ["REACHES", 45, 68], ["REACHES", 45, 55], ["REACHES", 45, 61], ["REACHES", 45, 52], ["REACHES", 45, 67], ["REACHES", 89, 65], ["REACHES", 78, 65], ["REACHES", 84, 65], ["REACHES", 89, 48], ["REACHES", 78, 48], ["REACHES", 84, 48], ["REACHES", 68, 67], ["REACHES", 68, 66], ["REACHES", 50, 46], ["REACHES", 90, 46], ["REACHES", 44, 87], ["REACHES", 44, 79], ["REACHES", 44, 73], ["REACHES", 44, 69], ["REACHES", 64, 61], ["REACHES", 64, 62], ["REACHES", 64, 63], ["REACHES", 62, 63], ["REACHES", 62, 62], ["REACHES", 62, 61], ["REACHES", 56, 55], ["REACHES", 58, 57], ["REACHES", 56, 56], ["REACHES", 58, 55], ["REACHES", 56, 57], ["REACHES", 58, 56], ["REACHES", 77, 76], ["REACHES", 77, 74], ["REACHES", 83, 76], ["REACHES", 83, 92], ["REACHES", 68, 92], ["REACHES", 68, 61], ["REACHES", 68, 54], ["REACHES", 83, 73], ["REACHES", 83, 71], ["REACHES", 83, 55], ["REACHES", 83, 60], ["REACHES", 68, 60], ["REACHES", 83, 69], ["REACHES", 83, 67], ["REACHES", 83, 52], ["REACHES", 83, 54], ["REACHES", 68, 52], ["REACHES", 68, 66], ["REACHES", 68, 67], ["REACHES", 83, 66], ["REACHES", 83, 61], ["REACHES", 68, 55], ["REACHES", 61, 61], ["REACHES", 55, 55], ["REACHES", 61, 55], ["CONTROLS", 57, 56], ["CONTROLS", 57, 55], ["CONTROLS", 60, 57], ["CONTROLS", 60, 59], ["CONTROLS", 60, 58], ["CONTROLS", 60, 54], ["CONTROLS", 91, 89], ["CONTROLS", 91, 41], ["CONTROLS", 91, 44], ["CONTROLS", 91, 88], ["CONTROLS", 91, 87], ["CONTROLS", 91, 43], ["CONTROLS", 91, 45], ["CONTROLS", 91, 90], ["CONTROLS", 91, 42], ["CONTROLS", 65, 60], ["CONTROLS", 65, 52], ["CONTROLS", 65, 63], ["CONTROLS", 65, 64], ["CONTROLS", 79, 76], ["CONTROLS", 79, 65], ["CONTROLS", 79, 78], ["CONTROLS", 79, 46], ["CONTROLS", 79, 77], ["CONTROLS", 79, 49], ["CONTROLS", 79, 48], ["CONTROLS", 85, 79], ["CONTROLS", 85, 84], ["CONTROLS", 85, 83], ["CONTROLS", 85, 82], ["CONTROLS", 82, 79], ["CONTROLS", 82, 80], ["CONTROLS", 82, 81], ["CONTROLS", 76, 74], ["CONTROLS", 76, 75], ["CONTROLS", 71, 70], ["CONTROLS", 71, 65], ["CONTROLS", 71, 69], ["CONTROLS", 71, 67], ["CONTROLS", 71, 46], ["CONTROLS", 71, 68], ["CONTROLS", 71, 49], ["CONTROLS", 71, 48], ["CONTROLS", 87, 85], ["CONTROLS", 87, 86], ["CONTROLS", 73, 65], ["CONTROLS", 73, 67], ["CONTROLS", 73, 46], ["CONTROLS", 73, 49], ["CONTROLS", 73, 48], ["CONTROLS", 73, 72], ["CONTROLS", 74, 71], ["CONTROLS", 74, 73], ["CONTROLS", 67, 66], ["CONTROLS", 54, 52], ["CONTROLS", 54, 53], ["CONTROLS", 52, 51], ["CONTROLS", 52, 50], ["CONTROLS", 63, 62], ["CONTROLS", 63, 61], ["CONTROLS", 48, 47], ["IS_FUNCTION_OF_CFG", 40, 91], ["REACHES", 23, 28], ["REACHES", 23, 27], ["REACHES", 23, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 26], ["CONTROLS", 27, 25], ["CONTROLS", 29, 23], ["CONTROLS", 29, 28], ["CONTROLS", 29, 27], ["IS_FUNCTION_OF_CFG", 22, 29], ["REACHES", 13, 12], ["REACHES", 4, 3], ["REACHES", 4, 1], ["REACHES", 11, 10], ["REACHES", 11, 4], ["CONTROLS", 4, 2], ["CONTROLS", 4, 1], ["CONTROLS", 4, 0], ["CONTROLS", 4, 3], ["CONTROLS", 7, 6], ["CONTROLS", 7, 5], ["CONTROLS", 7, 4], ["CONTROLS", 12, 11], ["CONTROLS", 12, 7], ["CONTROLS", 12, 10], ["CONTROLS", 10, 8], ["CONTROLS", 10, 9], ["CONTROLS", 10, 4], ["REACHES", 20, 19], ["REACHES", 20, 18], ["REACHES", 20, 17], ["REACHES", 20, 15], ["CONTROLS", 21, 20], ["CONTROLS", 21, 19], ["CONTROLS", 18, 16], ["CONTROLS", 18, 15], ["CONTROLS", 18, 17], ["CONTROLS", 19, 18], ["CONTROLS", 19, 15], ["IS_FUNCTION_OF_CFG", 14, 21], ["CONTROLS", 26, 30], ["CONTROLS", 28, 30], ["CONTROLS", 4, 40], ["CONTROLS", 4, 14], ["CONTROLS", 18, 22]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 33, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 39, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 38, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 37, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 36, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 35, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 34, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 41, "code": "EXIT"}, {"type": "CFGENTRYNODE", "ID": 40, "code": "ENTRY"}, {"type": "Function", "ID": 32, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "4", "ID": 43, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 75, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 62, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 56, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 90, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 63, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 57, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 49, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 45, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 89, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 76, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 73, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 71, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 70, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 44, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 87, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 85, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 79, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 83, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 47, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 78, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 84, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 68, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 54, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "0", "ID": 69, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 91, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 67, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 80, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 86, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 50, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 52, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 48, "code": "return rv ;", "location": "164"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 92, "code": "int rv = 0 ;", "location": "106"}, {"type": "PARAM", "childNum": "1", "ID": 46, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 81, "code": "key != NULL", "location": "123"}, {"type": "FORINIT", "childNum": "0", "ID": 66, "code": "i = 0 ;", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 64, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 65, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 58, "code": "i ++", "location": "152"}, {"type": "FORINIT", "childNum": "0", "ID": 60, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 59, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "CFGEXITNODE", "ID": 94, "code": "EXIT"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 61, "code": "goto err ;", "location": "150"}, {"type": "CFGENTRYNODE", "ID": 93, "code": "ENTRY"}, {"type": "LABEL", "childNum": "9", "ID": 51, "code": "err :", "location": "161"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 82, "code": "return 0 ;", "location": "120"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 77, "code": "return 0 ;", "location": "127"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 72, "code": "return 0 ;", "location": "136"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 88, "code": "return 0 ;", "location": "112"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 74, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 55, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 53, "code": "goto err ;", "location": "159"}, {"type": "Function", "ID": 42, "name": "HMAC_Init_ex"}, {"type": "PARAM", "childNum": "0", "ID": 25, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 30, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 28, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 26, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 27, "code": "return 0 ;", "location": "88"}, {"type": "CFGENTRYNODE", "ID": 31, "code": "ENTRY"}, {"type": "Function", "ID": 24, "name": "HMAC_CTX_reset"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 15, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 13, "code": "return 0 ;", "location": "41"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 22, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 20, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 19, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 17, "code": "return ctx ;", "location": "80"}, {"type": "CFGENTRYNODE", "ID": 23, "code": "ENTRY"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 18, "code": "return NULL ;", "location": "77"}, {"type": "Function", "ID": 16, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 33, 39], ["REACHES", 33, 38], ["REACHES", 33, 37], ["REACHES", 33, 36], ["REACHES", 33, 35], ["REACHES", 33, 34], ["REACHES", 35, 41], ["REACHES", 35, 34], ["CONTROLS", 40, 35], ["CONTROLS", 40, 36], ["CONTROLS", 40, 38], ["CONTROLS", 40, 39], ["CONTROLS", 40, 33], ["CONTROLS", 40, 37], ["CONTROLS", 40, 34], ["IS_FUNCTION_OF_CFG", 32, 40], ["REACHES", 43, 75], ["REACHES", 43, 62], ["REACHES", 43, 56], ["REACHES", 90, 63], ["REACHES", 90, 62], ["REACHES", 90, 57], ["REACHES", 90, 56], ["REACHES", 90, 49], ["REACHES", 45, 89], ["REACHES", 45, 76], ["REACHES", 45, 75], ["REACHES", 45, 73], ["REACHES", 45, 71], ["REACHES", 45, 70], ["REACHES", 44, 87], ["REACHES", 44, 89], ["REACHES", 44, 85], ["REACHES", 44, 79], ["REACHES", 83, 79], ["REACHES", 44, 75], ["REACHES", 44, 56], ["REACHES", 83, 75], ["REACHES", 44, 62], ["REACHES", 83, 56], ["REACHES", 83, 62], ["REACHES", 47, 78], ["REACHES", 47, 89], ["REACHES", 47, 56], ["REACHES", 47, 85], ["REACHES", 47, 84], ["REACHES", 47, 83], ["REACHES", 47, 75], ["REACHES", 47, 62], ["REACHES", 47, 73], ["REACHES", 47, 68], ["REACHES", 47, 71], ["REACHES", 47, 70], ["REACHES", 47, 57], ["REACHES", 47, 63], ["REACHES", 47, 54], ["REACHES", 47, 69], ["REACHES", 91, 67], ["REACHES", 80, 67], ["REACHES", 86, 67], ["REACHES", 91, 50], ["REACHES", 80, 50], ["REACHES", 86, 50], ["REACHES", 70, 69], ["REACHES", 70, 68], ["REACHES", 52, 48], ["REACHES", 92, 48], ["REACHES", 46, 89], ["REACHES", 46, 81], ["REACHES", 46, 75], ["REACHES", 46, 71], ["REACHES", 66, 63], ["REACHES", 66, 64], ["REACHES", 66, 65], ["REACHES", 64, 65], ["REACHES", 64, 64], ["REACHES", 64, 63], ["REACHES", 58, 57], ["REACHES", 60, 59], ["REACHES", 58, 58], ["REACHES", 60, 57], ["REACHES", 58, 59], ["REACHES", 60, 58], ["REACHES", 79, 78], ["REACHES", 79, 76], ["REACHES", 85, 78], ["REACHES", 85, 94], ["REACHES", 70, 94], ["REACHES", 70, 63], ["REACHES", 70, 56], ["REACHES", 85, 75], ["REACHES", 85, 73], ["REACHES", 85, 57], ["REACHES", 85, 62], ["REACHES", 70, 62], ["REACHES", 85, 71], ["REACHES", 85, 69], ["REACHES", 85, 54], ["REACHES", 85, 56], ["REACHES", 70, 54], ["REACHES", 70, 68], ["REACHES", 70, 69], ["REACHES", 85, 68], ["REACHES", 85, 63], ["REACHES", 70, 57], ["REACHES", 63, 63], ["REACHES", 57, 57], ["REACHES", 63, 57], ["CONTROLS", 59, 58], ["CONTROLS", 59, 57], ["CONTROLS", 62, 59], ["CONTROLS", 62, 61], ["CONTROLS", 62, 60], ["CONTROLS", 62, 56], ["CONTROLS", 93, 91], ["CONTROLS", 93, 43], ["CONTROLS", 93, 46], ["CONTROLS", 93, 90], ["CONTROLS", 93, 89], ["CONTROLS", 93, 45], ["CONTROLS", 93, 47], ["CONTROLS", 93, 92], ["CONTROLS", 93, 44], ["CONTROLS", 67, 62], ["CONTROLS", 67, 54], ["CONTROLS", 67, 65], ["CONTROLS", 67, 66], ["CONTROLS", 81, 78], ["CONTROLS", 81, 67], ["CONTROLS", 81, 80], ["CONTROLS", 81, 48], ["CONTROLS", 81, 79], ["CONTROLS", 81, 51], ["CONTROLS", 81, 50], ["CONTROLS", 87, 81], ["CONTROLS", 87, 86], ["CONTROLS", 87, 85], ["CONTROLS", 87, 84], ["CONTROLS", 84, 81], ["CONTROLS", 84, 82], ["CONTROLS", 84, 83], ["CONTROLS", 78, 76], ["CONTROLS", 78, 77], ["CONTROLS", 73, 72], ["CONTROLS", 73, 67], ["CONTROLS", 73, 71], ["CONTROLS", 73, 69], ["CONTROLS", 73, 48], ["CONTROLS", 73, 70], ["CONTROLS", 73, 51], ["CONTROLS", 73, 50], ["CONTROLS", 89, 87], ["CONTROLS", 89, 88], ["CONTROLS", 75, 67], ["CONTROLS", 75, 69], ["CONTROLS", 75, 48], ["CONTROLS", 75, 51], ["CONTROLS", 75, 50], ["CONTROLS", 75, 74], ["CONTROLS", 76, 73], ["CONTROLS", 76, 75], ["CONTROLS", 69, 68], ["CONTROLS", 56, 54], ["CONTROLS", 56, 55], ["CONTROLS", 54, 53], ["CONTROLS", 54, 52], ["CONTROLS", 65, 64], ["CONTROLS", 65, 63], ["CONTROLS", 50, 49], ["IS_FUNCTION_OF_CFG", 42, 93], ["REACHES", 25, 30], ["REACHES", 25, 29], ["REACHES", 25, 28], ["CONTROLS", 29, 26], ["CONTROLS", 29, 28], ["CONTROLS", 29, 27], ["CONTROLS", 31, 25], ["CONTROLS", 31, 30], ["CONTROLS", 31, 29], ["IS_FUNCTION_OF_CFG", 24, 31], ["REACHES", 4, 3], ["REACHES", 4, 1], ["REACHES", 15, 14], ["REACHES", 11, 10], ["REACHES", 15, 7], ["REACHES", 15, 4], ["REACHES", 11, 4], ["CONTROLS", 4, 2], ["CONTROLS", 4, 1], ["CONTROLS", 4, 0], ["CONTROLS", 4, 3], ["CONTROLS", 7, 6], ["CONTROLS", 7, 5], ["CONTROLS", 7, 4], ["CONTROLS", 12, 11], ["CONTROLS", 12, 7], ["CONTROLS", 12, 10], ["CONTROLS", 14, 12], ["CONTROLS", 14, 13], ["CONTROLS", 10, 8], ["CONTROLS", 10, 9], ["CONTROLS", 10, 4], ["REACHES", 22, 21], ["REACHES", 22, 20], ["REACHES", 22, 19], ["REACHES", 22, 17], ["CONTROLS", 23, 22], ["CONTROLS", 23, 21], ["CONTROLS", 20, 18], ["CONTROLS", 20, 17], ["CONTROLS", 20, 19], ["CONTROLS", 21, 20], ["CONTROLS", 21, 17], ["IS_FUNCTION_OF_CFG", 16, 23], ["CONTROLS", 28, 32], ["CONTROLS", 30, 32], ["CONTROLS", 4, 42], ["CONTROLS", 4, 16], ["CONTROLS", 20, 24]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 29, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 34, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 33, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 32, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 31, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 30, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 37, "code": "EXIT"}, {"type": "CFGENTRYNODE", "ID": 36, "code": "ENTRY"}, {"type": "Function", "ID": 28, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "4", "ID": 39, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 71, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 58, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 52, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 86, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 59, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 53, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 45, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 41, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 72, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 69, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 67, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 66, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 40, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 83, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 81, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 75, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 79, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 43, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 74, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 80, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 64, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 50, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "0", "ID": 65, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 87, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 63, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 76, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 82, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 46, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 48, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 44, "code": "return rv ;", "location": "164"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 88, "code": "int rv = 0 ;", "location": "106"}, {"type": "PARAM", "childNum": "1", "ID": 42, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 77, "code": "key != NULL", "location": "123"}, {"type": "FORINIT", "childNum": "0", "ID": 62, "code": "i = 0 ;", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 60, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 61, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 54, "code": "i ++", "location": "152"}, {"type": "FORINIT", "childNum": "0", "ID": 56, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 55, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "CFGEXITNODE", "ID": 90, "code": "EXIT"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 57, "code": "goto err ;", "location": "150"}, {"type": "CFGENTRYNODE", "ID": 89, "code": "ENTRY"}, {"type": "LABEL", "childNum": "9", "ID": 47, "code": "err :", "location": "161"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 78, "code": "return 0 ;", "location": "120"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 73, "code": "return 0 ;", "location": "127"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 68, "code": "return 0 ;", "location": "136"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 84, "code": "return 0 ;", "location": "112"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 70, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 51, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 49, "code": "goto err ;", "location": "159"}, {"type": "Function", "ID": 38, "name": "HMAC_Init_ex"}, {"type": "PARAM", "childNum": "0", "ID": 21, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 26, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 25, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 24, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 22, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 23, "code": "return 0 ;", "location": "88"}, {"type": "CFGENTRYNODE", "ID": 27, "code": "ENTRY"}, {"type": "Function", "ID": 20, "name": "HMAC_CTX_reset"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 18, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 17, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 16, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 15, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 13, "code": "return ctx ;", "location": "80"}, {"type": "CFGENTRYNODE", "ID": 19, "code": "ENTRY"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 14, "code": "return NULL ;", "location": "77"}, {"type": "Function", "ID": 12, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 29, 35], ["REACHES", 29, 34], ["REACHES", 29, 33], ["REACHES", 29, 32], ["REACHES", 29, 31], ["REACHES", 29, 30], ["REACHES", 31, 37], ["REACHES", 31, 30], ["CONTROLS", 36, 31], ["CONTROLS", 36, 32], ["CONTROLS", 36, 34], ["CONTROLS", 36, 35], ["CONTROLS", 36, 29], ["CONTROLS", 36, 33], ["CONTROLS", 36, 30], ["IS_FUNCTION_OF_CFG", 28, 36], ["REACHES", 39, 71], ["REACHES", 39, 58], ["REACHES", 39, 52], ["REACHES", 86, 59], ["REACHES", 86, 58], ["REACHES", 86, 53], ["REACHES", 86, 52], ["REACHES", 86, 45], ["REACHES", 41, 85], ["REACHES", 41, 72], ["REACHES", 41, 71], ["REACHES", 41, 69], ["REACHES", 41, 67], ["REACHES", 41, 66], ["REACHES", 40, 83], ["REACHES", 40, 85], ["REACHES", 40, 81], ["REACHES", 40, 75], ["REACHES", 79, 75], ["REACHES", 40, 71], ["REACHES", 40, 52], ["REACHES", 79, 71], ["REACHES", 40, 58], ["REACHES", 79, 52], ["REACHES", 79, 58], ["REACHES", 43, 74], ["REACHES", 43, 85], ["REACHES", 43, 52], ["REACHES", 43, 81], ["REACHES", 43, 80], ["REACHES", 43, 79], ["REACHES", 43, 71], ["REACHES", 43, 58], ["REACHES", 43, 69], ["REACHES", 43, 64], ["REACHES", 43, 67], ["REACHES", 43, 66], ["REACHES", 43, 53], ["REACHES", 43, 59], ["REACHES", 43, 50], ["REACHES", 43, 65], ["REACHES", 87, 63], ["REACHES", 76, 63], ["REACHES", 82, 63], ["REACHES", 87, 46], ["REACHES", 76, 46], ["REACHES", 82, 46], ["REACHES", 66, 65], ["REACHES", 66, 64], ["REACHES", 48, 44], ["REACHES", 88, 44], ["REACHES", 42, 85], ["REACHES", 42, 77], ["REACHES", 42, 71], ["REACHES", 42, 67], ["REACHES", 62, 59], ["REACHES", 62, 60], ["REACHES", 62, 61], ["REACHES", 60, 61], ["REACHES", 60, 60], ["REACHES", 60, 59], ["REACHES", 54, 53], ["REACHES", 56, 55], ["REACHES", 54, 54], ["REACHES", 56, 53], ["REACHES", 54, 55], ["REACHES", 56, 54], ["REACHES", 75, 74], ["REACHES", 75, 72], ["REACHES", 81, 74], ["REACHES", 81, 90], ["REACHES", 66, 90], ["REACHES", 66, 59], ["REACHES", 66, 52], ["REACHES", 81, 71], ["REACHES", 81, 69], ["REACHES", 81, 53], ["REACHES", 81, 58], ["REACHES", 66, 58], ["REACHES", 81, 67], ["REACHES", 81, 65], ["REACHES", 81, 50], ["REACHES", 81, 52], ["REACHES", 66, 50], ["REACHES", 66, 64], ["REACHES", 66, 65], ["REACHES", 81, 64], ["REACHES", 81, 59], ["REACHES", 66, 53], ["REACHES", 59, 59], ["REACHES", 53, 53], ["REACHES", 59, 53], ["CONTROLS", 55, 54], ["CONTROLS", 55, 53], ["CONTROLS", 58, 55], ["CONTROLS", 58, 57], ["CONTROLS", 58, 56], ["CONTROLS", 58, 52], ["CONTROLS", 89, 87], ["CONTROLS", 89, 39], ["CONTROLS", 89, 42], ["CONTROLS", 89, 86], ["CONTROLS", 89, 85], ["CONTROLS", 89, 41], ["CONTROLS", 89, 43], ["CONTROLS", 89, 88], ["CONTROLS", 89, 40], ["CONTROLS", 63, 58], ["CONTROLS", 63, 50], ["CONTROLS", 63, 61], ["CONTROLS", 63, 62], ["CONTROLS", 77, 74], ["CONTROLS", 77, 63], ["CONTROLS", 77, 76], ["CONTROLS", 77, 44], ["CONTROLS", 77, 75], ["CONTROLS", 77, 47], ["CONTROLS", 77, 46], ["CONTROLS", 83, 77], ["CONTROLS", 83, 82], ["CONTROLS", 83, 81], ["CONTROLS", 83, 80], ["CONTROLS", 80, 77], ["CONTROLS", 80, 78], ["CONTROLS", 80, 79], ["CONTROLS", 74, 72], ["CONTROLS", 74, 73], ["CONTROLS", 69, 68], ["CONTROLS", 69, 63], ["CONTROLS", 69, 67], ["CONTROLS", 69, 65], ["CONTROLS", 69, 44], ["CONTROLS", 69, 66], ["CONTROLS", 69, 47], ["CONTROLS", 69, 46], ["CONTROLS", 85, 83], ["CONTROLS", 85, 84], ["CONTROLS", 71, 63], ["CONTROLS", 71, 65], ["CONTROLS", 71, 44], ["CONTROLS", 71, 47], ["CONTROLS", 71, 46], ["CONTROLS", 71, 70], ["CONTROLS", 72, 69], ["CONTROLS", 72, 71], ["CONTROLS", 65, 64], ["CONTROLS", 52, 50], ["CONTROLS", 52, 51], ["CONTROLS", 50, 49], ["CONTROLS", 50, 48], ["CONTROLS", 61, 60], ["CONTROLS", 61, 59], ["CONTROLS", 46, 45], ["IS_FUNCTION_OF_CFG", 38, 89], ["REACHES", 21, 26], ["REACHES", 21, 25], ["REACHES", 21, 24], ["CONTROLS", 25, 22], ["CONTROLS", 25, 24], ["CONTROLS", 25, 23], ["CONTROLS", 27, 21], ["CONTROLS", 27, 26], ["CONTROLS", 27, 25], ["IS_FUNCTION_OF_CFG", 20, 27], ["REACHES", 4, 3], ["REACHES", 4, 1], ["REACHES", 11, 10], ["REACHES", 11, 7], ["CONTROLS", 4, 2], ["CONTROLS", 4, 1], ["CONTROLS", 4, 0], ["CONTROLS", 4, 3], ["CONTROLS", 7, 6], ["CONTROLS", 7, 5], ["CONTROLS", 7, 4], ["CONTROLS", 10, 8], ["CONTROLS", 10, 9], ["CONTROLS", 10, 4], ["REACHES", 18, 17], ["REACHES", 18, 16], ["REACHES", 18, 15], ["REACHES", 18, 13], ["CONTROLS", 19, 18], ["CONTROLS", 19, 17], ["CONTROLS", 16, 14], ["CONTROLS", 16, 13], ["CONTROLS", 16, 15], ["CONTROLS", 17, 16], ["CONTROLS", 17, 13], ["IS_FUNCTION_OF_CFG", 12, 19], ["CONTROLS", 24, 28], ["CONTROLS", 26, 28], ["CONTROLS", 4, 38], ["CONTROLS", 4, 12], ["CONTROLS", 16, 20]]}], "io_slices": [{"nodes": [{"type": "PARAM", "childNum": "0", "ID": 40, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 46, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 45, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 44, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 43, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 42, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 41, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 48, "code": "EXIT"}, {"type": "CFGENTRYNODE", "ID": 47, "code": "ENTRY"}, {"type": "Function", "ID": 39, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "4", "ID": 50, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 82, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 69, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 63, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 97, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 70, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 64, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 56, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 52, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 96, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 83, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 80, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 78, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 77, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 51, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 94, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 92, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 86, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 90, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 54, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 91, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 75, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 61, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "0", "ID": 76, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 98, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 74, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 87, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 93, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 57, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 59, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 55, "code": "return rv ;", "location": "164"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 99, "code": "int rv = 0 ;", "location": "106"}, {"type": "PARAM", "childNum": "1", "ID": 53, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 88, "code": "key != NULL", "location": "123"}, {"type": "FORINIT", "childNum": "0", "ID": 73, "code": "i = 0 ;", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 71, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 72, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 65, "code": "i ++", "location": "152"}, {"type": "FORINIT", "childNum": "0", "ID": 67, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 66, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "CFGEXITNODE", "ID": 101, "code": "EXIT"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 68, "code": "goto err ;", "location": "150"}, {"type": "CFGENTRYNODE", "ID": 100, "code": "ENTRY"}, {"type": "LABEL", "childNum": "9", "ID": 58, "code": "err :", "location": "161"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 89, "code": "return 0 ;", "location": "120"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 84, "code": "return 0 ;", "location": "127"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 79, "code": "return 0 ;", "location": "136"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 95, "code": "return 0 ;", "location": "112"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 81, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 62, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 60, "code": "goto err ;", "location": "159"}, {"type": "Function", "ID": 49, "name": "HMAC_Init_ex"}, {"type": "PARAM", "childNum": "0", "ID": 32, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 36, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 35, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 33, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 34, "code": "return 0 ;", "location": "88"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 31, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 16, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 13, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "COND", "childNum": "0", "ID": 5, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 4, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 2, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 21, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "COND", "childNum": "0", "ID": 20, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 17, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 15, "code": "md_size < 0", "location": "40"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 12, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 3, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 1, "code": "return 1 ;", "location": "67"}, {"type": "CFGENTRYNODE", "ID": 22, "code": "ENTRY"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 7, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 6, "code": "return 0 ;", "location": "56"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 14, "code": "return 0 ;", "location": "41"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 18, "code": "return 0 ;", "location": "36"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 19, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_UNKNOWN_DIGEST_ALGORITHM )", "location": "35"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 9, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 29, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 28, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 26, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 24, "code": "return ctx ;", "location": "80"}, {"type": "CFGENTRYNODE", "ID": 30, "code": "ENTRY"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 25, "code": "return NULL ;", "location": "77"}, {"type": "Function", "ID": 23, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 40, 46], ["REACHES", 40, 45], ["REACHES", 40, 44], ["REACHES", 40, 43], ["REACHES", 40, 42], ["REACHES", 40, 41], ["REACHES", 42, 48], ["REACHES", 42, 41], ["CONTROLS", 47, 42], ["CONTROLS", 47, 43], ["CONTROLS", 47, 45], ["CONTROLS", 47, 46], ["CONTROLS", 47, 40], ["CONTROLS", 47, 44], ["CONTROLS", 47, 41], ["IS_FUNCTION_OF_CFG", 39, 47], ["REACHES", 50, 82], ["REACHES", 50, 69], ["REACHES", 50, 63], ["REACHES", 97, 70], ["REACHES", 97, 69], ["REACHES", 97, 64], ["REACHES", 97, 63], ["REACHES", 97, 56], ["REACHES", 52, 96], ["REACHES", 52, 83], ["REACHES", 52, 82], ["REACHES", 52, 80], ["REACHES", 52, 78], ["REACHES", 52, 77], ["REACHES", 51, 94], ["REACHES", 51, 96], ["REACHES", 51, 92], ["REACHES", 51, 86], ["REACHES", 90, 86], ["REACHES", 51, 82], ["REACHES", 51, 63], ["REACHES", 90, 82], ["REACHES", 51, 69], ["REACHES", 90, 63], ["REACHES", 90, 69], ["REACHES", 54, 85], ["REACHES", 54, 96], ["REACHES", 54, 63], ["REACHES", 54, 92], ["REACHES", 54, 91], ["REACHES", 54, 90], ["REACHES", 54, 82], ["REACHES", 54, 69], ["REACHES", 54, 80], ["REACHES", 54, 75], ["REACHES", 54, 78], ["REACHES", 54, 77], ["REACHES", 54, 64], ["REACHES", 54, 70], ["REACHES", 54, 61], ["REACHES", 54, 76], ["REACHES", 98, 74], ["REACHES", 87, 74], ["REACHES", 93, 74], ["REACHES", 98, 57], ["REACHES", 87, 57], ["REACHES", 93, 57], ["REACHES", 77, 76], ["REACHES", 77, 75], ["REACHES", 59, 55], ["REACHES", 99, 55], ["REACHES", 53, 96], ["REACHES", 53, 88], ["REACHES", 53, 82], ["REACHES", 53, 78], ["REACHES", 73, 70], ["REACHES", 73, 71], ["REACHES", 73, 72], ["REACHES", 71, 72], ["REACHES", 71, 71], ["REACHES", 71, 70], ["REACHES", 65, 64], ["REACHES", 67, 66], ["REACHES", 65, 65], ["REACHES", 67, 64], ["REACHES", 65, 66], ["REACHES", 67, 65], ["REACHES", 86, 85], ["REACHES", 86, 83], ["REACHES", 92, 85], ["REACHES", 92, 101], ["REACHES", 77, 101], ["REACHES", 77, 70], ["REACHES", 77, 63], ["REACHES", 92, 82], ["REACHES", 92, 80], ["REACHES", 92, 64], ["REACHES", 92, 69], ["REACHES", 77, 69], ["REACHES", 92, 78], ["REACHES", 92, 76], ["REACHES", 92, 61], ["REACHES", 92, 63], ["REACHES", 77, 61], ["REACHES", 77, 75], ["REACHES", 77, 76], ["REACHES", 92, 75], ["REACHES", 92, 70], ["REACHES", 77, 64], ["REACHES", 70, 70], ["REACHES", 64, 64], ["REACHES", 70, 64], ["CONTROLS", 66, 65], ["CONTROLS", 66, 64], ["CONTROLS", 69, 66], ["CONTROLS", 69, 68], ["CONTROLS", 69, 67], ["CONTROLS", 69, 63], ["CONTROLS", 100, 98], ["CONTROLS", 100, 50], ["CONTROLS", 100, 53], ["CONTROLS", 100, 97], ["CONTROLS", 100, 96], ["CONTROLS", 100, 52], ["CONTROLS", 100, 54], ["CONTROLS", 100, 99], ["CONTROLS", 100, 51], ["CONTROLS", 74, 69], ["CONTROLS", 74, 61], ["CONTROLS", 74, 72], ["CONTROLS", 74, 73], ["CONTROLS", 88, 85], ["CONTROLS", 88, 74], ["CONTROLS", 88, 87], ["CONTROLS", 88, 55], ["CONTROLS", 88, 86], ["CONTROLS", 88, 58], ["CONTROLS", 88, 57], ["CONTROLS", 94, 88], ["CONTROLS", 94, 93], ["CONTROLS", 94, 92], ["CONTROLS", 94, 91], ["CONTROLS", 91, 88], ["CONTROLS", 91, 89], ["CONTROLS", 91, 90], ["CONTROLS", 85, 83], ["CONTROLS", 85, 84], ["CONTROLS", 80, 79], ["CONTROLS", 80, 74], ["CONTROLS", 80, 78], ["CONTROLS", 80, 76], ["CONTROLS", 80, 55], ["CONTROLS", 80, 77], ["CONTROLS", 80, 58], ["CONTROLS", 80, 57], ["CONTROLS", 96, 94], ["CONTROLS", 96, 95], ["CONTROLS", 82, 74], ["CONTROLS", 82, 76], ["CONTROLS", 82, 55], ["CONTROLS", 82, 58], ["CONTROLS", 82, 57], ["CONTROLS", 82, 81], ["CONTROLS", 83, 80], ["CONTROLS", 83, 82], ["CONTROLS", 76, 75], ["CONTROLS", 63, 61], ["CONTROLS", 63, 62], ["CONTROLS", 61, 60], ["CONTROLS", 61, 59], ["CONTROLS", 72, 71], ["CONTROLS", 72, 70], ["CONTROLS", 57, 56], ["IS_FUNCTION_OF_CFG", 49, 100], ["REACHES", 32, 37], ["REACHES", 32, 36], ["REACHES", 32, 35], ["CONTROLS", 36, 33], ["CONTROLS", 36, 35], ["CONTROLS", 36, 34], ["CONTROLS", 38, 32], ["CONTROLS", 38, 37], ["CONTROLS", 38, 36], ["IS_FUNCTION_OF_CFG", 31, 38], ["REACHES", 16, 13], ["REACHES", 5, 4], ["REACHES", 5, 2], ["REACHES", 21, 20], ["REACHES", 17, 15], ["REACHES", 12, 11], ["REACHES", 17, 8], ["REACHES", 17, 5], ["REACHES", 12, 5], ["REACHES", 20, 17], ["REACHES", 20, 16], ["REACHES", 20, 11], ["REACHES", 20, 8], ["REACHES", 20, 5], ["CONTROLS", 5, 3], ["CONTROLS", 5, 2], ["CONTROLS", 5, 1], ["CONTROLS", 5, 4], ["CONTROLS", 22, 21], ["CONTROLS", 8, 7], ["CONTROLS", 8, 6], ["CONTROLS", 8, 5], ["CONTROLS", 13, 12], ["CONTROLS", 13, 8], ["CONTROLS", 13, 11], ["CONTROLS", 15, 13], ["CONTROLS", 15, 14], ["CONTROLS", 20, 16], ["CONTROLS", 20, 15], ["CONTROLS", 20, 18], ["CONTROLS", 20, 19], ["CONTROLS", 20, 17], ["CONTROLS", 11, 9], ["CONTROLS", 11, 10], ["CONTROLS", 11, 5], ["IS_FUNCTION_OF_CFG", 0, 22], ["REACHES", 29, 28], ["REACHES", 29, 27], ["REACHES", 29, 26], ["REACHES", 29, 24], ["CONTROLS", 30, 29], ["CONTROLS", 30, 28], ["CONTROLS", 27, 25], ["CONTROLS", 27, 24], ["CONTROLS", 27, 26], ["CONTROLS", 28, 27], ["CONTROLS", 28, 24], ["IS_FUNCTION_OF_CFG", 23, 30], ["CONTROLS", 35, 39], ["CONTROLS", 37, 39], ["CONTROLS", 5, 49], ["CONTROLS", 5, 23], ["CONTROLS", 27, 31]]}, {"nodes": [{"type": "IDENDECLSTATE", "childNum": "6", "ID": 2, "code": "const X509_ALGOR * macalg ;", "location": "15"}, {"type": "EXPRSTATE", "childNum": "14", "ID": 1, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )", "location": "33"}, {"type": "CFGENTRYNODE", "ID": 3, "code": "ENTRY"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["REACHES", 2, 1], ["CONTROLS", 3, 2], ["IS_FUNCTION_OF_CFG", 0, 3]]}, {"nodes": [{"type": "PARAM", "childNum": "0", "ID": 31, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 36, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 35, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 34, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 33, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 32, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 39, "code": "EXIT"}, {"type": "CFGENTRYNODE", "ID": 38, "code": "ENTRY"}, {"type": "Function", "ID": 30, "name": "hmac_ctx_cleanup"}, {"type": "PARAM", "childNum": "4", "ID": 41, "code": "ENGINE * impl", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 73, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 60, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "COND", "childNum": "0", "ID": 54, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 88, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 61, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 55, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 47, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "PARAM", "childNum": "2", "ID": 43, "code": "int len", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 87, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "COND", "childNum": "0", "ID": 74, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 71, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 69, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 68, "code": "ctx -> key_length = len", "location": "138"}, {"type": "PARAM", "childNum": "3", "ID": 42, "code": "const EVP_MD * md", "location": "104"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "md != NULL", "location": "114"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 83, "code": "ctx -> md = md", "location": "116"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 77, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 81, "code": "md = ctx -> md", "location": "118"}, {"type": "PARAM", "childNum": "0", "ID": 45, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 76, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 82, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 66, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 52, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "0", "ID": 67, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 89, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "COND", "childNum": "0", "ID": 65, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 78, "code": "reset = 1", "location": "124"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 84, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 48, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 50, "code": "rv = 1", "location": "160"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 46, "code": "return rv ;", "location": "164"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 90, "code": "int rv = 0 ;", "location": "106"}, {"type": "PARAM", "childNum": "1", "ID": 44, "code": "const void * key", "location": "103"}, {"type": "COND", "childNum": "0", "ID": 79, "code": "key != NULL", "location": "123"}, {"type": "FORINIT", "childNum": "0", "ID": 64, "code": "i = 0 ;", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 62, "code": "i ++", "location": "146"}, {"type": "COND", "childNum": "1", "ID": 63, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "INCDECOP", "childNum": "2", "ID": 56, "code": "i ++", "location": "152"}, {"type": "FORINIT", "childNum": "0", "ID": 58, "code": "i = 0 ;", "location": "152"}, {"type": "COND", "childNum": "1", "ID": 57, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "CFGEXITNODE", "ID": 92, "code": "EXIT"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 59, "code": "goto err ;", "location": "150"}, {"type": "CFGENTRYNODE", "ID": 91, "code": "ENTRY"}, {"type": "LABEL", "childNum": "9", "ID": 49, "code": "err :", "location": "161"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 80, "code": "return 0 ;", "location": "120"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 75, "code": "return 0 ;", "location": "127"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 70, "code": "return 0 ;", "location": "136"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 86, "code": "return 0 ;", "location": "112"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 72, "code": "return 0 ;", "location": "133"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 53, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 51, "code": "goto err ;", "location": "159"}, {"type": "Function", "ID": 40, "name": "HMAC_Init_ex"}, {"type": "PARAM", "childNum": "0", "ID": 23, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 28, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 26, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 24, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 25, "code": "return 0 ;", "location": "88"}, {"type": "CFGENTRYNODE", "ID": 29, "code": "ENTRY"}, {"type": "Function", "ID": 22, "name": "HMAC_CTX_reset"}, {"type": "COND", "childNum": "0", "ID": 5, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 4, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 2, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 12, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "COND", "childNum": "0", "ID": 11, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 3, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 1, "code": "return 1 ;", "location": "67"}, {"type": "CFGENTRYNODE", "ID": 13, "code": "ENTRY"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 7, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 6, "code": "return 0 ;", "location": "56"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 9, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 10, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 20, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 18, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 17, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 15, "code": "return ctx ;", "location": "80"}, {"type": "CFGENTRYNODE", "ID": 21, "code": "ENTRY"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 16, "code": "return NULL ;", "location": "77"}, {"type": "Function", "ID": 14, "name": "HMAC_CTX_new"}], "edges": [["REACHES", 31, 37], ["REACHES", 31, 36], ["REACHES", 31, 35], ["REACHES", 31, 34], ["REACHES", 31, 33], ["REACHES", 31, 32], ["REACHES", 33, 39], ["REACHES", 33, 32], ["CONTROLS", 38, 33], ["CONTROLS", 38, 34], ["CONTROLS", 38, 36], ["CONTROLS", 38, 37], ["CONTROLS", 38, 31], ["CONTROLS", 38, 35], ["CONTROLS", 38, 32], ["IS_FUNCTION_OF_CFG", 30, 38], ["REACHES", 41, 73], ["REACHES", 41, 60], ["REACHES", 41, 54], ["REACHES", 88, 61], ["REACHES", 88, 60], ["REACHES", 88, 55], ["REACHES", 88, 54], ["REACHES", 88, 47], ["REACHES", 43, 87], ["REACHES", 43, 74], ["REACHES", 43, 73], ["REACHES", 43, 71], ["REACHES", 43, 69], ["REACHES", 43, 68], ["REACHES", 42, 85], ["REACHES", 42, 87], ["REACHES", 42, 83], ["REACHES", 42, 77], ["REACHES", 81, 77], ["REACHES", 42, 73], ["REACHES", 42, 54], ["REACHES", 81, 73], ["REACHES", 42, 60], ["REACHES", 81, 54], ["REACHES", 81, 60], ["REACHES", 45, 76], ["REACHES", 45, 87], ["REACHES", 45, 54], ["REACHES", 45, 83], ["REACHES", 45, 82], ["REACHES", 45, 81], ["REACHES", 45, 73], ["REACHES", 45, 60], ["REACHES", 45, 71], ["REACHES", 45, 66], ["REACHES", 45, 69], ["REACHES", 45, 68], ["REACHES", 45, 55], ["REACHES", 45, 61], ["REACHES", 45, 52], ["REACHES", 45, 67], ["REACHES", 89, 65], ["REACHES", 78, 65], ["REACHES", 84, 65], ["REACHES", 89, 48], ["REACHES", 78, 48], ["REACHES", 84, 48], ["REACHES", 68, 67], ["REACHES", 68, 66], ["REACHES", 50, 46], ["REACHES", 90, 46], ["REACHES", 44, 87], ["REACHES", 44, 79], ["REACHES", 44, 73], ["REACHES", 44, 69], ["REACHES", 64, 61], ["REACHES", 64, 62], ["REACHES", 64, 63], ["REACHES", 62, 63], ["REACHES", 62, 62], ["REACHES", 62, 61], ["REACHES", 56, 55], ["REACHES", 58, 57], ["REACHES", 56, 56], ["REACHES", 58, 55], ["REACHES", 56, 57], ["REACHES", 58, 56], ["REACHES", 77, 76], ["REACHES", 77, 74], ["REACHES", 83, 76], ["REACHES", 83, 92], ["REACHES", 68, 92], ["REACHES", 68, 61], ["REACHES", 68, 54], ["REACHES", 83, 73], ["REACHES", 83, 71], ["REACHES", 83, 55], ["REACHES", 83, 60], ["REACHES", 68, 60], ["REACHES", 83, 69], ["REACHES", 83, 67], ["REACHES", 83, 52], ["REACHES", 83, 54], ["REACHES", 68, 52], ["REACHES", 68, 66], ["REACHES", 68, 67], ["REACHES", 83, 66], ["REACHES", 83, 61], ["REACHES", 68, 55], ["REACHES", 61, 61], ["REACHES", 55, 55], ["REACHES", 61, 55], ["CONTROLS", 57, 56], ["CONTROLS", 57, 55], ["CONTROLS", 60, 57], ["CONTROLS", 60, 59], ["CONTROLS", 60, 58], ["CONTROLS", 60, 54], ["CONTROLS", 91, 89], ["CONTROLS", 91, 41], ["CONTROLS", 91, 44], ["CONTROLS", 91, 88], ["CONTROLS", 91, 87], ["CONTROLS", 91, 43], ["CONTROLS", 91, 45], ["CONTROLS", 91, 90], ["CONTROLS", 91, 42], ["CONTROLS", 65, 60], ["CONTROLS", 65, 52], ["CONTROLS", 65, 63], ["CONTROLS", 65, 64], ["CONTROLS", 79, 76], ["CONTROLS", 79, 65], ["CONTROLS", 79, 78], ["CONTROLS", 79, 46], ["CONTROLS", 79, 77], ["CONTROLS", 79, 49], ["CONTROLS", 79, 48], ["CONTROLS", 85, 79], ["CONTROLS", 85, 84], ["CONTROLS", 85, 83], ["CONTROLS", 85, 82], ["CONTROLS", 82, 79], ["CONTROLS", 82, 80], ["CONTROLS", 82, 81], ["CONTROLS", 76, 74], ["CONTROLS", 76, 75], ["CONTROLS", 71, 70], ["CONTROLS", 71, 65], ["CONTROLS", 71, 69], ["CONTROLS", 71, 67], ["CONTROLS", 71, 46], ["CONTROLS", 71, 68], ["CONTROLS", 71, 49], ["CONTROLS", 71, 48], ["CONTROLS", 87, 85], ["CONTROLS", 87, 86], ["CONTROLS", 73, 65], ["CONTROLS", 73, 67], ["CONTROLS", 73, 46], ["CONTROLS", 73, 49], ["CONTROLS", 73, 48], ["CONTROLS", 73, 72], ["CONTROLS", 74, 71], ["CONTROLS", 74, 73], ["CONTROLS", 67, 66], ["CONTROLS", 54, 52], ["CONTROLS", 54, 53], ["CONTROLS", 52, 51], ["CONTROLS", 52, 50], ["CONTROLS", 63, 62], ["CONTROLS", 63, 61], ["CONTROLS", 48, 47], ["IS_FUNCTION_OF_CFG", 40, 91], ["REACHES", 23, 28], ["REACHES", 23, 27], ["REACHES", 23, 26], ["CONTROLS", 27, 24], ["CONTROLS", 27, 26], ["CONTROLS", 27, 25], ["CONTROLS", 29, 23], ["CONTROLS", 29, 28], ["CONTROLS", 29, 27], ["IS_FUNCTION_OF_CFG", 22, 29], ["REACHES", 5, 4], ["REACHES", 5, 2], ["REACHES", 12, 11], ["REACHES", 12, 8], ["REACHES", 12, 5], ["CONTROLS", 5, 3], ["CONTROLS", 5, 2], ["CONTROLS", 5, 1], ["CONTROLS", 5, 4], ["CONTROLS", 13, 12], ["CONTROLS", 8, 7], ["CONTROLS", 8, 6], ["CONTROLS", 8, 5], ["CONTROLS", 11, 9], ["CONTROLS", 11, 10], ["CONTROLS", 11, 5], ["IS_FUNCTION_OF_CFG", 0, 13], ["REACHES", 20, 19], ["REACHES", 20, 18], ["REACHES", 20, 17], ["REACHES", 20, 15], ["CONTROLS", 21, 20], ["CONTROLS", 21, 19], ["CONTROLS", 18, 16], ["CONTROLS", 18, 15], ["CONTROLS", 18, 17], ["CONTROLS", 19, 18], ["CONTROLS", 19, 15], ["IS_FUNCTION_OF_CFG", 14, 21], ["CONTROLS", 26, 30], ["CONTROLS", 28, 30], ["CONTROLS", 5, 40], ["CONTROLS", 5, 14], ["CONTROLS", 18, 22]]}, {"nodes": [{"type": "CFGENTRYNODE", "ID": 2, "code": "ENTRY"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 1, "code": "const EVP_MD * md_type ;", "location": "9"}, {"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}], "edges": [["CONTROLS", 2, 1], ["IS_FUNCTION_OF_CFG", 0, 2]]}], "np_slices": [{"nodes": [{"type": "EXPRSTATE", "childNum": "1", "ID": 3, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 2, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 1, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "j < len", "location": "128"}], "edges": [["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 1], ["FLOWS_TO", 2, 0]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "17", "ID": 3, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 2, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 1, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}], "edges": [["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 1], ["FLOWS_TO", 2, 0]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "16", "ID": 9, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 8, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 6, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 5, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 4, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 2, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 1, "code": "return 0 ;", "location": "50"}], "edges": [["FLOWS_TO", 9, 8], ["FLOWS_TO", 8, 7], ["FLOWS_TO", 7, 6], ["FLOWS_TO", 7, 5], ["FLOWS_TO", 5, 4], ["FLOWS_TO", 5, 0], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 1]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "0", "ID": 15, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "EXPRSTATE", "childNum": "13", "ID": 14, "code": "X509_SIG_get0 ( p12 -> mac -> dinfo , & macalg , NULL )", "location": "32"}, {"type": "EXPRSTATE", "childNum": "14", "ID": 13, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )", "location": "33"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_UNKNOWN_DIGEST_ALGORITHM )", "location": "35"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 9, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 10, "code": "return 0 ;", "location": "36"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 8, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 6, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 5, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 4, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 2, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 1, "code": "return 0 ;", "location": "50"}], "edges": [["FLOWS_TO", 15, 14], ["FLOWS_TO", 14, 13], ["FLOWS_TO", 13, 12], ["FLOWS_TO", 12, 11], ["FLOWS_TO", 12, 9], ["FLOWS_TO", 11, 10], ["FLOWS_TO", 9, 8], ["FLOWS_TO", 8, 7], ["FLOWS_TO", 7, 6], ["FLOWS_TO", 7, 5], ["FLOWS_TO", 5, 4], ["FLOWS_TO", 5, 0], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 1]]}], "uaf_slices": [{"nodes": [{"type": "EXPRSTATE", "childNum": "1", "ID": 31, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 30, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 29, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 28, "code": "j < len", "location": "128"}, {"type": "CFGEXITNODE", "ID": 32, "code": "EXIT"}, {"type": "COND", "childNum": "0", "ID": 27, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 25, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 26, "code": "return 0 ;", "location": "133"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 24, "code": "return 0 ;", "location": "136"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 23, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 22, "code": "ctx -> key_length = len", "location": "138"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 20, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "reset", "location": "145"}, {"type": "FORINIT", "childNum": "0", "ID": 18, "code": "i = 0 ;", "location": "146"}, {"type": "COND", "childNum": "0", "ID": 6, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "1", "ID": 17, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 15, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "INCDECOP", "childNum": "2", "ID": 16, "code": "i ++", "location": "146"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 13, "code": "goto err ;", "location": "150"}, {"type": "FORINIT", "childNum": "0", "ID": 12, "code": "i = 0 ;", "location": "152"}, {"type": "LABEL", "childNum": "9", "ID": 3, "code": "err :", "location": "161"}, {"type": "COND", "childNum": "1", "ID": 11, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 9, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "COND", "childNum": "0", "ID": 8, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "INCDECOP", "childNum": "2", "ID": 10, "code": "i ++", "location": "152"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 7, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 5, "code": "goto err ;", "location": "159"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 4, "code": "rv = 1", "location": "160"}, {"type": "COND", "childNum": "0", "ID": 2, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 1, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 0, "code": "return rv ;", "location": "164"}], "edges": [["FLOWS_TO", 31, 30], ["FLOWS_TO", 30, 29], ["FLOWS_TO", 30, 28], ["FLOWS_TO", 29, 32], ["FLOWS_TO", 28, 27], ["FLOWS_TO", 28, 25], ["FLOWS_TO", 27, 26], ["FLOWS_TO", 27, 21], ["FLOWS_TO", 26, 32], ["FLOWS_TO", 25, 24], ["FLOWS_TO", 25, 23], ["FLOWS_TO", 24, 32], ["FLOWS_TO", 23, 22], ["FLOWS_TO", 22, 21], ["FLOWS_TO", 21, 20], ["FLOWS_TO", 21, 19], ["FLOWS_TO", 20, 19], ["FLOWS_TO", 19, 18], ["FLOWS_TO", 19, 6], ["FLOWS_TO", 17, 15], ["FLOWS_TO", 17, 14], ["FLOWS_TO", 18, 17], ["FLOWS_TO", 16, 17], ["FLOWS_TO", 15, 16], ["FLOWS_TO", 14, 13], ["FLOWS_TO", 14, 12], ["FLOWS_TO", 13, 3], ["FLOWS_TO", 11, 9], ["FLOWS_TO", 11, 8], ["FLOWS_TO", 12, 11], ["FLOWS_TO", 10, 11], ["FLOWS_TO", 9, 10], ["FLOWS_TO", 8, 7], ["FLOWS_TO", 8, 6], ["FLOWS_TO", 7, 3], ["FLOWS_TO", 6, 5], ["FLOWS_TO", 6, 4], ["FLOWS_TO", 5, 3], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 1], ["FLOWS_TO", 2, 0], ["FLOWS_TO", 1, 0], ["FLOWS_TO", 0, 32]]}, {"nodes": [{"type": "CFGENTRYNODE", "ID": 43, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 36, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 42, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 41, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 40, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 39, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 38, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 37, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 44, "code": "EXIT"}, {"type": "Function", "ID": 35, "name": "hmac_ctx_cleanup"}, {"type": "CFGENTRYNODE", "ID": 96, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 50, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "PARAM", "childNum": "1", "ID": 49, "code": "const void * key", "location": "103"}, {"type": "PARAM", "childNum": "2", "ID": 48, "code": "int len", "location": "103"}, {"type": "PARAM", "childNum": "3", "ID": 47, "code": "const EVP_MD * md", "location": "104"}, {"type": "PARAM", "childNum": "4", "ID": 46, "code": "ENGINE * impl", "location": "104"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 95, "code": "int rv = 0 ;", "location": "106"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 94, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 93, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "COND", "childNum": "0", "ID": 92, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 91, "code": "return 0 ;", "location": "112"}, {"type": "COND", "childNum": "0", "ID": 90, "code": "md != NULL", "location": "114"}, {"type": "CFGEXITNODE", "ID": 97, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 89, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 87, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 88, "code": "ctx -> md = md", "location": "116"}, {"type": "COND", "childNum": "0", "ID": 84, "code": "key != NULL", "location": "123"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 86, "code": "md = ctx -> md", "location": "118"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 85, "code": "return 0 ;", "location": "120"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 83, "code": "reset = 1", "location": "124"}, {"type": "COND", "childNum": "0", "ID": 70, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 82, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 81, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 80, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 79, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 78, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 76, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 77, "code": "return 0 ;", "location": "133"}, {"type": "COND", "childNum": "0", "ID": 72, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 75, "code": "return 0 ;", "location": "136"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 74, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 73, "code": "ctx -> key_length = len", "location": "138"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 71, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "FORINIT", "childNum": "0", "ID": 69, "code": "i = 0 ;", "location": "146"}, {"type": "COND", "childNum": "0", "ID": 57, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "1", "ID": 68, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 66, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "COND", "childNum": "0", "ID": 65, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "INCDECOP", "childNum": "2", "ID": 67, "code": "i ++", "location": "146"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 64, "code": "goto err ;", "location": "150"}, {"type": "FORINIT", "childNum": "0", "ID": 63, "code": "i = 0 ;", "location": "152"}, {"type": "LABEL", "childNum": "9", "ID": 54, "code": "err :", "location": "161"}, {"type": "COND", "childNum": "1", "ID": 62, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 60, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "COND", "childNum": "0", "ID": 59, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "INCDECOP", "childNum": "2", "ID": 61, "code": "i ++", "location": "152"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 58, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 56, "code": "goto err ;", "location": "159"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 55, "code": "rv = 1", "location": "160"}, {"type": "COND", "childNum": "0", "ID": 53, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 52, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 51, "code": "return rv ;", "location": "164"}, {"type": "Function", "ID": 45, "name": "HMAC_Init_ex"}, {"type": "CFGENTRYNODE", "ID": 33, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 27, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 32, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 31, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 30, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 28, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 29, "code": "return 0 ;", "location": "88"}, {"type": "CFGEXITNODE", "ID": 34, "code": "EXIT"}, {"type": "Function", "ID": 26, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 15, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 13, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "CFGEXITNODE", "ID": 16, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "CFGENTRYNODE", "ID": 24, "code": "ENTRY"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 23, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 22, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 21, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 18, "code": "return ctx ;", "location": "80"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 20, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 19, "code": "return NULL ;", "location": "77"}, {"type": "CFGEXITNODE", "ID": 25, "code": "EXIT"}, {"type": "Function", "ID": 17, "name": "HMAC_CTX_new"}], "edges": [["FLOWS_TO", 43, 36], ["FLOWS_TO", 36, 42], ["FLOWS_TO", 42, 41], ["FLOWS_TO", 41, 40], ["FLOWS_TO", 40, 39], ["FLOWS_TO", 39, 38], ["FLOWS_TO", 38, 37], ["FLOWS_TO", 37, 44], ["IS_FUNCTION_OF_CFG", 35, 43], ["FLOWS_TO", 96, 50], ["FLOWS_TO", 50, 49], ["FLOWS_TO", 49, 48], ["FLOWS_TO", 48, 47], ["FLOWS_TO", 47, 46], ["FLOWS_TO", 46, 95], ["FLOWS_TO", 95, 94], ["FLOWS_TO", 94, 93], ["FLOWS_TO", 93, 92], ["FLOWS_TO", 92, 91], ["FLOWS_TO", 92, 90], ["FLOWS_TO", 91, 97], ["FLOWS_TO", 90, 89], ["FLOWS_TO", 90, 87], ["FLOWS_TO", 89, 88], ["FLOWS_TO", 88, 84], ["FLOWS_TO", 87, 86], ["FLOWS_TO", 87, 85], ["FLOWS_TO", 86, 84], ["FLOWS_TO", 85, 97], ["FLOWS_TO", 84, 83], ["FLOWS_TO", 84, 70], ["FLOWS_TO", 83, 82], ["FLOWS_TO", 82, 81], ["FLOWS_TO", 81, 80], ["FLOWS_TO", 81, 79], ["FLOWS_TO", 80, 97], ["FLOWS_TO", 79, 78], ["FLOWS_TO", 79, 76], ["FLOWS_TO", 78, 77], ["FLOWS_TO", 78, 72], ["FLOWS_TO", 77, 97], ["FLOWS_TO", 76, 75], ["FLOWS_TO", 76, 74], ["FLOWS_TO", 75, 97], ["FLOWS_TO", 74, 73], ["FLOWS_TO", 73, 72], ["FLOWS_TO", 72, 71], ["FLOWS_TO", 72, 70], ["FLOWS_TO", 71, 70], ["FLOWS_TO", 70, 69], ["FLOWS_TO", 70, 57], ["FLOWS_TO", 68, 66], ["FLOWS_TO", 68, 65], ["FLOWS_TO", 69, 68], ["FLOWS_TO", 67, 68], ["FLOWS_TO", 66, 67], ["FLOWS_TO", 65, 64], ["FLOWS_TO", 65, 63], ["FLOWS_TO", 64, 54], ["FLOWS_TO", 62, 60], ["FLOWS_TO", 62, 59], ["FLOWS_TO", 63, 62], ["FLOWS_TO", 61, 62], ["FLOWS_TO", 60, 61], ["FLOWS_TO", 59, 58], ["FLOWS_TO", 59, 57], ["FLOWS_TO", 58, 54], ["FLOWS_TO", 57, 56], ["FLOWS_TO", 57, 55], ["FLOWS_TO", 56, 54], ["FLOWS_TO", 55, 54], ["FLOWS_TO", 54, 53], ["FLOWS_TO", 53, 52], ["FLOWS_TO", 53, 51], ["FLOWS_TO", 52, 51], ["FLOWS_TO", 51, 97], ["IS_FUNCTION_OF_CFG", 45, 96], ["FLOWS_TO", 33, 27], ["FLOWS_TO", 27, 32], ["FLOWS_TO", 32, 31], ["FLOWS_TO", 31, 30], ["FLOWS_TO", 31, 28], ["FLOWS_TO", 30, 29], ["FLOWS_TO", 29, 34], ["FLOWS_TO", 28, 34], ["IS_FUNCTION_OF_CFG", 26, 33], ["FLOWS_TO", 15, 14], ["FLOWS_TO", 14, 13], ["FLOWS_TO", 14, 12], ["FLOWS_TO", 13, 16], ["FLOWS_TO", 12, 11], ["FLOWS_TO", 12, 7], ["FLOWS_TO", 11, 10], ["FLOWS_TO", 10, 9], ["FLOWS_TO", 10, 4], ["FLOWS_TO", 9, 8], ["FLOWS_TO", 8, 16], ["FLOWS_TO", 7, 6], ["FLOWS_TO", 7, 4], ["FLOWS_TO", 6, 5], ["FLOWS_TO", 5, 16], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 4, 1], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 16], ["FLOWS_TO", 1, 0], ["FLOWS_TO", 0, 16], ["FLOWS_TO", 24, 23], ["FLOWS_TO", 23, 22], ["FLOWS_TO", 22, 21], ["FLOWS_TO", 22, 18], ["FLOWS_TO", 21, 20], ["FLOWS_TO", 21, 18], ["FLOWS_TO", 20, 19], ["FLOWS_TO", 19, 25], ["FLOWS_TO", 18, 25], ["IS_FUNCTION_OF_CFG", 17, 24], ["FLOWS_TO", 30, 35], ["FLOWS_TO", 32, 35], ["FLOWS_TO", 4, 45], ["FLOWS_TO", 4, 17], ["FLOWS_TO", 21, 26]]}, {"nodes": [{"type": "CFGENTRYNODE", "ID": 44, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 37, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 43, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 42, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 41, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 40, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 39, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 38, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 45, "code": "EXIT"}, {"type": "Function", "ID": 36, "name": "hmac_ctx_cleanup"}, {"type": "CFGENTRYNODE", "ID": 97, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 51, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "PARAM", "childNum": "1", "ID": 50, "code": "const void * key", "location": "103"}, {"type": "PARAM", "childNum": "2", "ID": 49, "code": "int len", "location": "103"}, {"type": "PARAM", "childNum": "3", "ID": 48, "code": "const EVP_MD * md", "location": "104"}, {"type": "PARAM", "childNum": "4", "ID": 47, "code": "ENGINE * impl", "location": "104"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 96, "code": "int rv = 0 ;", "location": "106"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 95, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 94, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "COND", "childNum": "0", "ID": 93, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 92, "code": "return 0 ;", "location": "112"}, {"type": "COND", "childNum": "0", "ID": 91, "code": "md != NULL", "location": "114"}, {"type": "CFGEXITNODE", "ID": 98, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 90, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 88, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 89, "code": "ctx -> md = md", "location": "116"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "key != NULL", "location": "123"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 87, "code": "md = ctx -> md", "location": "118"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 86, "code": "return 0 ;", "location": "120"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 84, "code": "reset = 1", "location": "124"}, {"type": "COND", "childNum": "0", "ID": 71, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 83, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 82, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 81, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 80, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 79, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 77, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 78, "code": "return 0 ;", "location": "133"}, {"type": "COND", "childNum": "0", "ID": 73, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 76, "code": "return 0 ;", "location": "136"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 75, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 74, "code": "ctx -> key_length = len", "location": "138"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 72, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "FORINIT", "childNum": "0", "ID": 70, "code": "i = 0 ;", "location": "146"}, {"type": "COND", "childNum": "0", "ID": 58, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "1", "ID": 69, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 67, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "COND", "childNum": "0", "ID": 66, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "INCDECOP", "childNum": "2", "ID": 68, "code": "i ++", "location": "146"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 65, "code": "goto err ;", "location": "150"}, {"type": "FORINIT", "childNum": "0", "ID": 64, "code": "i = 0 ;", "location": "152"}, {"type": "LABEL", "childNum": "9", "ID": 55, "code": "err :", "location": "161"}, {"type": "COND", "childNum": "1", "ID": 63, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 61, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "COND", "childNum": "0", "ID": 60, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "INCDECOP", "childNum": "2", "ID": 62, "code": "i ++", "location": "152"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 59, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 57, "code": "goto err ;", "location": "159"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 56, "code": "rv = 1", "location": "160"}, {"type": "COND", "childNum": "0", "ID": 54, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 53, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 52, "code": "return rv ;", "location": "164"}, {"type": "Function", "ID": 46, "name": "HMAC_Init_ex"}, {"type": "CFGENTRYNODE", "ID": 34, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 28, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 33, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 32, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 31, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 29, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 30, "code": "return 0 ;", "location": "88"}, {"type": "CFGEXITNODE", "ID": 35, "code": "EXIT"}, {"type": "Function", "ID": 27, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 16, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 15, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 13, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "CFGEXITNODE", "ID": 17, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "CFGENTRYNODE", "ID": 25, "code": "ENTRY"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 24, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 23, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 22, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 19, "code": "return ctx ;", "location": "80"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 21, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 20, "code": "return NULL ;", "location": "77"}, {"type": "CFGEXITNODE", "ID": 26, "code": "EXIT"}, {"type": "Function", "ID": 18, "name": "HMAC_CTX_new"}], "edges": [["FLOWS_TO", 44, 37], ["FLOWS_TO", 37, 43], ["FLOWS_TO", 43, 42], ["FLOWS_TO", 42, 41], ["FLOWS_TO", 41, 40], ["FLOWS_TO", 40, 39], ["FLOWS_TO", 39, 38], ["FLOWS_TO", 38, 45], ["IS_FUNCTION_OF_CFG", 36, 44], ["FLOWS_TO", 97, 51], ["FLOWS_TO", 51, 50], ["FLOWS_TO", 50, 49], ["FLOWS_TO", 49, 48], ["FLOWS_TO", 48, 47], ["FLOWS_TO", 47, 96], ["FLOWS_TO", 96, 95], ["FLOWS_TO", 95, 94], ["FLOWS_TO", 94, 93], ["FLOWS_TO", 93, 92], ["FLOWS_TO", 93, 91], ["FLOWS_TO", 92, 98], ["FLOWS_TO", 91, 90], ["FLOWS_TO", 91, 88], ["FLOWS_TO", 90, 89], ["FLOWS_TO", 89, 85], ["FLOWS_TO", 88, 87], ["FLOWS_TO", 88, 86], ["FLOWS_TO", 87, 85], ["FLOWS_TO", 86, 98], ["FLOWS_TO", 85, 84], ["FLOWS_TO", 85, 71], ["FLOWS_TO", 84, 83], ["FLOWS_TO", 83, 82], ["FLOWS_TO", 82, 81], ["FLOWS_TO", 82, 80], ["FLOWS_TO", 81, 98], ["FLOWS_TO", 80, 79], ["FLOWS_TO", 80, 77], ["FLOWS_TO", 79, 78], ["FLOWS_TO", 79, 73], ["FLOWS_TO", 78, 98], ["FLOWS_TO", 77, 76], ["FLOWS_TO", 77, 75], ["FLOWS_TO", 76, 98], ["FLOWS_TO", 75, 74], ["FLOWS_TO", 74, 73], ["FLOWS_TO", 73, 72], ["FLOWS_TO", 73, 71], ["FLOWS_TO", 72, 71], ["FLOWS_TO", 71, 70], ["FLOWS_TO", 71, 58], ["FLOWS_TO", 69, 67], ["FLOWS_TO", 69, 66], ["FLOWS_TO", 70, 69], ["FLOWS_TO", 68, 69], ["FLOWS_TO", 67, 68], ["FLOWS_TO", 66, 65], ["FLOWS_TO", 66, 64], ["FLOWS_TO", 65, 55], ["FLOWS_TO", 63, 61], ["FLOWS_TO", 63, 60], ["FLOWS_TO", 64, 63], ["FLOWS_TO", 62, 63], ["FLOWS_TO", 61, 62], ["FLOWS_TO", 60, 59], ["FLOWS_TO", 60, 58], ["FLOWS_TO", 59, 55], ["FLOWS_TO", 58, 57], ["FLOWS_TO", 58, 56], ["FLOWS_TO", 57, 55], ["FLOWS_TO", 56, 55], ["FLOWS_TO", 55, 54], ["FLOWS_TO", 54, 53], ["FLOWS_TO", 54, 52], ["FLOWS_TO", 53, 52], ["FLOWS_TO", 52, 98], ["IS_FUNCTION_OF_CFG", 46, 97], ["FLOWS_TO", 34, 28], ["FLOWS_TO", 28, 33], ["FLOWS_TO", 33, 32], ["FLOWS_TO", 32, 31], ["FLOWS_TO", 32, 29], ["FLOWS_TO", 31, 30], ["FLOWS_TO", 30, 35], ["FLOWS_TO", 29, 35], ["IS_FUNCTION_OF_CFG", 27, 34], ["FLOWS_TO", 16, 15], ["FLOWS_TO", 15, 14], ["FLOWS_TO", 14, 13], ["FLOWS_TO", 14, 12], ["FLOWS_TO", 13, 17], ["FLOWS_TO", 12, 11], ["FLOWS_TO", 12, 7], ["FLOWS_TO", 11, 10], ["FLOWS_TO", 10, 9], ["FLOWS_TO", 10, 4], ["FLOWS_TO", 9, 8], ["FLOWS_TO", 8, 17], ["FLOWS_TO", 7, 6], ["FLOWS_TO", 7, 4], ["FLOWS_TO", 6, 5], ["FLOWS_TO", 5, 17], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 4, 1], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 17], ["FLOWS_TO", 1, 0], ["FLOWS_TO", 0, 17], ["FLOWS_TO", 25, 24], ["FLOWS_TO", 24, 23], ["FLOWS_TO", 23, 22], ["FLOWS_TO", 23, 19], ["FLOWS_TO", 22, 21], ["FLOWS_TO", 22, 19], ["FLOWS_TO", 21, 20], ["FLOWS_TO", 20, 26], ["FLOWS_TO", 19, 26], ["IS_FUNCTION_OF_CFG", 18, 25], ["FLOWS_TO", 31, 36], ["FLOWS_TO", 33, 36], ["FLOWS_TO", 4, 46], ["FLOWS_TO", 4, 18], ["FLOWS_TO", 22, 27]]}, {"nodes": [{"type": "CFGENTRYNODE", "ID": 50, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 43, "code": "HMAC_CTX * ctx", "location": "93"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 49, "code": "EVP_MD_CTX_reset ( ctx -> i_ctx )", "location": "95"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 48, "code": "EVP_MD_CTX_reset ( ctx -> o_ctx )", "location": "96"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 47, "code": "EVP_MD_CTX_reset ( ctx -> md_ctx )", "location": "97"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 46, "code": "ctx -> md = NULL", "location": "98"}, {"type": "EXPRSTATE", "childNum": "4", "ID": 45, "code": "ctx -> key_length = 0", "location": "99"}, {"type": "EXPRSTATE", "childNum": "5", "ID": 44, "code": "OPENSSL_cleanse ( ctx -> key , sizeof ( ctx -> key ) )", "location": "100"}, {"type": "CFGEXITNODE", "ID": 51, "code": "EXIT"}, {"type": "Function", "ID": 42, "name": "hmac_ctx_cleanup"}, {"type": "CFGENTRYNODE", "ID": 103, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 57, "code": "HMAC_CTX * ctx", "location": "103"}, {"type": "PARAM", "childNum": "1", "ID": 56, "code": "const void * key", "location": "103"}, {"type": "PARAM", "childNum": "2", "ID": 55, "code": "int len", "location": "103"}, {"type": "PARAM", "childNum": "3", "ID": 54, "code": "const EVP_MD * md", "location": "104"}, {"type": "PARAM", "childNum": "4", "ID": 53, "code": "ENGINE * impl", "location": "104"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 102, "code": "int rv = 0 ;", "location": "106"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 101, "code": "int i , j , reset = 0 ;", "location": "107"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 100, "code": "unsigned char pad [ HMAC_MAX_MD_CBLOCK ] ;", "location": "108"}, {"type": "COND", "childNum": "0", "ID": 99, "code": "md != NULL && md != ctx -> md && ( key == NULL || len < 0 )", "location": "111"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 98, "code": "return 0 ;", "location": "112"}, {"type": "COND", "childNum": "0", "ID": 97, "code": "md != NULL", "location": "114"}, {"type": "CFGEXITNODE", "ID": 104, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 96, "code": "reset = 1", "location": "115"}, {"type": "COND", "childNum": "0", "ID": 94, "code": "ctx -> md", "location": "117"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 95, "code": "ctx -> md = md", "location": "116"}, {"type": "COND", "childNum": "0", "ID": 91, "code": "key != NULL", "location": "123"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 93, "code": "md = ctx -> md", "location": "118"}, {"type": "RETURNSTATE", "childNum": "0", "ID": 92, "code": "return 0 ;", "location": "120"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 90, "code": "reset = 1", "location": "124"}, {"type": "COND", "childNum": "0", "ID": 77, "code": "reset", "location": "145"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 89, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 88, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 87, "code": "return 0 ;", "location": "127"}, {"type": "COND", "childNum": "0", "ID": 86, "code": "j < len", "location": "128"}, {"type": "COND", "childNum": "0", "ID": 85, "code": "! EVP_DigestInit_ex ( ctx -> md_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> md_ctx , key , len ) || ! EVP_DigestFinal_ex ( ctx -> md_ctx , ctx -> key , & ctx -> key_length )", "location": "129"}, {"type": "COND", "childNum": "0", "ID": 83, "code": "len < 0 || len > ( int ) sizeof ( ctx -> key )", "location": "135"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 84, "code": "return 0 ;", "location": "133"}, {"type": "COND", "childNum": "0", "ID": 79, "code": "ctx -> key_length != HMAC_MAX_MD_CBLOCK", "location": "140"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 82, "code": "return 0 ;", "location": "136"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 81, "code": "memcpy ( ctx -> key , key , len )", "location": "137"}, {"type": "EXPRSTATE", "childNum": "2", "ID": 80, "code": "ctx -> key_length = len", "location": "138"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 78, "code": "memset ( & ctx -> key [ ctx -> key_length ] , 0 , HMAC_MAX_MD_CBLOCK - ctx -> key_length )", "location": "141"}, {"type": "FORINIT", "childNum": "0", "ID": 76, "code": "i = 0 ;", "location": "146"}, {"type": "COND", "childNum": "0", "ID": 64, "code": "! EVP_MD_CTX_copy_ex ( ctx -> md_ctx , ctx -> i_ctx )", "location": "158"}, {"type": "COND", "childNum": "1", "ID": 75, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "146"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 73, "code": "pad [ i ] = 0x36 ^ ctx -> key [ i ]", "location": "147"}, {"type": "COND", "childNum": "0", "ID": 72, "code": "! EVP_DigestInit_ex ( ctx -> i_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> i_ctx , pad , EVP_MD_block_size ( md ) )", "location": "148"}, {"type": "INCDECOP", "childNum": "2", "ID": 74, "code": "i ++", "location": "146"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 71, "code": "goto err ;", "location": "150"}, {"type": "FORINIT", "childNum": "0", "ID": 70, "code": "i = 0 ;", "location": "152"}, {"type": "LABEL", "childNum": "9", "ID": 61, "code": "err :", "location": "161"}, {"type": "COND", "childNum": "1", "ID": 69, "code": "i < HMAC_MAX_MD_CBLOCK", "location": "152"}, {"type": "EXPRSTATE", "childNum": "3", "ID": 67, "code": "pad [ i ] = 0x5c ^ ctx -> key [ i ]", "location": "153"}, {"type": "COND", "childNum": "0", "ID": 66, "code": "! EVP_DigestInit_ex ( ctx -> o_ctx , md , impl ) || ! EVP_DigestUpdate ( ctx -> o_ctx , pad , EVP_MD_block_size ( md ) )", "location": "154"}, {"type": "INCDECOP", "childNum": "2", "ID": 68, "code": "i ++", "location": "152"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 65, "code": "goto err ;", "location": "156"}, {"type": "GOGOSTATE", "childNum": "1", "ID": 63, "code": "goto err ;", "location": "159"}, {"type": "EXPRSTATE", "childNum": "8", "ID": 62, "code": "rv = 1", "location": "160"}, {"type": "COND", "childNum": "0", "ID": 60, "code": "reset", "location": "162"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 59, "code": "OPENSSL_cleanse ( pad , sizeof ( pad ) )", "location": "163"}, {"type": "RETURNSTATE", "childNum": "11", "ID": 58, "code": "return rv ;", "location": "164"}, {"type": "Function", "ID": 52, "name": "HMAC_Init_ex"}, {"type": "CFGENTRYNODE", "ID": 40, "code": "ENTRY"}, {"type": "PARAM", "childNum": "0", "ID": 34, "code": "HMAC_CTX * ctx", "location": "83"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 39, "code": "hmac_ctx_cleanup ( ctx )", "location": "85"}, {"type": "COND", "childNum": "0", "ID": 38, "code": "! hmac_ctx_alloc_mds ( ctx )", "location": "86"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 37, "code": "hmac_ctx_cleanup ( ctx )", "location": "87"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 35, "code": "return 1 ;", "location": "90"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 36, "code": "return 0 ;", "location": "88"}, {"type": "CFGEXITNODE", "ID": 41, "code": "EXIT"}, {"type": "Function", "ID": 33, "name": "HMAC_CTX_reset"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 22, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "EXPRSTATE", "childNum": "13", "ID": 21, "code": "X509_SIG_get0 ( p12 -> mac -> dinfo , & macalg , NULL )", "location": "32"}, {"type": "EXPRSTATE", "childNum": "14", "ID": 20, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )", "location": "33"}, {"type": "COND", "childNum": "0", "ID": 19, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 18, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_UNKNOWN_DIGEST_ALGORITHM )", "location": "35"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 16, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 17, "code": "return 0 ;", "location": "36"}, {"type": "CFGEXITNODE", "ID": 23, "code": "EXIT"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 15, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 14, "code": "md_size < 0", "location": "40"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 13, "code": "return 0 ;", "location": "41"}, {"type": "COND", "childNum": "0", "ID": 12, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 11, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "COND", "childNum": "0", "ID": 7, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "COND", "childNum": "0", "ID": 10, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 9, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 8, "code": "return 0 ;", "location": "50"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 6, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 5, "code": "return 0 ;", "location": "56"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 3, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 2, "code": "return 0 ;", "location": "64"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 0, "code": "return 1 ;", "location": "67"}, {"type": "CFGENTRYNODE", "ID": 31, "code": "ENTRY"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 30, "code": "HMAC_CTX * ctx = OPENSSL_zalloc ( sizeof ( HMAC_CTX ) ) ;", "location": "72"}, {"type": "COND", "childNum": "0", "ID": 29, "code": "ctx != NULL", "location": "74"}, {"type": "COND", "childNum": "0", "ID": 28, "code": "! HMAC_CTX_reset ( ctx )", "location": "75"}, {"type": "RETURNSTATE", "childNum": "2", "ID": 25, "code": "return ctx ;", "location": "80"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 27, "code": "HMAC_CTX_free ( ctx )", "location": "76"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 26, "code": "return NULL ;", "location": "77"}, {"type": "CFGEXITNODE", "ID": 32, "code": "EXIT"}, {"type": "Function", "ID": 24, "name": "HMAC_CTX_new"}], "edges": [["FLOWS_TO", 50, 43], ["FLOWS_TO", 43, 49], ["FLOWS_TO", 49, 48], ["FLOWS_TO", 48, 47], ["FLOWS_TO", 47, 46], ["FLOWS_TO", 46, 45], ["FLOWS_TO", 45, 44], ["FLOWS_TO", 44, 51], ["IS_FUNCTION_OF_CFG", 42, 50], ["FLOWS_TO", 103, 57], ["FLOWS_TO", 57, 56], ["FLOWS_TO", 56, 55], ["FLOWS_TO", 55, 54], ["FLOWS_TO", 54, 53], ["FLOWS_TO", 53, 102], ["FLOWS_TO", 102, 101], ["FLOWS_TO", 101, 100], ["FLOWS_TO", 100, 99], ["FLOWS_TO", 99, 98], ["FLOWS_TO", 99, 97], ["FLOWS_TO", 98, 104], ["FLOWS_TO", 97, 96], ["FLOWS_TO", 97, 94], ["FLOWS_TO", 96, 95], ["FLOWS_TO", 95, 91], ["FLOWS_TO", 94, 93], ["FLOWS_TO", 94, 92], ["FLOWS_TO", 93, 91], ["FLOWS_TO", 92, 104], ["FLOWS_TO", 91, 90], ["FLOWS_TO", 91, 77], ["FLOWS_TO", 90, 89], ["FLOWS_TO", 89, 88], ["FLOWS_TO", 88, 87], ["FLOWS_TO", 88, 86], ["FLOWS_TO", 87, 104], ["FLOWS_TO", 86, 85], ["FLOWS_TO", 86, 83], ["FLOWS_TO", 85, 84], ["FLOWS_TO", 85, 79], ["FLOWS_TO", 84, 104], ["FLOWS_TO", 83, 82], ["FLOWS_TO", 83, 81], ["FLOWS_TO", 82, 104], ["FLOWS_TO", 81, 80], ["FLOWS_TO", 80, 79], ["FLOWS_TO", 79, 78], ["FLOWS_TO", 79, 77], ["FLOWS_TO", 78, 77], ["FLOWS_TO", 77, 76], ["FLOWS_TO", 77, 64], ["FLOWS_TO", 75, 73], ["FLOWS_TO", 75, 72], ["FLOWS_TO", 76, 75], ["FLOWS_TO", 74, 75], ["FLOWS_TO", 73, 74], ["FLOWS_TO", 72, 71], ["FLOWS_TO", 72, 70], ["FLOWS_TO", 71, 61], ["FLOWS_TO", 69, 67], ["FLOWS_TO", 69, 66], ["FLOWS_TO", 70, 69], ["FLOWS_TO", 68, 69], ["FLOWS_TO", 67, 68], ["FLOWS_TO", 66, 65], ["FLOWS_TO", 66, 64], ["FLOWS_TO", 65, 61], ["FLOWS_TO", 64, 63], ["FLOWS_TO", 64, 62], ["FLOWS_TO", 63, 61], ["FLOWS_TO", 62, 61], ["FLOWS_TO", 61, 60], ["FLOWS_TO", 60, 59], ["FLOWS_TO", 60, 58], ["FLOWS_TO", 59, 58], ["FLOWS_TO", 58, 104], ["IS_FUNCTION_OF_CFG", 52, 103], ["FLOWS_TO", 40, 34], ["FLOWS_TO", 34, 39], ["FLOWS_TO", 39, 38], ["FLOWS_TO", 38, 37], ["FLOWS_TO", 38, 35], ["FLOWS_TO", 37, 36], ["FLOWS_TO", 36, 41], ["FLOWS_TO", 35, 41], ["IS_FUNCTION_OF_CFG", 33, 40], ["FLOWS_TO", 22, 21], ["FLOWS_TO", 21, 20], ["FLOWS_TO", 20, 19], ["FLOWS_TO", 19, 18], ["FLOWS_TO", 19, 16], ["FLOWS_TO", 18, 17], ["FLOWS_TO", 17, 23], ["FLOWS_TO", 16, 15], ["FLOWS_TO", 15, 14], ["FLOWS_TO", 14, 13], ["FLOWS_TO", 14, 12], ["FLOWS_TO", 13, 23], ["FLOWS_TO", 12, 11], ["FLOWS_TO", 12, 7], ["FLOWS_TO", 11, 10], ["FLOWS_TO", 10, 9], ["FLOWS_TO", 10, 4], ["FLOWS_TO", 9, 8], ["FLOWS_TO", 8, 23], ["FLOWS_TO", 7, 6], ["FLOWS_TO", 7, 4], ["FLOWS_TO", 6, 5], ["FLOWS_TO", 5, 23], ["FLOWS_TO", 4, 3], ["FLOWS_TO", 4, 1], ["FLOWS_TO", 3, 2], ["FLOWS_TO", 2, 23], ["FLOWS_TO", 1, 0], ["FLOWS_TO", 0, 23], ["FLOWS_TO", 31, 30], ["FLOWS_TO", 30, 29], ["FLOWS_TO", 29, 28], ["FLOWS_TO", 29, 25], ["FLOWS_TO", 28, 27], ["FLOWS_TO", 28, 25], ["FLOWS_TO", 27, 26], ["FLOWS_TO", 26, 32], ["FLOWS_TO", 25, 32], ["IS_FUNCTION_OF_CFG", 24, 31], ["FLOWS_TO", 37, 42], ["FLOWS_TO", 39, 42], ["FLOWS_TO", 4, 52], ["FLOWS_TO", 4, 24], ["FLOWS_TO", 28, 33]]}], "df_slices": [{"nodes": [{"type": "EXPRSTATE", "childNum": "1", "ID": 2, "code": "j = EVP_MD_block_size ( md )", "location": "125"}, {"type": "COND", "childNum": "0", "ID": 1, "code": "! ossl_assert ( j <= ( int ) sizeof ( ctx -> key ) )", "location": "126"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "j < len", "location": "128"}], "edges": [["REACHES", 2, 1], ["REACHES", 2, 0]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "17", "ID": 1, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}], "edges": [["REACHES", 1, 0]]}, {"nodes": [{"type": "COND", "childNum": "0", "ID": 2, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 1, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 0, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 5, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "COND", "childNum": "0", "ID": 4, "code": "md_size < 0", "location": "40"}, {"type": "COND", "childNum": "0", "ID": 3, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}], "edges": [["REACHES", 2, 1], ["REACHES", 2, 0], ["REACHES", 5, 4], ["REACHES", 5, 3], ["REACHES", 5, 2]]}, {"nodes": [{"type": "EXPRSTATE", "childNum": "0", "ID": 2, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "COND", "childNum": "0", "ID": 1, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "COND", "childNum": "0", "ID": 0, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}], "edges": [["REACHES", 2, 1], ["REACHES", 2, 0]]}], "file_txt": "static int pkcs12_gen_mac(PKCS12 *p12, const char *pass, int passlen,\n                          unsigned char *mac, unsigned int *maclen,\n                          int (*pkcs12_key_gen)(const char *pass, int passlen,\n                                                unsigned char *salt, int slen,\n                                                int id, int iter, int n,\n                                                unsigned char *out,\n                                                const EVP_MD *md_type))\n{\n    const EVP_MD *md_type;\n    HMAC_CTX *hmac = NULL;\n    unsigned char key[EVP_MAX_MD_SIZE], *salt;\n    int saltlen, iter;\n    int md_size = 0;\n    int md_type_nid;\n    const X509_ALGOR *macalg;\n    const ASN1_OBJECT *macoid;\n\n    if (pkcs12_key_gen == NULL)\n        pkcs12_key_gen = PKCS12_key_gen_utf8;\n\n    if (!PKCS7_type_is_data(p12->authsafes)) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_CONTENT_TYPE_NOT_DATA);\n        return 0;\n    }\n\n    salt = p12->mac->salt->data;\n    saltlen = p12->mac->salt->length;\n    if (!p12->mac->iter)\n        iter = 1;\n    else\n        iter = ASN1_INTEGER_get(p12->mac->iter);\n    X509_SIG_get0(p12->mac->dinfo, &macalg, NULL);\n    X509_ALGOR_get0(&macoid, NULL, NULL, macalg);\n    if ((md_type = EVP_get_digestbyobj(macoid)) == NULL) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_UNKNOWN_DIGEST_ALGORITHM);\n        return 0;\n    }\n    md_size = EVP_MD_size(md_type);\n    md_type_nid = EVP_MD_type(md_type);\n    if (md_size < 0)\n        return 0;\n    if ((md_type_nid == NID_id_GostR3411_94\n         || md_type_nid == NID_id_GostR3411_2012_256\n         || md_type_nid == NID_id_GostR3411_2012_512)\n        && !getenv(\"LEGACY_GOST_PKCS12\")) {\n        md_size = TK26_MAC_KEY_LEN;\n        if (!pkcs12_gen_gost_mac_key(pass, passlen, salt, saltlen, iter,\n                                     md_size, key, md_type)) {\n            PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_KEY_GEN_ERROR);\n            return 0;\n        }\n    } else\n        if (!(*pkcs12_key_gen)(pass, passlen, salt, saltlen, PKCS12_MAC_ID,\n                               iter, md_size, key, md_type)) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_KEY_GEN_ERROR);\n        return 0;\n    }\n    if ((hmac = HMAC_CTX_new()) == NULL\n        || !HMAC_Init_ex(hmac, key, md_size, md_type, NULL)\n        || !HMAC_Update(hmac, p12->authsafes->d.data->data,\n                        p12->authsafes->d.data->length)\n        || !HMAC_Final(hmac, mac, maclen)) {\n        HMAC_CTX_free(hmac);\n        return 0;\n    }\n    HMAC_CTX_free(hmac);\n    return 1;\n}\n\nHMAC_CTX *HMAC_CTX_new(void)\n{\n    HMAC_CTX *ctx = OPENSSL_zalloc(sizeof(HMAC_CTX));\n\n    if (ctx != NULL) {\n        if (!HMAC_CTX_reset(ctx)) {\n            HMAC_CTX_free(ctx);\n            return NULL;\n        }\n    }\n    return ctx;\n}\n\nint HMAC_CTX_reset(HMAC_CTX *ctx)\n{\n    hmac_ctx_cleanup(ctx);\n    if (!hmac_ctx_alloc_mds(ctx)) {\n        hmac_ctx_cleanup(ctx);\n        return 0;\n    }\n    return 1;\n}\n\nstatic void hmac_ctx_cleanup(HMAC_CTX *ctx)\n{\n    EVP_MD_CTX_reset(ctx->i_ctx);\n    EVP_MD_CTX_reset(ctx->o_ctx);\n    EVP_MD_CTX_reset(ctx->md_ctx);\n    ctx->md = NULL;\n    ctx->key_length = 0;\n    OPENSSL_cleanse(ctx->key, sizeof(ctx->key));\n}\n\nint HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int len,\n                 const EVP_MD *md, ENGINE *impl)\n{\n    int rv = 0;\n    int i, j, reset = 0;\n    unsigned char pad[HMAC_MAX_MD_CBLOCK];\n\n    /* If we are changing MD then we must have a key */\n    if (md != NULL && md != ctx->md && (key == NULL || len < 0))\n        return 0;\n\n    if (md != NULL) {\n        reset = 1;\n        ctx->md = md;\n    } else if (ctx->md) {\n        md = ctx->md;\n    } else {\n        return 0;\n    }\n\n    if (key != NULL) {\n        reset = 1;\n        j = EVP_MD_block_size(md);\n        if (!ossl_assert(j <= (int)sizeof(ctx->key)))\n            return 0;\n        if (j < len) {\n            if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)\n                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)\n                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,\n                                           &ctx->key_length))\n                return 0;\n        } else {\n            if (len < 0 || len > (int)sizeof(ctx->key))\n                return 0;\n            memcpy(ctx->key, key, len);\n            ctx->key_length = len;\n        }\n        if (ctx->key_length != HMAC_MAX_MD_CBLOCK)\n            memset(&ctx->key[ctx->key_length], 0,\n                   HMAC_MAX_MD_CBLOCK - ctx->key_length);\n    }\n\n    if (reset) {\n        for (i = 0; i < HMAC_MAX_MD_CBLOCK; i++)\n            pad[i] = 0x36 ^ ctx->key[i];\n        if (!EVP_DigestInit_ex(ctx->i_ctx, md, impl)\n                || !EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md)))\n            goto err;\n\n        for (i = 0; i < HMAC_MAX_MD_CBLOCK; i++)\n            pad[i] = 0x5c ^ ctx->key[i];\n        if (!EVP_DigestInit_ex(ctx->o_ctx, md, impl)\n                || !EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md)))\n            goto err;\n    }\n    if (!EVP_MD_CTX_copy_ex(ctx->md_ctx, ctx->i_ctx))\n        goto err;\n    rv = 1;\n err:\n    if (reset)\n        OPENSSL_cleanse(pad, sizeof(pad));\n    return rv;\n}\n\n", "file_tokens": ["static", "int", "pkcs12", "gen", "mac", "(", "pkcs12", "*", "p12", ",", "const", "char", "*", "pass", ",", "int", "passlen", ",", "unsigned", "char", "*", "mac", ",", "unsigned", "int", "*", "maclen", ",", "int", "(", "*", "pkcs12", "key", "gen", ")", "(", "const", "char", "*", "pass", ",", "int", "passlen", ",", "unsigned", "char", "*", "salt", ",", "int", "slen", ",", "int", "id", ",", "int", "iter", ",", "int", "n", ",", "unsigned", "char", "*", "out", ",", "const", "evp", "md", "*", "md", "type", ")", ")", "{", "const", "evp", "md", "*", "md", "type", ";", "hmac", "ctx", "*", "hmac", "=", "null", ";", "unsigned", "char", "key", "[", "evp", "max", "md", "size", "]", ",", "*", "salt", ";", "int", "saltlen", ",", "iter", ";", "int", "md", "size", "=", "0", ";", "int", "md", "type", "nid", ";", "const", "x509", "algor", "*", "macalg", ";", "const", "asn1", "object", "*", "macoid", ";", "if", "(", "pkcs12", "key", "gen", "=", "=", "null", ")", "pkcs12", "key", "gen", "=", "pkcs12", "key", "gen", "utf8", ";", "if", "(", "!", "pkcs7", "type", "is", "data", "(", "p12", "-", ">", "authsafes", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "content", "type", "not", "data", ")", ";", "return", "0", ";", "}", "salt", "=", "p12", "-", ">", "mac", "-", ">", "salt", "-", ">", "data", ";", "saltlen", "=", "p12", "-", ">", "mac", "-", ">", "salt", "-", ">", "length", ";", "if", "(", "!", "p12", "-", ">", "mac", "-", ">", "iter", ")", "iter", "=", "1", ";", "else", "iter", "=", "asn1", "integer", "get", "(", "p12", "-", ">", "mac", "-", ">", "iter", ")", ";", "x509", "sig", "get0", "(", "p12", "-", ">", "mac", "-", ">", "dinfo", ",", "&", "macalg", ",", "null", ")", ";", "x509", "algor", "get0", "(", "&", "macoid", ",", "null", ",", "null", ",", "macalg", ")", ";", "if", "(", "(", "md", "type", "=", "evp", "get", "digestbyobj", "(", "macoid", ")", ")", "=", "=", "null", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "unknown", "digest", "algorithm", ")", ";", "return", "0", ";", "}", "md", "size", "=", "evp", "md", "size", "(", "md", "type", ")", ";", "md", "type", "nid", "=", "evp", "md", "type", "(", "md", "type", ")", ";", "if", "(", "md", "size", "<", "0", ")", "return", "0", ";", "if", "(", "(", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "94", "|", "|", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "2012", "256", "|", "|", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "2012", "512", ")", "&", "&", "!", "getenv", "(", "\"", "legacy_gost_pkcs12", "\"", ")", ")", "{", "md", "size", "=", "tk26", "mac", "key", "len", ";", "if", "(", "!", "pkcs12", "gen", "gost", "mac", "key", "(", "pass", ",", "passlen", ",", "salt", ",", "saltlen", ",", "iter", ",", "md", "size", ",", "key", ",", "md", "type", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "key", "gen", "error", ")", ";", "return", "0", ";", "}", "}", "else", "if", "(", "!", "(", "*", "pkcs12", "key", "gen", ")", "(", "pass", ",", "passlen", ",", "salt", ",", "saltlen", ",", "pkcs12", "mac", "id", ",", "iter", ",", "md", "size", ",", "key", ",", "md", "type", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "key", "gen", "error", ")", ";", "return", "0", ";", "}", "if", "(", "(", "hmac", "=", "hmac", "ctx", "new", "(", ")", ")", "=", "=", "null", "|", "|", "!", "hmac", "init", "ex", "(", "hmac", ",", "key", ",", "md", "size", ",", "md", "type", ",", "null", ")", "|", "|", "!", "hmac", "update", "(", "hmac", ",", "p12", "-", ">", "authsafes", "-", ">", "d", ".", "data", "-", ">", "data", ",", "p12", "-", ">", "authsafes", "-", ">", "d", ".", "data", "-", ">", "length", ")", "|", "|", "!", "hmac", "final", "(", "hmac", ",", "mac", ",", "maclen", ")", ")", "{", "hmac", "ctx", "free", "(", "hmac", ")", ";", "return", "0", ";", "}", "hmac", "ctx", "free", "(", "hmac", ")", ";", "return", "1", ";", "}", "hmac", "ctx", "*", "hmac", "ctx", "new", "(", "void", ")", "{", "hmac", "ctx", "*", "ctx", "=", "openssl", "zalloc", "(", "sizeof", "(", "hmac", "ctx", ")", ")", ";", "if", "(", "ctx", "!", "=", "null", ")", "{", "if", "(", "!", "hmac", "ctx", "reset", "(", "ctx", ")", ")", "{", "hmac", "ctx", "free", "(", "ctx", ")", ";", "return", "null", ";", "}", "}", "return", "ctx", ";", "}", "int", "hmac", "ctx", "reset", "(", "hmac", "ctx", "*", "ctx", ")", "{", "hmac", "ctx", "cleanup", "(", "ctx", ")", ";", "if", "(", "!", "hmac", "ctx", "alloc", "mds", "(", "ctx", ")", ")", "{", "hmac", "ctx", "cleanup", "(", "ctx", ")", ";", "return", "0", ";", "}", "return", "1", ";", "}", "static", "void", "hmac", "ctx", "cleanup", "(", "hmac", "ctx", "*", "ctx", ")", "{", "evp", "md", "ctx", "reset", "(", "ctx", "-", ">", "i", "ctx", ")", ";", "evp", "md", "ctx", "reset", "(", "ctx", "-", ">", "o", "ctx", ")", ";", "evp", "md", "ctx", "reset", "(", "ctx", "-", ">", "md", "ctx", ")", ";", "ctx", "-", ">", "md", "=", "null", ";", "ctx", "-", ">", "key", "length", "=", "0", ";", "openssl", "cleanse", "(", "ctx", "-", ">", "key", ",", "sizeof", "(", "ctx", "-", ">", "key", ")", ")", ";", "}", "int", "hmac", "init", "ex", "(", "hmac", "ctx", "*", "ctx", ",", "const", "void", "*", "key", ",", "int", "len", ",", "const", "evp", "md", "*", "md", ",", "engine", "*", "impl", ")", "{", "int", "rv", "=", "0", ";", "int", "i", ",", "j", ",", "reset", "=", "0", ";", "unsigned", "char", "pad", "[", "hmac", "max", "md", "cblock", "]", ";", "if", "(", "md", "!", "=", "null", "&", "&", "md", "!", "=", "ctx", "-", ">", "md", "&", "&", "(", "key", "=", "=", "null", "|", "|", "len", "<", "0", ")", ")", "return", "0", ";", "if", "(", "md", "!", "=", "null", ")", "{", "reset", "=", "1", ";", "ctx", "-", ">", "md", "=", "md", ";", "}", "else", "if", "(", "ctx", "-", ">", "md", ")", "{", "md", "=", "ctx", "-", ">", "md", ";", "}", "else", "{", "return", "0", ";", "}", "if", "(", "key", "!", "=", "null", ")", "{", "reset", "=", "1", ";", "j", "=", "evp", "md", "block", "size", "(", "md", ")", ";", "if", "(", "!", "ossl", "assert", "(", "j", "<", "=", "(", "int", ")", "sizeof", "(", "ctx", "-", ">", "key", ")", ")", ")", "return", "0", ";", "if", "(", "j", "<", "len", ")", "{", "if", "(", "!", "evp", "digest", "init", "ex", "(", "ctx", "-", ">", "md", "ctx", ",", "md", ",", "impl", ")", "|", "|", "!", "evp", "digest", "update", "(", "ctx", "-", ">", "md", "ctx", ",", "key", ",", "len", ")", "|", "|", "!", "evp", "digest", "final", "ex", "(", "ctx", "-", ">", "md", "ctx", ",", "ctx", "-", ">", "key", ",", "&", "ctx", "-", ">", "key", "length", ")", ")", "return", "0", ";", "}", "else", "{", "if", "(", "len", "<", "0", "|", "|", "len", ">", "(", "int", ")", "sizeof", "(", "ctx", "-", ">", "key", ")", ")", "return", "0", ";", "memcpy", "(", "ctx", "-", ">", "key", ",", "key", ",", "len", ")", ";", "ctx", "-", ">", "key", "length", "=", "len", ";", "}", "if", "(", "ctx", "-", ">", "key", "length", "!", "=", "hmac", "max", "md", "cblock", ")", "memset", "(", "&", "ctx", "-", ">", "key", "[", "ctx", "-", ">", "key", "length", "]", ",", "0", ",", "hmac", "max", "md", "cblock", "-", "ctx", "-", ">", "key", "length", ")", ";", "}", "if", "(", "reset", ")", "{", "for", "(", "i", "=", "0", ";", "i", "<", "hmac", "max", "md", "cblock", ";", "i", "+", "+", ")", "pad", "[", "i", "]", "=", "0x36", "^", "ctx", "-", ">", "key", "[", "i", "]", ";", "if", "(", "!", "evp", "digest", "init", "ex", "(", "ctx", "-", ">", "i", "ctx", ",", "md", ",", "impl", ")", "|", "|", "!", "evp", "digest", "update", "(", "ctx", "-", ">", "i", "ctx", ",", "pad", ",", "evp", "md", "block", "size", "(", "md", ")", ")", ")", "goto", "err", ";", "for", "(", "i", "=", "0", ";", "i", "<", "hmac", "max", "md", "cblock", ";", "i", "+", "+", ")", "pad", "[", "i", "]", "=", "0x5c", "^", "ctx", "-", ">", "key", "[", "i", "]", ";", "if", "(", "!", "evp", "digest", "init", "ex", "(", "ctx", "-", ">", "o", "ctx", ",", "md", ",", "impl", ")", "|", "|", "!", "evp", "digest", "update", "(", "ctx", "-", ">", "o", "ctx", ",", "pad", ",", "evp", "md", "block", "size", "(", "md", ")", ")", ")", "goto", "err", ";", "}", "if", "(", "!", "evp", "md", "ctx", "copy", "ex", "(", "ctx", "-", ">", "md", "ctx", ",", "ctx", "-", ">", "i", "ctx", ")", ")", "goto", "err", ";", "rv", "=", "1", ";", "err", ":", "if", "(", "reset", ")", "openssl", "cleanse", "(", "pad", ",", "sizeof", "(", "pad", ")", ")", ";", "return", "rv", ";", "}"], "file": "data_process/data/d2a/func/vuln/multi/openssl-ff59ce71b50dbd735a065cb2a832ad870593845f_1-auto_labeler-INTEGER_OVERFLOW_L5-multi_function.c", "vul_type": "integer_overflow", "target": 1}
