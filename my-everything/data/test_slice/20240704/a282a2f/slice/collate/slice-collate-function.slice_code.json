{
  "files": [
    {
      "file_name": "code/code_new/net/ceph/messenger_v2.c",
      "functions": [
        {
          "function_name": "static int head_onwire_len(int ctrl_len, bool secure)",
          "lines": [
            "L388: static int head_onwire_len(int ctrl_len, bool secure)\n",
            "L393: \tBUG_ON(ctrl_len < 0 || ctrl_len > CEPH_MSG_MAX_CONTROL_LEN);\n"
          ]
        },
        {
          "function_name": "static int __tail_onwire_len(int front_len, int middle_len, int data_len,",
          "lines": [
            "L410: static int __tail_onwire_len(int front_len, int middle_len, int data_len,\n",
            "L413: \tBUG_ON(front_len < 0 || front_len > CEPH_MSG_MAX_FRONT_LEN ||\n",
            "L414: \t       middle_len < 0 || middle_len > CEPH_MSG_MAX_MIDDLE_LEN ||\n",
            "L415: \t       data_len < 0 || data_len > CEPH_MSG_MAX_DATA_LEN);\n"
          ]
        },
        {
          "function_name": "static int decode_preamble(void *p, struct ceph_frame_desc *desc)",
          "lines": [
            "L501: static int decode_preamble(void *p, struct ceph_frame_desc *desc)\n",
            "L503: \tvoid *crcp = p + CEPH_PREAMBLE_LEN - CEPH_CRC_LEN;\n",
            "L507: \tcrc = crc32c(0, p, crcp - p);\n",
            "L515: \tmemset(desc, 0, sizeof(*desc));\n",
            "L517: \tdesc->fd_tag = ceph_decode_8(&p);\n",
            "L518: \tdesc->fd_seg_cnt = ceph_decode_8(&p);\n",
            "L519: \tif (desc->fd_seg_cnt < 1 ||\n",
            "L520: \t    desc->fd_seg_cnt > CEPH_FRAME_MAX_SEGMENT_COUNT) {\n",
            "L524: \tfor (i = 0; i < desc->fd_seg_cnt; i++) {\n",
            "L525: \t\tdesc->fd_lens[i] = ceph_decode_32(&p);\n",
            "L526: \t\tdesc->fd_aligns[i] = ceph_decode_16(&p);\n",
            "L529: \tif (desc->fd_lens[0] < 0 ||\n",
            "L530: \t    desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {\n"
          ]
        }
      ]
    }
  ]
}