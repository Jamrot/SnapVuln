{
  "statements_slicing_strategy": [
    {
      "statement_info": "net/ceph/messenger_v2.c | head_onwire_len | 393 | ADD",
      "statement": "\tBUG_ON(ctrl_len < 0 || ctrl_len > CEPH_MSG_MAX_CONTROL_LEN);",
      "slicing_direction": "backward",
      "code_representation_graph": "Control Flow Graph",
      "justification": "The statement is a condition check. A backward slice from this point will help identify the data and control dependencies that lead to this check. Control Flow Graph is suitable as it can represent the flow of control in the program."
    },
    {
      "statement_info": "net/ceph/messenger_v2.c | decode_preamble | 527 | DELETE",
      "statement": "\tif (!desc->fd_lens[desc->fd_seg_cnt - 1]) {",
      "slicing_direction": "forward",
      "code_representation_graph": "Data Dependency Graph",
      "justification": "The statement is a condition check that has been removed. A forward slice from this point will help identify the impact of this removal on the rest of the program. Data Dependency Graph is suitable as it can represent the data dependencies in the program."
    },
    {
      "statement_info": "net/ceph/messenger_v2.c | __tail_onwire_len | 413 | ADD",
      "statement": "\tBUG_ON(front_len < 0 || front_len > CEPH_MSG_MAX_FRONT_LEN ||",
      "slicing_direction": "backward",
      "code_representation_graph": "Control Flow Graph",
      "justification": "The statement is a condition check. A backward slice from this point will help identify the data and control dependencies that lead to this check. Control Flow Graph is suitable as it can represent the flow of control in the program."
    }
  ]
}