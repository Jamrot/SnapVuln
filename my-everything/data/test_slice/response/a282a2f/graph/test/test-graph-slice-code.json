{
    "code_new/messenger_v2.c": {
        "495": "static int decode_preamble(void *p, struct ceph_frame_desc *desc)\n",
        "497": "\tvoid *crcp = p + CEPH_PREAMBLE_LEN - CEPH_CRC_LEN;\n",
        "501": "\tcrc = crc32c(0, p, crcp - p);\n",
        "509": "\tmemset(desc, 0, sizeof(*desc));\n",
        "511": "\tdesc->fd_tag = ceph_decode_8(&p);\n",
        "512": "\tdesc->fd_seg_cnt = ceph_decode_8(&p);\n",
        "513": "\tif (desc->fd_seg_cnt < 1 ||\n",
        "514": "\t    desc->fd_seg_cnt > CEPH_FRAME_MAX_SEGMENT_COUNT) {\n",
        "518": "\tfor (i = 0; i < desc->fd_seg_cnt; i++) {\n",
        "519": "\t\tdesc->fd_lens[i] = ceph_decode_32(&p);\n",
        "520": "\t\tdesc->fd_aligns[i] = ceph_decode_16(&p);\n",
        "527": "\tif (!desc->fd_lens[desc->fd_seg_cnt - 1]) {\n",
        "532": "\tif (desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {\n",
        "533": "\t\tpr_err(\"control segment too big %d\\n\", desc->fd_lens[0]);\n",
        "536": "\tif (desc->fd_lens[1] > CEPH_MSG_MAX_FRONT_LEN) {\n",
        "537": "\t\tpr_err(\"front segment too big %d\\n\", desc->fd_lens[1]);\n",
        "540": "\tif (desc->fd_lens[2] > CEPH_MSG_MAX_MIDDLE_LEN) {\n",
        "541": "\t\tpr_err(\"middle segment too big %d\\n\", desc->fd_lens[2]);\n",
        "544": "\tif (desc->fd_lens[3] > CEPH_MSG_MAX_DATA_LEN) {\n",
        "545": "\t\tpr_err(\"data segment too big %d\\n\", desc->fd_lens[3]);\n",
        "2727": "static int handle_preamble(struct ceph_connection *con)\n",
        "2729": "\tstruct ceph_frame_desc *desc = &con->v2.in_desc;\n",
        "2741": "\tret = decode_preamble(con->v2.in_buf, desc);\n",
        "2854": "static int populate_in_iter(struct ceph_connection *con)\n",
        "2858": "\tdout(\"%s con %p state %d in_state %d\\n\", __func__, con, con->state,\n",
        "2859": "\t     con->v2.in_state);\n",
        "2862": "\tif (con->state == CEPH_CON_S_V2_BANNER_PREFIX) {\n",
        "2864": "\t} else if (con->state == CEPH_CON_S_V2_BANNER_PAYLOAD) {\n",
        "2866": "\t} else if ((con->state >= CEPH_CON_S_V2_HELLO &&\n",
        "2867": "\t\t    con->state <= CEPH_CON_S_V2_SESSION_RECONNECT) ||\n",
        "2868": "\t\t   con->state == CEPH_CON_S_OPEN) {\n",
        "2871": "\t\t\tret = handle_preamble(con);\n",
        "2917": "int ceph_con_v2_try_read(struct ceph_connection *con)\n",
        "2921": "\tdout(\"%s con %p state %d need %zu\\n\", __func__, con, con->state,\n",
        "2922": "\t     iov_iter_count(&con->v2.in_iter));\n",
        "2924": "\tif (con->state == CEPH_CON_S_PREOPEN)\n",
        "2936": "\t\tret = ceph_tcp_recv(con);\n",
        "2940": "\t\tret = populate_in_iter(con);\n"
    },
    "include/linux/ceph/messenger.h": {
        "519": "bool ceph_con_flag_test(struct ceph_connection *con, unsigned long con_flag);\n"
    }
}