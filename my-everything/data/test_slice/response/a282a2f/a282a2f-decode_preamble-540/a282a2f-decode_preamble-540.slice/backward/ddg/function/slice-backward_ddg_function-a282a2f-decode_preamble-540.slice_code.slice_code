file: /* messenger_v2.c */
function: /* static int decode_preamble(void *p, struct ceph_frame_desc *desc) */
495: static int decode_preamble(void *p, struct ceph_frame_desc *desc)
497: 	void *crcp = p + CEPH_PREAMBLE_LEN - CEPH_CRC_LEN;
501: 	crc = crc32c(0, p, crcp - p);
509: 	memset(desc, 0, sizeof(*desc));
511: 	desc->fd_tag = ceph_decode_8(&p);
512: 	desc->fd_seg_cnt = ceph_decode_8(&p);
513: 	if (desc->fd_seg_cnt < 1 ||
514: 	    desc->fd_seg_cnt > CEPH_FRAME_MAX_SEGMENT_COUNT) {
515: 		pr_err("bad segment count %d\n", desc->fd_seg_cnt);
518: 	for (i = 0; i < desc->fd_seg_cnt; i++) {
519: 		desc->fd_lens[i] = ceph_decode_32(&p);
520: 		desc->fd_aligns[i] = ceph_decode_16(&p);
527: 	if (!desc->fd_lens[desc->fd_seg_cnt - 1]) {
532: 	if (desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {
533: 		pr_err("control segment too big %d\n", desc->fd_lens[0]);
536: 	if (desc->fd_lens[1] > CEPH_MSG_MAX_FRONT_LEN) {
537: 		pr_err("front segment too big %d\n", desc->fd_lens[1]);
540: 	if (desc->fd_lens[2] > CEPH_MSG_MAX_MIDDLE_LEN) {
541: 		pr_err("middle segment too big %d\n", desc->fd_lens[2]);
544: 	if (desc->fd_lens[3] > CEPH_MSG_MAX_DATA_LEN) {
545: 		pr_err("data segment too big %d\n", desc->fd_lens[3]);
