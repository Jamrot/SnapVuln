{"single_graph": {"nodes": [{"type": "Function", "ID": 0, "name": "pkcs12_gen_mac"}, {"type": "FUNCDEF", "childNum": "0", "ID": 1, "code": "pkcs12_gen_mac (PKCS12 * p12 , const char * pass , int passlen , unsigned char * mac , unsigned int * maclen , int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type ))"}, {"type": "PARAMLIST", "childNum": "2", "ID": 2, "code": "PKCS12 * p12 , const char * pass , int passlen , unsigned char * mac , unsigned int * maclen , int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )"}, {"type": "PARAM", "childNum": "5", "ID": 3, "code": "int ( * pkcs12_key_gen ) ( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type )", "location": "3"}, {"type": "IDEN", "childNum": "1", "ID": 4, "code": "pkcs12_key_gen"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 5, "code": "(( const char * pass , int passlen , unsigned char * salt , int slen , int id , int iter , int n , unsigned char * out , const EVP_MD * md_type ) int) *"}, {"type": "PARAM", "childNum": "4", "ID": 6, "code": "unsigned int * maclen", "location": "2"}, {"type": "IDEN", "childNum": "1", "ID": 7, "code": "maclen"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 8, "code": "unsigned int *"}, {"type": "PARAM", "childNum": "3", "ID": 9, "code": "unsigned char * mac", "location": "2"}, {"type": "IDEN", "childNum": "1", "ID": 10, "code": "mac"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 11, "code": "unsigned char *"}, {"type": "PARAM", "childNum": "2", "ID": 12, "code": "int passlen", "location": "1"}, {"type": "IDEN", "childNum": "1", "ID": 13, "code": "passlen"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 14, "code": "int"}, {"type": "PARAM", "childNum": "1", "ID": 15, "code": "const char * pass", "location": "1"}, {"type": "IDEN", "childNum": "1", "ID": 16, "code": "pass"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 17, "code": "const char *"}, {"type": "PARAM", "childNum": "0", "ID": 18, "code": "PKCS12 * p12", "location": "1"}, {"type": "IDEN", "childNum": "1", "ID": 19, "code": "p12"}, {"type": "PARAMTYPE", "childNum": "0", "ID": 20, "code": "PKCS12 *"}, {"type": "RETURNTYPE", "childNum": "1", "ID": 21, "code": "static int"}, {"type": "COMPSTATE", "childNum": "0", "ID": 22, "code": "", "location": "8"}, {"type": "RETURNSTATE", "childNum": "22", "ID": 23, "code": "return 1 ;", "location": "67"}, {"type": "PRIEXPR", "childNum": "0", "ID": 24, "code": "1"}, {"type": "EXPRSTATE", "childNum": "21", "ID": 25, "code": "HMAC_CTX_free ( hmac )", "location": "66"}, {"type": "CALLEXPR", "childNum": "0", "ID": 26, "code": "HMAC_CTX_free ( hmac )"}, {"type": "ARGULIST", "childNum": "1", "ID": 27, "code": "hmac"}, {"type": "ARGUMENT", "childNum": "0", "ID": 28, "code": "hmac"}, {"type": "IDEN", "childNum": "0", "ID": 29, "code": "hmac"}, {"type": "CALLEE", "childNum": "0", "ID": 30, "code": "HMAC_CTX_free"}, {"type": "IDEN", "childNum": "0", "ID": 31, "code": "HMAC_CTX_free"}, {"type": "IFSTATE", "childNum": "20", "ID": 32, "code": "if ( ( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 33, "code": "", "location": "55"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 34, "code": "return 0 ;", "location": "64"}, {"type": "PRIEXPR", "childNum": "0", "ID": 35, "code": "0"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 36, "code": "HMAC_CTX_free ( hmac )", "location": "63"}, {"type": "CALLEXPR", "childNum": "0", "ID": 37, "code": "HMAC_CTX_free ( hmac )"}, {"type": "ARGULIST", "childNum": "1", "ID": 38, "code": "hmac"}, {"type": "ARGUMENT", "childNum": "0", "ID": 39, "code": "hmac"}, {"type": "IDEN", "childNum": "0", "ID": 40, "code": "hmac"}, {"type": "CALLEE", "childNum": "0", "ID": 41, "code": "HMAC_CTX_free"}, {"type": "IDEN", "childNum": "0", "ID": 42, "code": "HMAC_CTX_free"}, {"type": "COND", "childNum": "0", "ID": 43, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )", "location": "58"}, {"type": "OREXPR", "childNum": "0", "ID": 44, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL || ! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )"}, {"type": "OREXPR", "childNum": "1", "ID": 45, "code": "! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL ) || ! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )"}, {"type": "OREXPR", "childNum": "1", "ID": 46, "code": "! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length ) || ! HMAC_Final ( hmac , mac , maclen )"}, {"type": "UNAOP", "childNum": "1", "ID": 47, "code": "! HMAC_Final ( hmac , mac , maclen )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 48, "code": "HMAC_Final ( hmac , mac , maclen )"}, {"type": "ARGULIST", "childNum": "1", "ID": 49, "code": "hmac"}, {"type": "ARGUMENT", "childNum": "2", "ID": 50, "code": "maclen"}, {"type": "IDEN", "childNum": "0", "ID": 51, "code": "maclen"}, {"type": "ARGUMENT", "childNum": "1", "ID": 52, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 53, "code": "mac"}, {"type": "ARGUMENT", "childNum": "0", "ID": 54, "code": "hmac"}, {"type": "IDEN", "childNum": "0", "ID": 55, "code": "hmac"}, {"type": "CALLEE", "childNum": "0", "ID": 56, "code": "HMAC_Final"}, {"type": "IDEN", "childNum": "0", "ID": 57, "code": "HMAC_Final"}, {"type": "UNARYOPER", "childNum": "0", "ID": 58, "code": "!"}, {"type": "UNAOP", "childNum": "0", "ID": 59, "code": "! HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 60, "code": "HMAC_Update ( hmac , p12 -> authsafes -> d . data -> data , p12 -> authsafes -> d . data -> length )"}, {"type": "ARGULIST", "childNum": "1", "ID": 61, "code": "hmac"}, {"type": "ARGUMENT", "childNum": "2", "ID": 62, "code": "p12 -> authsafes -> d . data -> length"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 63, "code": "p12 -> authsafes -> d . data -> length"}, {"type": "IDEN", "childNum": "1", "ID": 64, "code": "length"}, {"type": "MEMACCESS", "childNum": "0", "ID": 65, "code": "p12 -> authsafes -> d . data"}, {"type": "IDEN", "childNum": "1", "ID": 66, "code": "data"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 67, "code": "p12 -> authsafes -> d"}, {"type": "IDEN", "childNum": "1", "ID": 68, "code": "d"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 69, "code": "p12 -> authsafes"}, {"type": "IDEN", "childNum": "1", "ID": 70, "code": "authsafes"}, {"type": "IDEN", "childNum": "0", "ID": 71, "code": "p12"}, {"type": "ARGUMENT", "childNum": "1", "ID": 72, "code": "p12 -> authsafes -> d . data -> data"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 73, "code": "p12 -> authsafes -> d . data -> data"}, {"type": "IDEN", "childNum": "1", "ID": 74, "code": "data"}, {"type": "MEMACCESS", "childNum": "0", "ID": 75, "code": "p12 -> authsafes -> d . data"}, {"type": "IDEN", "childNum": "1", "ID": 76, "code": "data"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 77, "code": "p12 -> authsafes -> d"}, {"type": "IDEN", "childNum": "1", "ID": 78, "code": "d"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 79, "code": "p12 -> authsafes"}, {"type": "IDEN", "childNum": "1", "ID": 80, "code": "authsafes"}, {"type": "IDEN", "childNum": "0", "ID": 81, "code": "p12"}, {"type": "ARGUMENT", "childNum": "0", "ID": 82, "code": "hmac"}, {"type": "IDEN", "childNum": "0", "ID": 83, "code": "hmac"}, {"type": "CALLEE", "childNum": "0", "ID": 84, "code": "HMAC_Update"}, {"type": "IDEN", "childNum": "0", "ID": 85, "code": "HMAC_Update"}, {"type": "UNARYOPER", "childNum": "0", "ID": 86, "code": "!"}, {"type": "UNAOP", "childNum": "0", "ID": 87, "code": "! HMAC_Init_ex ( hmac , key , md_size , md_type , NULL )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 88, "code": "HMAC_Init_ex ( hmac , key , md_size , md_type , NULL )"}, {"type": "ARGULIST", "childNum": "1", "ID": 89, "code": "hmac"}, {"type": "ARGUMENT", "childNum": "4", "ID": 90, "code": "NULL"}, {"type": "IDEN", "childNum": "0", "ID": 91, "code": "NULL"}, {"type": "ARGUMENT", "childNum": "3", "ID": 92, "code": "md_type"}, {"type": "IDEN", "childNum": "0", "ID": 93, "code": "md_type"}, {"type": "ARGUMENT", "childNum": "2", "ID": 94, "code": "md_size"}, {"type": "IDEN", "childNum": "0", "ID": 95, "code": "md_size"}, {"type": "ARGUMENT", "childNum": "1", "ID": 96, "code": "key"}, {"type": "IDEN", "childNum": "0", "ID": 97, "code": "key"}, {"type": "ARGUMENT", "childNum": "0", "ID": 98, "code": "hmac"}, {"type": "IDEN", "childNum": "0", "ID": 99, "code": "hmac"}, {"type": "CALLEE", "childNum": "0", "ID": 100, "code": "HMAC_Init_ex"}, {"type": "IDEN", "childNum": "0", "ID": 101, "code": "HMAC_Init_ex"}, {"type": "UNARYOPER", "childNum": "0", "ID": 102, "code": "!"}, {"type": "EQEXPR", "childNum": "0", "ID": 103, "code": "( hmac = HMAC_CTX_new ( ) ) == NULL"}, {"type": "IDEN", "childNum": "1", "ID": 104, "code": "NULL"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 105, "code": "hmac = HMAC_CTX_new ( )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 106, "code": "HMAC_CTX_new ( )"}, {"type": "ARGULIST", "childNum": "1", "ID": 107, "code": ""}, {"type": "CALLEE", "childNum": "0", "ID": 108, "code": "HMAC_CTX_new"}, {"type": "IDEN", "childNum": "0", "ID": 109, "code": "HMAC_CTX_new"}, {"type": "IDEN", "childNum": "0", "ID": 110, "code": "hmac"}, {"type": "IFSTATE", "childNum": "19", "ID": 111, "code": "if ( ( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\"}, {"type": "ELSESTATE", "childNum": "0", "ID": 112, "code": "else"}, {"type": "IFSTATE", "childNum": "0", "ID": 113, "code": "if ( ! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 114, "code": "", "location": "47"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 115, "code": "return 0 ;", "location": "56"}, {"type": "PRIEXPR", "childNum": "0", "ID": 116, "code": "0"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 117, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "55"}, {"type": "CALLEXPR", "childNum": "0", "ID": 118, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )"}, {"type": "ARGULIST", "childNum": "1", "ID": 119, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "ARGUMENT", "childNum": "1", "ID": 120, "code": "PKCS12_R_KEY_GEN_ERROR"}, {"type": "IDEN", "childNum": "0", "ID": 121, "code": "PKCS12_R_KEY_GEN_ERROR"}, {"type": "ARGUMENT", "childNum": "0", "ID": 122, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "IDEN", "childNum": "0", "ID": 123, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "CALLEE", "childNum": "0", "ID": 124, "code": "PKCS12err"}, {"type": "IDEN", "childNum": "0", "ID": 125, "code": "PKCS12err"}, {"type": "COND", "childNum": "0", "ID": 126, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )", "location": "53"}, {"type": "UNAOP", "childNum": "0", "ID": 127, "code": "! ( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 128, "code": "( * pkcs12_key_gen ) ( pass , passlen , salt , saltlen , PKCS12_MAC_ID , iter , md_size , key , md_type )"}, {"type": "ARGULIST", "childNum": "1", "ID": 129, "code": "pass"}, {"type": "ARGUMENT", "childNum": "8", "ID": 130, "code": "md_type"}, {"type": "IDEN", "childNum": "0", "ID": 131, "code": "md_type"}, {"type": "ARGUMENT", "childNum": "7", "ID": 132, "code": "key"}, {"type": "IDEN", "childNum": "0", "ID": 133, "code": "key"}, {"type": "ARGUMENT", "childNum": "6", "ID": 134, "code": "md_size"}, {"type": "IDEN", "childNum": "0", "ID": 135, "code": "md_size"}, {"type": "ARGUMENT", "childNum": "5", "ID": 136, "code": "iter"}, {"type": "IDEN", "childNum": "0", "ID": 137, "code": "iter"}, {"type": "ARGUMENT", "childNum": "4", "ID": 138, "code": "PKCS12_MAC_ID"}, {"type": "IDEN", "childNum": "0", "ID": 139, "code": "PKCS12_MAC_ID"}, {"type": "ARGUMENT", "childNum": "3", "ID": 140, "code": "saltlen"}, {"type": "IDEN", "childNum": "0", "ID": 141, "code": "saltlen"}, {"type": "ARGUMENT", "childNum": "2", "ID": 142, "code": "salt"}, {"type": "IDEN", "childNum": "0", "ID": 143, "code": "salt"}, {"type": "ARGUMENT", "childNum": "1", "ID": 144, "code": "passlen"}, {"type": "IDEN", "childNum": "0", "ID": 145, "code": "passlen"}, {"type": "ARGUMENT", "childNum": "0", "ID": 146, "code": "pass"}, {"type": "IDEN", "childNum": "0", "ID": 147, "code": "pass"}, {"type": "CALLEE", "childNum": "0", "ID": 148, "code": "* pkcs12_key_gen"}, {"type": "UNAOP", "childNum": "0", "ID": 149, "code": "* pkcs12_key_gen"}, {"type": "IDEN", "childNum": "1", "ID": 150, "code": "pkcs12_key_gen"}, {"type": "UNARYOPER", "childNum": "0", "ID": 151, "code": "*"}, {"type": "UNARYOPER", "childNum": "0", "ID": 152, "code": "!"}, {"type": "COMPSTATE", "childNum": "1", "ID": 153, "code": "", "location": "38"}, {"type": "IFSTATE", "childNum": "1", "ID": 154, "code": "if ( ! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 155, "code": "", "location": "41"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 156, "code": "return 0 ;", "location": "50"}, {"type": "PRIEXPR", "childNum": "0", "ID": 157, "code": "0"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 158, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )", "location": "49"}, {"type": "CALLEXPR", "childNum": "0", "ID": 159, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_KEY_GEN_ERROR )"}, {"type": "ARGULIST", "childNum": "1", "ID": 160, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "ARGUMENT", "childNum": "1", "ID": 161, "code": "PKCS12_R_KEY_GEN_ERROR"}, {"type": "IDEN", "childNum": "0", "ID": 162, "code": "PKCS12_R_KEY_GEN_ERROR"}, {"type": "ARGUMENT", "childNum": "0", "ID": 163, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "IDEN", "childNum": "0", "ID": 164, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "CALLEE", "childNum": "0", "ID": 165, "code": "PKCS12err"}, {"type": "IDEN", "childNum": "0", "ID": 166, "code": "PKCS12err"}, {"type": "COND", "childNum": "0", "ID": 167, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )", "location": "47"}, {"type": "UNAOP", "childNum": "0", "ID": 168, "code": "! pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 169, "code": "pkcs12_gen_gost_mac_key ( pass , passlen , salt , saltlen , iter , md_size , key , md_type )"}, {"type": "ARGULIST", "childNum": "1", "ID": 170, "code": "pass"}, {"type": "ARGUMENT", "childNum": "7", "ID": 171, "code": "md_type"}, {"type": "IDEN", "childNum": "0", "ID": 172, "code": "md_type"}, {"type": "ARGUMENT", "childNum": "6", "ID": 173, "code": "key"}, {"type": "IDEN", "childNum": "0", "ID": 174, "code": "key"}, {"type": "ARGUMENT", "childNum": "5", "ID": 175, "code": "md_size"}, {"type": "IDEN", "childNum": "0", "ID": 176, "code": "md_size"}, {"type": "ARGUMENT", "childNum": "4", "ID": 177, "code": "iter"}, {"type": "IDEN", "childNum": "0", "ID": 178, "code": "iter"}, {"type": "ARGUMENT", "childNum": "3", "ID": 179, "code": "saltlen"}, {"type": "IDEN", "childNum": "0", "ID": 180, "code": "saltlen"}, {"type": "ARGUMENT", "childNum": "2", "ID": 181, "code": "salt"}, {"type": "IDEN", "childNum": "0", "ID": 182, "code": "salt"}, {"type": "ARGUMENT", "childNum": "1", "ID": 183, "code": "passlen"}, {"type": "IDEN", "childNum": "0", "ID": 184, "code": "passlen"}, {"type": "ARGUMENT", "childNum": "0", "ID": 185, "code": "pass"}, {"type": "IDEN", "childNum": "0", "ID": 186, "code": "pass"}, {"type": "CALLEE", "childNum": "0", "ID": 187, "code": "pkcs12_gen_gost_mac_key"}, {"type": "IDEN", "childNum": "0", "ID": 188, "code": "pkcs12_gen_gost_mac_key"}, {"type": "UNARYOPER", "childNum": "0", "ID": 189, "code": "!"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 190, "code": "md_size = TK26_MAC_KEY_LEN", "location": "46"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 191, "code": "md_size = TK26_MAC_KEY_LEN"}, {"type": "IDEN", "childNum": "1", "ID": 192, "code": "TK26_MAC_KEY_LEN"}, {"type": "IDEN", "childNum": "0", "ID": 193, "code": "md_size"}, {"type": "COND", "childNum": "0", "ID": 194, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\", "location": "42"}, {"type": "ANDEXPR", "childNum": "0", "ID": 195, "code": "( md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512 ) && ! getenv ( \\\"LEGACY_GOST_PKCS12\\"}, {"type": "UNAOP", "childNum": "1", "ID": 196, "code": "! getenv ( \\\"LEGACY_GOST_PKCS12\\"}, {"type": "CALLEXPR", "childNum": "1", "ID": 197, "code": "getenv ( \\\"LEGACY_GOST_PKCS12\\"}, {"type": "ARGULIST", "childNum": "1", "ID": 198, "code": "\\\"LEGACY_GOST_PKCS12\\\""}, {"type": "ARGUMENT", "childNum": "0", "ID": 199, "code": "\\\"LEGACY_GOST_PKCS12\\\""}, {"type": "PRIEXPR", "childNum": "0", "ID": 200, "code": "\\\"LEGACY_GOST_PKCS12\\\""}, {"type": "CALLEE", "childNum": "0", "ID": 201, "code": "getenv"}, {"type": "IDEN", "childNum": "0", "ID": 202, "code": "getenv"}, {"type": "UNARYOPER", "childNum": "0", "ID": 203, "code": "!"}, {"type": "OREXPR", "childNum": "0", "ID": 204, "code": "md_type_nid == NID_id_GostR3411_94 || md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512"}, {"type": "OREXPR", "childNum": "1", "ID": 205, "code": "md_type_nid == NID_id_GostR3411_2012_256 || md_type_nid == NID_id_GostR3411_2012_512"}, {"type": "EQEXPR", "childNum": "1", "ID": 206, "code": "md_type_nid == NID_id_GostR3411_2012_512"}, {"type": "IDEN", "childNum": "1", "ID": 207, "code": "NID_id_GostR3411_2012_512"}, {"type": "IDEN", "childNum": "0", "ID": 208, "code": "md_type_nid"}, {"type": "EQEXPR", "childNum": "0", "ID": 209, "code": "md_type_nid == NID_id_GostR3411_2012_256"}, {"type": "IDEN", "childNum": "1", "ID": 210, "code": "NID_id_GostR3411_2012_256"}, {"type": "IDEN", "childNum": "0", "ID": 211, "code": "md_type_nid"}, {"type": "EQEXPR", "childNum": "0", "ID": 212, "code": "md_type_nid == NID_id_GostR3411_94"}, {"type": "IDEN", "childNum": "1", "ID": 213, "code": "NID_id_GostR3411_94"}, {"type": "IDEN", "childNum": "0", "ID": 214, "code": "md_type_nid"}, {"type": "IFSTATE", "childNum": "18", "ID": 215, "code": "if ( md_size < 0 )"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 216, "code": "return 0 ;", "location": "41"}, {"type": "PRIEXPR", "childNum": "0", "ID": 217, "code": "0"}, {"type": "COND", "childNum": "0", "ID": 218, "code": "md_size < 0", "location": "40"}, {"type": "RELATIONEXPRE", "childNum": "0", "ID": 219, "code": "md_size < 0"}, {"type": "PRIEXPR", "childNum": "1", "ID": 220, "code": "0"}, {"type": "IDEN", "childNum": "0", "ID": 221, "code": "md_size"}, {"type": "EXPRSTATE", "childNum": "17", "ID": 222, "code": "md_type_nid = EVP_MD_type ( md_type )", "location": "39"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 223, "code": "md_type_nid = EVP_MD_type ( md_type )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 224, "code": "EVP_MD_type ( md_type )"}, {"type": "ARGULIST", "childNum": "1", "ID": 225, "code": "md_type"}, {"type": "ARGUMENT", "childNum": "0", "ID": 226, "code": "md_type"}, {"type": "IDEN", "childNum": "0", "ID": 227, "code": "md_type"}, {"type": "CALLEE", "childNum": "0", "ID": 228, "code": "EVP_MD_type"}, {"type": "IDEN", "childNum": "0", "ID": 229, "code": "EVP_MD_type"}, {"type": "IDEN", "childNum": "0", "ID": 230, "code": "md_type_nid"}, {"type": "EXPRSTATE", "childNum": "16", "ID": 231, "code": "md_size = EVP_MD_size ( md_type )", "location": "38"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 232, "code": "md_size = EVP_MD_size ( md_type )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 233, "code": "EVP_MD_size ( md_type )"}, {"type": "ARGULIST", "childNum": "1", "ID": 234, "code": "md_type"}, {"type": "ARGUMENT", "childNum": "0", "ID": 235, "code": "md_type"}, {"type": "IDEN", "childNum": "0", "ID": 236, "code": "md_type"}, {"type": "CALLEE", "childNum": "0", "ID": 237, "code": "EVP_MD_size"}, {"type": "IDEN", "childNum": "0", "ID": 238, "code": "EVP_MD_size"}, {"type": "IDEN", "childNum": "0", "ID": 239, "code": "md_size"}, {"type": "IFSTATE", "childNum": "15", "ID": 240, "code": "if ( ( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 241, "code": "", "location": "27"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 242, "code": "return 0 ;", "location": "36"}, {"type": "PRIEXPR", "childNum": "0", "ID": 243, "code": "0"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 244, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_UNKNOWN_DIGEST_ALGORITHM )", "location": "35"}, {"type": "CALLEXPR", "childNum": "0", "ID": 245, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_UNKNOWN_DIGEST_ALGORITHM )"}, {"type": "ARGULIST", "childNum": "1", "ID": 246, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "ARGUMENT", "childNum": "1", "ID": 247, "code": "PKCS12_R_UNKNOWN_DIGEST_ALGORITHM"}, {"type": "IDEN", "childNum": "0", "ID": 248, "code": "PKCS12_R_UNKNOWN_DIGEST_ALGORITHM"}, {"type": "ARGUMENT", "childNum": "0", "ID": 249, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "IDEN", "childNum": "0", "ID": 250, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "CALLEE", "childNum": "0", "ID": 251, "code": "PKCS12err"}, {"type": "IDEN", "childNum": "0", "ID": 252, "code": "PKCS12err"}, {"type": "COND", "childNum": "0", "ID": 253, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL", "location": "34"}, {"type": "EQEXPR", "childNum": "0", "ID": 254, "code": "( md_type = EVP_get_digestbyobj ( macoid ) ) == NULL"}, {"type": "IDEN", "childNum": "1", "ID": 255, "code": "NULL"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 256, "code": "md_type = EVP_get_digestbyobj ( macoid )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 257, "code": "EVP_get_digestbyobj ( macoid )"}, {"type": "ARGULIST", "childNum": "1", "ID": 258, "code": "macoid"}, {"type": "ARGUMENT", "childNum": "0", "ID": 259, "code": "macoid"}, {"type": "IDEN", "childNum": "0", "ID": 260, "code": "macoid"}, {"type": "CALLEE", "childNum": "0", "ID": 261, "code": "EVP_get_digestbyobj"}, {"type": "IDEN", "childNum": "0", "ID": 262, "code": "EVP_get_digestbyobj"}, {"type": "IDEN", "childNum": "0", "ID": 263, "code": "md_type"}, {"type": "EXPRSTATE", "childNum": "14", "ID": 264, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )", "location": "33"}, {"type": "CALLEXPR", "childNum": "0", "ID": 265, "code": "X509_ALGOR_get0 ( & macoid , NULL , NULL , macalg )"}, {"type": "ARGULIST", "childNum": "1", "ID": 266, "code": "& macoid"}, {"type": "ARGUMENT", "childNum": "3", "ID": 267, "code": "macalg"}, {"type": "IDEN", "childNum": "0", "ID": 268, "code": "macalg"}, {"type": "ARGUMENT", "childNum": "2", "ID": 269, "code": "NULL"}, {"type": "IDEN", "childNum": "0", "ID": 270, "code": "NULL"}, {"type": "ARGUMENT", "childNum": "1", "ID": 271, "code": "NULL"}, {"type": "IDEN", "childNum": "0", "ID": 272, "code": "NULL"}, {"type": "ARGUMENT", "childNum": "0", "ID": 273, "code": "& macoid"}, {"type": "UNAOP", "childNum": "0", "ID": 274, "code": "& macoid"}, {"type": "IDEN", "childNum": "1", "ID": 275, "code": "macoid"}, {"type": "UNARYOPER", "childNum": "0", "ID": 276, "code": "&"}, {"type": "CALLEE", "childNum": "0", "ID": 277, "code": "X509_ALGOR_get0"}, {"type": "IDEN", "childNum": "0", "ID": 278, "code": "X509_ALGOR_get0"}, {"type": "EXPRSTATE", "childNum": "13", "ID": 279, "code": "X509_SIG_get0 ( p12 -> mac -> dinfo , & macalg , NULL )", "location": "32"}, {"type": "CALLEXPR", "childNum": "0", "ID": 280, "code": "X509_SIG_get0 ( p12 -> mac -> dinfo , & macalg , NULL )"}, {"type": "ARGULIST", "childNum": "1", "ID": 281, "code": "p12 -> mac -> dinfo"}, {"type": "ARGUMENT", "childNum": "2", "ID": 282, "code": "NULL"}, {"type": "IDEN", "childNum": "0", "ID": 283, "code": "NULL"}, {"type": "ARGUMENT", "childNum": "1", "ID": 284, "code": "& macalg"}, {"type": "UNAOP", "childNum": "0", "ID": 285, "code": "& macalg"}, {"type": "IDEN", "childNum": "1", "ID": 286, "code": "macalg"}, {"type": "UNARYOPER", "childNum": "0", "ID": 287, "code": "&"}, {"type": "ARGUMENT", "childNum": "0", "ID": 288, "code": "p12 -> mac -> dinfo"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 289, "code": "p12 -> mac -> dinfo"}, {"type": "IDEN", "childNum": "1", "ID": 290, "code": "dinfo"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 291, "code": "p12 -> mac"}, {"type": "IDEN", "childNum": "1", "ID": 292, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 293, "code": "p12"}, {"type": "CALLEE", "childNum": "0", "ID": 294, "code": "X509_SIG_get0"}, {"type": "IDEN", "childNum": "0", "ID": 295, "code": "X509_SIG_get0"}, {"type": "IFSTATE", "childNum": "12", "ID": 296, "code": "if ( ! p12 -> mac -> iter )"}, {"type": "ELSESTATE", "childNum": "0", "ID": 297, "code": "else"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 298, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )", "location": "31"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 299, "code": "iter = ASN1_INTEGER_get ( p12 -> mac -> iter )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 300, "code": "ASN1_INTEGER_get ( p12 -> mac -> iter )"}, {"type": "ARGULIST", "childNum": "1", "ID": 301, "code": "p12 -> mac -> iter"}, {"type": "ARGUMENT", "childNum": "0", "ID": 302, "code": "p12 -> mac -> iter"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 303, "code": "p12 -> mac -> iter"}, {"type": "IDEN", "childNum": "1", "ID": 304, "code": "iter"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 305, "code": "p12 -> mac"}, {"type": "IDEN", "childNum": "1", "ID": 306, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 307, "code": "p12"}, {"type": "CALLEE", "childNum": "0", "ID": 308, "code": "ASN1_INTEGER_get"}, {"type": "IDEN", "childNum": "0", "ID": 309, "code": "ASN1_INTEGER_get"}, {"type": "IDEN", "childNum": "0", "ID": 310, "code": "iter"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 311, "code": "iter = 1", "location": "29"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 312, "code": "iter = 1"}, {"type": "PRIEXPR", "childNum": "1", "ID": 313, "code": "1"}, {"type": "IDEN", "childNum": "0", "ID": 314, "code": "iter"}, {"type": "COND", "childNum": "0", "ID": 315, "code": "! p12 -> mac -> iter", "location": "28"}, {"type": "UNAOP", "childNum": "0", "ID": 316, "code": "! p12 -> mac -> iter"}, {"type": "PTRMEMACCESS", "childNum": "1", "ID": 317, "code": "p12 -> mac -> iter"}, {"type": "IDEN", "childNum": "1", "ID": 318, "code": "iter"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 319, "code": "p12 -> mac"}, {"type": "IDEN", "childNum": "1", "ID": 320, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 321, "code": "p12"}, {"type": "UNARYOPER", "childNum": "0", "ID": 322, "code": "!"}, {"type": "EXPRSTATE", "childNum": "11", "ID": 323, "code": "saltlen = p12 -> mac -> salt -> length", "location": "27"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 324, "code": "saltlen = p12 -> mac -> salt -> length"}, {"type": "PTRMEMACCESS", "childNum": "1", "ID": 325, "code": "p12 -> mac -> salt -> length"}, {"type": "IDEN", "childNum": "1", "ID": 326, "code": "length"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 327, "code": "p12 -> mac -> salt"}, {"type": "IDEN", "childNum": "1", "ID": 328, "code": "salt"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 329, "code": "p12 -> mac"}, {"type": "IDEN", "childNum": "1", "ID": 330, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 331, "code": "p12"}, {"type": "IDEN", "childNum": "0", "ID": 332, "code": "saltlen"}, {"type": "EXPRSTATE", "childNum": "10", "ID": 333, "code": "salt = p12 -> mac -> salt -> data", "location": "26"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 334, "code": "salt = p12 -> mac -> salt -> data"}, {"type": "PTRMEMACCESS", "childNum": "1", "ID": 335, "code": "p12 -> mac -> salt -> data"}, {"type": "IDEN", "childNum": "1", "ID": 336, "code": "data"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 337, "code": "p12 -> mac -> salt"}, {"type": "IDEN", "childNum": "1", "ID": 338, "code": "salt"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 339, "code": "p12 -> mac"}, {"type": "IDEN", "childNum": "1", "ID": 340, "code": "mac"}, {"type": "IDEN", "childNum": "0", "ID": 341, "code": "p12"}, {"type": "IDEN", "childNum": "0", "ID": 342, "code": "salt"}, {"type": "IFSTATE", "childNum": "9", "ID": 343, "code": "if ( ! PKCS7_type_is_data ( p12 -> authsafes ) )"}, {"type": "COMPSTATE", "childNum": "1", "ID": 344, "code": "", "location": "14"}, {"type": "RETURNSTATE", "childNum": "1", "ID": 345, "code": "return 0 ;", "location": "23"}, {"type": "PRIEXPR", "childNum": "0", "ID": 346, "code": "0"}, {"type": "EXPRSTATE", "childNum": "0", "ID": 347, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_CONTENT_TYPE_NOT_DATA )", "location": "22"}, {"type": "CALLEXPR", "childNum": "0", "ID": 348, "code": "PKCS12err ( PKCS12_F_PKCS12_GEN_MAC , PKCS12_R_CONTENT_TYPE_NOT_DATA )"}, {"type": "ARGULIST", "childNum": "1", "ID": 349, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "ARGUMENT", "childNum": "1", "ID": 350, "code": "PKCS12_R_CONTENT_TYPE_NOT_DATA"}, {"type": "IDEN", "childNum": "0", "ID": 351, "code": "PKCS12_R_CONTENT_TYPE_NOT_DATA"}, {"type": "ARGUMENT", "childNum": "0", "ID": 352, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "IDEN", "childNum": "0", "ID": 353, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "CALLEE", "childNum": "0", "ID": 354, "code": "PKCS12err"}, {"type": "IDEN", "childNum": "0", "ID": 355, "code": "PKCS12err"}, {"type": "COND", "childNum": "0", "ID": 356, "code": "! PKCS7_type_is_data ( p12 -> authsafes )", "location": "21"}, {"type": "UNAOP", "childNum": "0", "ID": 357, "code": "! PKCS7_type_is_data ( p12 -> authsafes )"}, {"type": "CALLEXPR", "childNum": "1", "ID": 358, "code": "PKCS7_type_is_data ( p12 -> authsafes )"}, {"type": "ARGULIST", "childNum": "1", "ID": 359, "code": "p12 -> authsafes"}, {"type": "ARGUMENT", "childNum": "0", "ID": 360, "code": "p12 -> authsafes"}, {"type": "PTRMEMACCESS", "childNum": "0", "ID": 361, "code": "p12 -> authsafes"}, {"type": "IDEN", "childNum": "1", "ID": 362, "code": "authsafes"}, {"type": "IDEN", "childNum": "0", "ID": 363, "code": "p12"}, {"type": "CALLEE", "childNum": "0", "ID": 364, "code": "PKCS7_type_is_data"}, {"type": "IDEN", "childNum": "0", "ID": 365, "code": "PKCS7_type_is_data"}, {"type": "UNARYOPER", "childNum": "0", "ID": 366, "code": "!"}, {"type": "IFSTATE", "childNum": "8", "ID": 367, "code": "if ( pkcs12_key_gen == NULL )"}, {"type": "EXPRSTATE", "childNum": "1", "ID": 368, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8", "location": "19"}, {"type": "ASSIGNEXPR", "childNum": "0", "ID": 369, "code": "pkcs12_key_gen = PKCS12_key_gen_utf8"}, {"type": "IDEN", "childNum": "1", "ID": 370, "code": "PKCS12_key_gen_utf8"}, {"type": "IDEN", "childNum": "0", "ID": 371, "code": "pkcs12_key_gen"}, {"type": "COND", "childNum": "0", "ID": 372, "code": "pkcs12_key_gen == NULL", "location": "18"}, {"type": "EQEXPR", "childNum": "0", "ID": 373, "code": "pkcs12_key_gen == NULL"}, {"type": "IDEN", "childNum": "1", "ID": 374, "code": "NULL"}, {"type": "IDEN", "childNum": "0", "ID": 375, "code": "pkcs12_key_gen"}, {"type": "IDENDECLSTATE", "childNum": "7", "ID": 376, "code": "const ASN1_OBJECT * macoid ;", "location": "16"}, {"type": "IDENDECL", "childNum": "0", "ID": 377, "code": "* macoid"}, {"type": "IDEN", "childNum": "1", "ID": 378, "code": "macoid"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 379, "code": "const ASN1_OBJECT *"}, {"type": "IDENDECLSTATE", "childNum": "6", "ID": 380, "code": "const X509_ALGOR * macalg ;", "location": "15"}, {"type": "IDENDECL", "childNum": "0", "ID": 381, "code": "* macalg"}, {"type": "IDEN", "childNum": "1", "ID": 382, "code": "macalg"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 383, "code": "const X509_ALGOR *"}, {"type": "IDENDECLSTATE", "childNum": "5", "ID": 384, "code": "int md_type_nid ;", "location": "14"}, {"type": "IDENDECL", "childNum": "0", "ID": 385, "code": "md_type_nid"}, {"type": "IDEN", "childNum": "1", "ID": 386, "code": "md_type_nid"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 387, "code": "int"}, {"type": "IDENDECLSTATE", "childNum": "4", "ID": 388, "code": "int md_size = 0 ;", "location": "13"}, {"type": "IDENDECL", "childNum": "0", "ID": 389, "code": "md_size = 0"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 390, "code": "md_size = 0"}, {"type": "PRIEXPR", "childNum": "1", "ID": 391, "code": "0"}, {"type": "IDEN", "childNum": "0", "ID": 392, "code": "md_size"}, {"type": "IDEN", "childNum": "0", "ID": 393, "code": "md_size"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 394, "code": "int"}, {"type": "IDENDECLSTATE", "childNum": "3", "ID": 395, "code": "int saltlen , iter ;", "location": "12"}, {"type": "IDENDECL", "childNum": "1", "ID": 396, "code": "iter"}, {"type": "IDEN", "childNum": "1", "ID": 397, "code": "iter"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 398, "code": "int"}, {"type": "IDENDECL", "childNum": "0", "ID": 399, "code": "saltlen"}, {"type": "IDEN", "childNum": "1", "ID": 400, "code": "saltlen"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 401, "code": "int"}, {"type": "IDENDECLSTATE", "childNum": "2", "ID": 402, "code": "unsigned char key [ EVP_MAX_MD_SIZE ] , * salt ;", "location": "11"}, {"type": "IDENDECL", "childNum": "1", "ID": 403, "code": "* salt"}, {"type": "IDEN", "childNum": "1", "ID": 404, "code": "salt"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 405, "code": "unsigned char *"}, {"type": "IDENDECL", "childNum": "0", "ID": 406, "code": "key [ EVP_MAX_MD_SIZE ]"}, {"type": "IDEN", "childNum": "2", "ID": 407, "code": "EVP_MAX_MD_SIZE"}, {"type": "IDEN", "childNum": "1", "ID": 408, "code": "key"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 409, "code": "unsigned char [ EVP_MAX_MD_SIZE ]"}, {"type": "IDENDECLSTATE", "childNum": "1", "ID": 410, "code": "HMAC_CTX * hmac = NULL ;", "location": "10"}, {"type": "IDENDECL", "childNum": "0", "ID": 411, "code": "* hmac = NULL"}, {"type": "ASSIGNEXPR", "childNum": "2", "ID": 412, "code": "* hmac = NULL"}, {"type": "IDEN", "childNum": "1", "ID": 413, "code": "NULL"}, {"type": "IDEN", "childNum": "1", "ID": 414, "code": "NULL"}, {"type": "IDEN", "childNum": "1", "ID": 415, "code": "hmac"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 416, "code": "HMAC_CTX *"}, {"type": "IDENDECLSTATE", "childNum": "0", "ID": 417, "code": "const EVP_MD * md_type ;", "location": "9"}, {"type": "IDENDECL", "childNum": "0", "ID": 418, "code": "* md_type"}, {"type": "IDEN", "childNum": "1", "ID": 419, "code": "md_type"}, {"type": "IDENDECLTYPE", "childNum": "0", "ID": 420, "code": "const EVP_MD *"}, {"type": "CFGENTRYNODE", "ID": 421, "code": "ENTRY"}, {"type": "CFGEXITNODE", "ID": 422, "code": "EXIT"}, {"type": "SYS", "ID": 423, "code": "NID_id_GostR3411_2012_512"}, {"type": "SYS", "ID": 424, "code": "* p12 -> authsafes -> d"}, {"type": "SYS", "ID": 425, "code": "md_type_nid"}, {"type": "SYS", "ID": 426, "code": "NID_id_GostR3411_94"}, {"type": "SYS", "ID": 427, "code": "* p12 -> authsafes"}, {"type": "SYS", "ID": 428, "code": "ASN1_INTEGER_get"}, {"type": "SYS", "ID": 429, "code": "p12 -> mac"}, {"type": "SYS", "ID": 430, "code": "* * * p12"}, {"type": "SYS", "ID": 431, "code": "* pkcs12_key_gen"}, {"type": "SYS", "ID": 432, "code": "p12"}, {"type": "SYS", "ID": 433, "code": "TK26_MAC_KEY_LEN"}, {"type": "SYS", "ID": 434, "code": "p12 -> authsafes -> d . data -> length"}, {"type": "SYS", "ID": 435, "code": "EVP_get_digestbyobj"}, {"type": "SYS", "ID": 436, "code": "pkcs12_key_gen"}, {"type": "SYS", "ID": 437, "code": "macoid"}, {"type": "SYS", "ID": 438, "code": "& macalg"}, {"type": "SYS", "ID": 439, "code": "EVP_MD_type"}, {"type": "SYS", "ID": 440, "code": "NULL"}, {"type": "SYS", "ID": 441, "code": "pass"}, {"type": "SYS", "ID": 442, "code": "iter"}, {"type": "SYS", "ID": 443, "code": "p12 -> authsafes"}, {"type": "SYS", "ID": 444, "code": "HMAC_Final"}, {"type": "SYS", "ID": 445, "code": "passlen"}, {"type": "SYS", "ID": 446, "code": "p12 -> mac -> salt"}, {"type": "SYS", "ID": 447, "code": "md_size"}, {"type": "SYS", "ID": 448, "code": "p12 -> mac -> salt -> length"}, {"type": "SYS", "ID": 449, "code": "* * p12 -> authsafes"}, {"type": "SYS", "ID": 450, "code": "PKCS7_type_is_data"}, {"type": "SYS", "ID": 451, "code": "p12 -> authsafes -> d . data"}, {"type": "SYS", "ID": 452, "code": "HMAC_Update"}, {"type": "SYS", "ID": 453, "code": "mac"}, {"type": "SYS", "ID": 454, "code": "NID_id_GostR3411_2012_256"}, {"type": "SYS", "ID": 455, "code": "PKCS12_R_CONTENT_TYPE_NOT_DATA"}, {"type": "SYS", "ID": 456, "code": "p12 -> authsafes -> d"}, {"type": "SYS", "ID": 457, "code": "EVP_MD_size"}, {"type": "SYS", "ID": 458, "code": "PKCS12_R_KEY_GEN_ERROR"}, {"type": "SYS", "ID": 459, "code": "hmac"}, {"type": "SYS", "ID": 460, "code": "PKCS12_F_PKCS12_GEN_MAC"}, {"type": "SYS", "ID": 461, "code": "key"}, {"type": "SYS", "ID": 462, "code": "* p12 -> mac -> salt"}, {"type": "SYS", "ID": 463, "code": "getenv"}, {"type": "SYS", "ID": 464, "code": "p12 -> mac -> iter"}, {"type": "SYS", "ID": 465, "code": "maclen"}, {"type": "SYS", "ID": 466, "code": "salt"}, {"type": "SYS", "ID": 467, "code": "PKCS12_key_gen_utf8"}, {"type": "SYS", "ID": 468, "code": "p12 -> authsafes -> d . data -> data"}, {"type": "SYS", "ID": 469, "code": "saltlen"}, {"type": "SYS", "ID": 470, "code": "* * p12"}, {"type": "SYS", "ID": 471, "code": "macalg"}, {"type": "SYS", "ID": 472, "code": "PKCS12_R_UNKNOWN_DIGEST_ALGORITHM"}, {"type": "SYS", "ID": 473, "code": "* p12 -> authsafes -> d . data"}, {"type": "SYS", "ID": 474, "code": "& macoid"}, {"type": "SYS", "ID": 475, "code": "HMAC_CTX_new"}, {"type": "SYS", "ID": 476, "code": "HMAC_Init_ex"}, {"type": "SYS", "ID": 477, "code": "pkcs12_gen_gost_mac_key"}, {"type": "SYS", "ID": 478, "code": "* p12 -> mac"}, {"type": "SYS", "ID": 479, "code": "p12 -> mac -> dinfo"}, {"type": "SYS", "ID": 480, "code": "PKCS12_MAC_ID"}, {"type": "SYS", "ID": 481, "code": "* p12"}, {"type": "SYS", "ID": 482, "code": "* * p12 -> mac"}, {"type": "SYS", "ID": 483, "code": "p12 -> mac -> salt -> data"}, {"type": "SYS", "ID": 484, "code": "md_type"}], "edges": [["IS_AST_PARENT", 3, 4], ["IS_AST_PARENT", 3, 5], ["IS_AST_PARENT", 2, 3], ["IS_AST_PARENT", 6, 7], ["IS_AST_PARENT", 6, 8], ["IS_AST_PARENT", 2, 6], ["IS_AST_PARENT", 9, 10], ["IS_AST_PARENT", 9, 11], ["IS_AST_PARENT", 2, 9], ["IS_AST_PARENT", 12, 13], ["IS_AST_PARENT", 12, 14], ["IS_AST_PARENT", 2, 12], ["IS_AST_PARENT", 15, 16], ["IS_AST_PARENT", 15, 17], ["IS_AST_PARENT", 2, 15], ["IS_AST_PARENT", 18, 19], ["IS_AST_PARENT", 18, 20], ["IS_AST_PARENT", 2, 18], ["IS_AST_PARENT", 1, 2], ["IS_AST_PARENT", 1, 21], ["IS_AST_PARENT", 23, 24], ["IS_AST_PARENT", 22, 23], ["IS_AST_PARENT", 28, 29], ["IS_AST_PARENT", 27, 28], ["IS_AST_PARENT", 26, 27], ["IS_AST_PARENT", 30, 31], ["IS_AST_PARENT", 26, 30], ["IS_AST_PARENT", 25, 26], ["IS_AST_PARENT", 22, 25], ["IS_AST_PARENT", 34, 35], ["IS_AST_PARENT", 33, 34], ["IS_AST_PARENT", 39, 40], ["IS_AST_PARENT", 38, 39], ["IS_AST_PARENT", 37, 38], ["IS_AST_PARENT", 41, 42], ["IS_AST_PARENT", 37, 41], ["IS_AST_PARENT", 36, 37], ["IS_AST_PARENT", 33, 36], ["IS_AST_PARENT", 32, 33], ["IS_AST_PARENT", 50, 51], ["IS_AST_PARENT", 49, 50], ["IS_AST_PARENT", 52, 53], ["IS_AST_PARENT", 49, 52], ["IS_AST_PARENT", 54, 55], ["IS_AST_PARENT", 49, 54], ["IS_AST_PARENT", 48, 49], ["IS_AST_PARENT", 56, 57], ["IS_AST_PARENT", 48, 56], ["IS_AST_PARENT", 47, 48], ["IS_AST_PARENT", 47, 58], ["IS_AST_PARENT", 46, 47], ["IS_AST_PARENT", 63, 64], ["IS_AST_PARENT", 65, 66], ["IS_AST_PARENT", 67, 68], ["IS_AST_PARENT", 69, 70], ["IS_AST_PARENT", 69, 71], ["IS_AST_PARENT", 67, 69], ["IS_AST_PARENT", 65, 67], ["IS_AST_PARENT", 63, 65], ["IS_AST_PARENT", 62, 63], ["IS_AST_PARENT", 61, 62], ["IS_AST_PARENT", 73, 74], ["IS_AST_PARENT", 75, 76], ["IS_AST_PARENT", 77, 78], ["IS_AST_PARENT", 79, 80], ["IS_AST_PARENT", 79, 81], ["IS_AST_PARENT", 77, 79], ["IS_AST_PARENT", 75, 77], ["IS_AST_PARENT", 73, 75], ["IS_AST_PARENT", 72, 73], ["IS_AST_PARENT", 61, 72], ["IS_AST_PARENT", 82, 83], ["IS_AST_PARENT", 61, 82], ["IS_AST_PARENT", 60, 61], ["IS_AST_PARENT", 84, 85], ["IS_AST_PARENT", 60, 84], ["IS_AST_PARENT", 59, 60], ["IS_AST_PARENT", 59, 86], ["IS_AST_PARENT", 46, 59], ["IS_AST_PARENT", 45, 46], ["IS_AST_PARENT", 90, 91], ["IS_AST_PARENT", 89, 90], ["IS_AST_PARENT", 92, 93], ["IS_AST_PARENT", 89, 92], ["IS_AST_PARENT", 94, 95], ["IS_AST_PARENT", 89, 94], ["IS_AST_PARENT", 96, 97], ["IS_AST_PARENT", 89, 96], ["IS_AST_PARENT", 98, 99], ["IS_AST_PARENT", 89, 98], ["IS_AST_PARENT", 88, 89], ["IS_AST_PARENT", 100, 101], ["IS_AST_PARENT", 88, 100], ["IS_AST_PARENT", 87, 88], ["IS_AST_PARENT", 87, 102], ["IS_AST_PARENT", 45, 87], ["IS_AST_PARENT", 44, 45], ["IS_AST_PARENT", 103, 104], ["IS_AST_PARENT", 106, 107], ["IS_AST_PARENT", 108, 109], ["IS_AST_PARENT", 106, 108], ["IS_AST_PARENT", 105, 106], ["IS_AST_PARENT", 105, 110], ["IS_AST_PARENT", 103, 105], ["IS_AST_PARENT", 44, 103], ["IS_AST_PARENT", 43, 44], ["IS_AST_PARENT", 32, 43], ["IS_AST_PARENT", 22, 32], ["IS_AST_PARENT", 115, 116], ["IS_AST_PARENT", 114, 115], ["IS_AST_PARENT", 120, 121], ["IS_AST_PARENT", 119, 120], ["IS_AST_PARENT", 122, 123], ["IS_AST_PARENT", 119, 122], ["IS_AST_PARENT", 118, 119], ["IS_AST_PARENT", 124, 125], ["IS_AST_PARENT", 118, 124], ["IS_AST_PARENT", 117, 118], ["IS_AST_PARENT", 114, 117], ["IS_AST_PARENT", 113, 114], ["IS_AST_PARENT", 130, 131], ["IS_AST_PARENT", 129, 130], ["IS_AST_PARENT", 132, 133], ["IS_AST_PARENT", 129, 132], ["IS_AST_PARENT", 134, 135], ["IS_AST_PARENT", 129, 134], ["IS_AST_PARENT", 136, 137], ["IS_AST_PARENT", 129, 136], ["IS_AST_PARENT", 138, 139], ["IS_AST_PARENT", 129, 138], ["IS_AST_PARENT", 140, 141], ["IS_AST_PARENT", 129, 140], ["IS_AST_PARENT", 142, 143], ["IS_AST_PARENT", 129, 142], ["IS_AST_PARENT", 144, 145], ["IS_AST_PARENT", 129, 144], ["IS_AST_PARENT", 146, 147], ["IS_AST_PARENT", 129, 146], ["IS_AST_PARENT", 128, 129], ["IS_AST_PARENT", 149, 150], ["IS_AST_PARENT", 149, 151], ["IS_AST_PARENT", 148, 149], ["IS_AST_PARENT", 128, 148], ["IS_AST_PARENT", 127, 128], ["IS_AST_PARENT", 127, 152], ["IS_AST_PARENT", 126, 127], ["IS_AST_PARENT", 113, 126], ["IS_AST_PARENT", 112, 113], ["IS_AST_PARENT", 111, 112], ["IS_AST_PARENT", 156, 157], ["IS_AST_PARENT", 155, 156], ["IS_AST_PARENT", 161, 162], ["IS_AST_PARENT", 160, 161], ["IS_AST_PARENT", 163, 164], ["IS_AST_PARENT", 160, 163], ["IS_AST_PARENT", 159, 160], ["IS_AST_PARENT", 165, 166], ["IS_AST_PARENT", 159, 165], ["IS_AST_PARENT", 158, 159], ["IS_AST_PARENT", 155, 158], ["IS_AST_PARENT", 154, 155], ["IS_AST_PARENT", 171, 172], ["IS_AST_PARENT", 170, 171], ["IS_AST_PARENT", 173, 174], ["IS_AST_PARENT", 170, 173], ["IS_AST_PARENT", 175, 176], ["IS_AST_PARENT", 170, 175], ["IS_AST_PARENT", 177, 178], ["IS_AST_PARENT", 170, 177], ["IS_AST_PARENT", 179, 180], ["IS_AST_PARENT", 170, 179], ["IS_AST_PARENT", 181, 182], ["IS_AST_PARENT", 170, 181], ["IS_AST_PARENT", 183, 184], ["IS_AST_PARENT", 170, 183], ["IS_AST_PARENT", 185, 186], ["IS_AST_PARENT", 170, 185], ["IS_AST_PARENT", 169, 170], ["IS_AST_PARENT", 187, 188], ["IS_AST_PARENT", 169, 187], ["IS_AST_PARENT", 168, 169], ["IS_AST_PARENT", 168, 189], ["IS_AST_PARENT", 167, 168], ["IS_AST_PARENT", 154, 167], ["IS_AST_PARENT", 153, 154], ["IS_AST_PARENT", 191, 192], ["IS_AST_PARENT", 191, 193], ["IS_AST_PARENT", 190, 191], ["IS_AST_PARENT", 153, 190], ["IS_AST_PARENT", 111, 153], ["IS_AST_PARENT", 199, 200], ["IS_AST_PARENT", 198, 199], ["IS_AST_PARENT", 197, 198], ["IS_AST_PARENT", 201, 202], ["IS_AST_PARENT", 197, 201], ["IS_AST_PARENT", 196, 197], ["IS_AST_PARENT", 196, 203], ["IS_AST_PARENT", 195, 196], ["IS_AST_PARENT", 206, 207], ["IS_AST_PARENT", 206, 208], ["IS_AST_PARENT", 205, 206], ["IS_AST_PARENT", 209, 210], ["IS_AST_PARENT", 209, 211], ["IS_AST_PARENT", 205, 209], ["IS_AST_PARENT", 204, 205], ["IS_AST_PARENT", 212, 213], ["IS_AST_PARENT", 212, 214], ["IS_AST_PARENT", 204, 212], ["IS_AST_PARENT", 195, 204], ["IS_AST_PARENT", 194, 195], ["IS_AST_PARENT", 111, 194], ["IS_AST_PARENT", 22, 111], ["IS_AST_PARENT", 216, 217], ["IS_AST_PARENT", 215, 216], ["IS_AST_PARENT", 219, 220], ["IS_AST_PARENT", 219, 221], ["IS_AST_PARENT", 218, 219], ["IS_AST_PARENT", 215, 218], ["IS_AST_PARENT", 22, 215], ["IS_AST_PARENT", 226, 227], ["IS_AST_PARENT", 225, 226], ["IS_AST_PARENT", 224, 225], ["IS_AST_PARENT", 228, 229], ["IS_AST_PARENT", 224, 228], ["IS_AST_PARENT", 223, 224], ["IS_AST_PARENT", 223, 230], ["IS_AST_PARENT", 222, 223], ["IS_AST_PARENT", 22, 222], ["IS_AST_PARENT", 235, 236], ["IS_AST_PARENT", 234, 235], ["IS_AST_PARENT", 233, 234], ["IS_AST_PARENT", 237, 238], ["IS_AST_PARENT", 233, 237], ["IS_AST_PARENT", 232, 233], ["IS_AST_PARENT", 232, 239], ["IS_AST_PARENT", 231, 232], ["IS_AST_PARENT", 22, 231], ["IS_AST_PARENT", 242, 243], ["IS_AST_PARENT", 241, 242], ["IS_AST_PARENT", 247, 248], ["IS_AST_PARENT", 246, 247], ["IS_AST_PARENT", 249, 250], ["IS_AST_PARENT", 246, 249], ["IS_AST_PARENT", 245, 246], ["IS_AST_PARENT", 251, 252], ["IS_AST_PARENT", 245, 251], ["IS_AST_PARENT", 244, 245], ["IS_AST_PARENT", 241, 244], ["IS_AST_PARENT", 240, 241], ["IS_AST_PARENT", 254, 255], ["IS_AST_PARENT", 259, 260], ["IS_AST_PARENT", 258, 259], ["IS_AST_PARENT", 257, 258], ["IS_AST_PARENT", 261, 262], ["IS_AST_PARENT", 257, 261], ["IS_AST_PARENT", 256, 257], ["IS_AST_PARENT", 256, 263], ["IS_AST_PARENT", 254, 256], ["IS_AST_PARENT", 253, 254], ["IS_AST_PARENT", 240, 253], ["IS_AST_PARENT", 22, 240], ["IS_AST_PARENT", 267, 268], ["IS_AST_PARENT", 266, 267], ["IS_AST_PARENT", 269, 270], ["IS_AST_PARENT", 266, 269], ["IS_AST_PARENT", 271, 272], ["IS_AST_PARENT", 266, 271], ["IS_AST_PARENT", 274, 275], ["IS_AST_PARENT", 274, 276], ["IS_AST_PARENT", 273, 274], ["IS_AST_PARENT", 266, 273], ["IS_AST_PARENT", 265, 266], ["IS_AST_PARENT", 277, 278], ["IS_AST_PARENT", 265, 277], ["IS_AST_PARENT", 264, 265], ["IS_AST_PARENT", 22, 264], ["IS_AST_PARENT", 282, 283], ["IS_AST_PARENT", 281, 282], ["IS_AST_PARENT", 285, 286], ["IS_AST_PARENT", 285, 287], ["IS_AST_PARENT", 284, 285], ["IS_AST_PARENT", 281, 284], ["IS_AST_PARENT", 289, 290], ["IS_AST_PARENT", 291, 292], ["IS_AST_PARENT", 291, 293], ["IS_AST_PARENT", 289, 291], ["IS_AST_PARENT", 288, 289], ["IS_AST_PARENT", 281, 288], ["IS_AST_PARENT", 280, 281], ["IS_AST_PARENT", 294, 295], ["IS_AST_PARENT", 280, 294], ["IS_AST_PARENT", 279, 280], ["IS_AST_PARENT", 22, 279], ["IS_AST_PARENT", 303, 304], ["IS_AST_PARENT", 305, 306], ["IS_AST_PARENT", 305, 307], ["IS_AST_PARENT", 303, 305], ["IS_AST_PARENT", 302, 303], ["IS_AST_PARENT", 301, 302], ["IS_AST_PARENT", 300, 301], ["IS_AST_PARENT", 308, 309], ["IS_AST_PARENT", 300, 308], ["IS_AST_PARENT", 299, 300], ["IS_AST_PARENT", 299, 310], ["IS_AST_PARENT", 298, 299], ["IS_AST_PARENT", 297, 298], ["IS_AST_PARENT", 296, 297], ["IS_AST_PARENT", 312, 313], ["IS_AST_PARENT", 312, 314], ["IS_AST_PARENT", 311, 312], ["IS_AST_PARENT", 296, 311], ["IS_AST_PARENT", 317, 318], ["IS_AST_PARENT", 319, 320], ["IS_AST_PARENT", 319, 321], ["IS_AST_PARENT", 317, 319], ["IS_AST_PARENT", 316, 317], ["IS_AST_PARENT", 316, 322], ["IS_AST_PARENT", 315, 316], ["IS_AST_PARENT", 296, 315], ["IS_AST_PARENT", 22, 296], ["IS_AST_PARENT", 325, 326], ["IS_AST_PARENT", 327, 328], ["IS_AST_PARENT", 329, 330], ["IS_AST_PARENT", 329, 331], ["IS_AST_PARENT", 327, 329], ["IS_AST_PARENT", 325, 327], ["IS_AST_PARENT", 324, 325], ["IS_AST_PARENT", 324, 332], ["IS_AST_PARENT", 323, 324], ["IS_AST_PARENT", 22, 323], ["IS_AST_PARENT", 335, 336], ["IS_AST_PARENT", 337, 338], ["IS_AST_PARENT", 339, 340], ["IS_AST_PARENT", 339, 341], ["IS_AST_PARENT", 337, 339], ["IS_AST_PARENT", 335, 337], ["IS_AST_PARENT", 334, 335], ["IS_AST_PARENT", 334, 342], ["IS_AST_PARENT", 333, 334], ["IS_AST_PARENT", 22, 333], ["IS_AST_PARENT", 345, 346], ["IS_AST_PARENT", 344, 345], ["IS_AST_PARENT", 350, 351], ["IS_AST_PARENT", 349, 350], ["IS_AST_PARENT", 352, 353], ["IS_AST_PARENT", 349, 352], ["IS_AST_PARENT", 348, 349], ["IS_AST_PARENT", 354, 355], ["IS_AST_PARENT", 348, 354], ["IS_AST_PARENT", 347, 348], ["IS_AST_PARENT", 344, 347], ["IS_AST_PARENT", 343, 344], ["IS_AST_PARENT", 361, 362], ["IS_AST_PARENT", 361, 363], ["IS_AST_PARENT", 360, 361], ["IS_AST_PARENT", 359, 360], ["IS_AST_PARENT", 358, 359], ["IS_AST_PARENT", 364, 365], ["IS_AST_PARENT", 358, 364], ["IS_AST_PARENT", 357, 358], ["IS_AST_PARENT", 357, 366], ["IS_AST_PARENT", 356, 357], ["IS_AST_PARENT", 343, 356], ["IS_AST_PARENT", 22, 343], ["IS_AST_PARENT", 369, 370], ["IS_AST_PARENT", 369, 371], ["IS_AST_PARENT", 368, 369], ["IS_AST_PARENT", 367, 368], ["IS_AST_PARENT", 373, 374], ["IS_AST_PARENT", 373, 375], ["IS_AST_PARENT", 372, 373], ["IS_AST_PARENT", 367, 372], ["IS_AST_PARENT", 22, 367], ["IS_AST_PARENT", 377, 378], ["IS_AST_PARENT", 377, 379], ["IS_AST_PARENT", 376, 377], ["IS_AST_PARENT", 22, 376], ["IS_AST_PARENT", 381, 382], ["IS_AST_PARENT", 381, 383], ["IS_AST_PARENT", 380, 381], ["IS_AST_PARENT", 22, 380], ["IS_AST_PARENT", 385, 386], ["IS_AST_PARENT", 385, 387], ["IS_AST_PARENT", 384, 385], ["IS_AST_PARENT", 22, 384], ["IS_AST_PARENT", 390, 391], ["IS_AST_PARENT", 390, 392], ["IS_AST_PARENT", 389, 390], ["IS_AST_PARENT", 389, 393], ["IS_AST_PARENT", 389, 394], ["IS_AST_PARENT", 388, 389], ["IS_AST_PARENT", 22, 388], ["IS_AST_PARENT", 396, 397], ["IS_AST_PARENT", 396, 398], ["IS_AST_PARENT", 395, 396], ["IS_AST_PARENT", 399, 400], ["IS_AST_PARENT", 399, 401], ["IS_AST_PARENT", 395, 399], ["IS_AST_PARENT", 22, 395], ["IS_AST_PARENT", 403, 404], ["IS_AST_PARENT", 403, 405], ["IS_AST_PARENT", 402, 403], ["IS_AST_PARENT", 406, 407], ["IS_AST_PARENT", 406, 408], ["IS_AST_PARENT", 406, 409], ["IS_AST_PARENT", 402, 406], ["IS_AST_PARENT", 22, 402], ["IS_AST_PARENT", 412, 413], ["IS_AST_PARENT", 412, 414], ["IS_AST_PARENT", 411, 412], ["IS_AST_PARENT", 411, 415], ["IS_AST_PARENT", 411, 416], ["IS_AST_PARENT", 410, 411], ["IS_AST_PARENT", 22, 410], ["IS_AST_PARENT", 418, 419], ["IS_AST_PARENT", 418, 420], ["IS_AST_PARENT", 417, 418], ["IS_AST_PARENT", 22, 417], ["IS_AST_PARENT", 1, 22], ["FLOWS_TO", 421, 18], ["FLOWS_TO", 18, 15], ["FLOWS_TO", 15, 12], ["FLOWS_TO", 12, 9], ["FLOWS_TO", 9, 6], ["FLOWS_TO", 6, 3], ["FLOWS_TO", 3, 417], ["FLOWS_TO", 417, 410], ["FLOWS_TO", 410, 402], ["FLOWS_TO", 402, 395], ["FLOWS_TO", 395, 388], ["FLOWS_TO", 388, 384], ["FLOWS_TO", 384, 380], ["FLOWS_TO", 380, 376], ["FLOWS_TO", 376, 372], ["FLOWS_TO", 372, 368], ["FLOWS_TO", 372, 356], ["FLOWS_TO", 368, 356], ["FLOWS_TO", 356, 347], ["FLOWS_TO", 356, 333], ["FLOWS_TO", 347, 345], ["FLOWS_TO", 345, 422], ["FLOWS_TO", 333, 323], ["FLOWS_TO", 323, 315], ["FLOWS_TO", 315, 311], ["FLOWS_TO", 315, 298], ["FLOWS_TO", 311, 279], ["FLOWS_TO", 298, 279], ["FLOWS_TO", 279, 264], ["FLOWS_TO", 264, 253], ["FLOWS_TO", 253, 244], ["FLOWS_TO", 253, 231], ["FLOWS_TO", 244, 242], ["FLOWS_TO", 242, 422], ["FLOWS_TO", 231, 222], ["FLOWS_TO", 222, 218], ["FLOWS_TO", 218, 216], ["FLOWS_TO", 218, 194], ["FLOWS_TO", 216, 422], ["FLOWS_TO", 194, 190], ["FLOWS_TO", 194, 126], ["FLOWS_TO", 190, 167], ["FLOWS_TO", 167, 158], ["FLOWS_TO", 167, 43], ["FLOWS_TO", 158, 156], ["FLOWS_TO", 156, 422], ["FLOWS_TO", 126, 117], ["FLOWS_TO", 126, 43], ["FLOWS_TO", 117, 115], ["FLOWS_TO", 115, 422], ["FLOWS_TO", 43, 36], ["FLOWS_TO", 43, 25], ["FLOWS_TO", 36, 34], ["FLOWS_TO", 34, 422], ["FLOWS_TO", 25, 23], ["FLOWS_TO", 23, 422], ["USE", 194, 423], ["USE", 43, 424], ["USE", 72, 424], ["USE", 62, 424], ["DEF", 384, 425], ["DEF", 385, 425], ["DEF", 222, 425], ["DEF", 223, 425], ["USE", 194, 425], ["USE", 194, 426], ["USE", 43, 427], ["USE", 75, 427], ["USE", 73, 427], ["USE", 65, 427], ["USE", 63, 427], ["USE", 298, 428], ["USE", 299, 428], ["USE", 333, 429], ["USE", 337, 429], ["USE", 323, 429], ["USE", 327, 429], ["USE", 315, 429], ["USE", 317, 429], ["USE", 298, 429], ["USE", 303, 429], ["USE", 279, 429], ["USE", 289, 429], ["USE", 333, 430], ["USE", 334, 430], ["USE", 323, 430], ["USE", 324, 430], ["USE", 43, 430], ["USE", 72, 430], ["USE", 62, 430], ["USE", 126, 431], ["DEF", 18, 432], ["USE", 356, 432], ["USE", 361, 432], ["USE", 333, 432], ["USE", 339, 432], ["USE", 323, 432], ["USE", 329, 432], ["USE", 315, 432], ["USE", 319, 432], ["USE", 298, 432], ["USE", 305, 432], ["USE", 279, 432], ["USE", 291, 432], ["USE", 43, 432], ["USE", 79, 432], ["USE", 69, 432], ["USE", 190, 433], ["USE", 191, 433], ["USE", 43, 434], ["USE", 62, 434], ["USE", 253, 435], ["USE", 256, 435], ["DEF", 3, 436], ["USE", 372, 436], ["DEF", 368, 436], ["DEF", 369, 436], ["USE", 126, 436], ["USE", 149, 436], ["DEF", 376, 437], ["DEF", 377, 437], ["USE", 253, 437], ["USE", 259, 437], ["USE", 279, 438], ["USE", 284, 438], ["USE", 222, 439], ["USE", 223, 439], ["USE", 410, 440], ["USE", 412, 440], ["USE", 372, 440], ["USE", 279, 440], ["USE", 282, 440], ["USE", 264, 440], ["USE", 271, 440], ["USE", 269, 440], ["USE", 253, 440], ["USE", 43, 440], ["USE", 90, 440], ["DEF", 15, 441], ["USE", 167, 441], ["USE", 185, 441], ["USE", 126, 441], ["USE", 146, 441], ["DEF", 395, 442], ["DEF", 396, 442], ["DEF", 311, 442], ["DEF", 312, 442], ["DEF", 298, 442], ["DEF", 299, 442], ["USE", 167, 442], ["USE", 177, 442], ["USE", 126, 442], ["USE", 136, 442], ["USE", 356, 443], ["USE", 360, 443], ["USE", 43, 443], ["USE", 77, 443], ["USE", 67, 443], ["USE", 43, 444], ["DEF", 12, 445], ["USE", 167, 445], ["USE", 183, 445], ["USE", 126, 445], ["USE", 144, 445], ["USE", 333, 446], ["USE", 335, 446], ["USE", 323, 446], ["USE", 325, 446], ["DEF", 388, 447], ["DEF", 390, 447], ["DEF", 231, 447], ["DEF", 232, 447], ["USE", 218, 447], ["DEF", 190, 447], ["DEF", 191, 447], ["USE", 167, 447], ["USE", 175, 447], ["USE", 126, 447], ["USE", 134, 447], ["USE", 43, 447], ["USE", 94, 447], ["USE", 323, 448], ["USE", 324, 448], ["USE", 43, 449], ["USE", 72, 449], ["USE", 62, 449], ["USE", 356, 450], ["USE", 43, 451], ["USE", 73, 451], ["USE", 63, 451], ["USE", 43, 452], ["DEF", 9, 453], ["USE", 43, 453], ["USE", 52, 453], ["USE", 194, 454], ["USE", 347, 455], ["USE", 350, 455], ["USE", 43, 456], ["USE", 75, 456], ["USE", 73, 456], ["USE", 65, 456], ["USE", 63, 456], ["USE", 231, 457], ["USE", 232, 457], ["USE", 158, 458], ["USE", 161, 458], ["USE", 117, 458], ["USE", 120, 458], ["DEF", 410, 459], ["DEF", 411, 459], ["DEF", 43, 459], ["DEF", 105, 459], ["USE", 43, 459], ["USE", 98, 459], ["USE", 82, 459], ["USE", 54, 459], ["USE", 36, 459], ["USE", 39, 459], ["USE", 25, 459], ["USE", 28, 459], ["USE", 347, 460], ["USE", 352, 460], ["USE", 244, 460], ["USE", 249, 460], ["USE", 158, 460], ["USE", 163, 460], ["USE", 117, 460], ["USE", 122, 460], ["DEF", 402, 461], ["DEF", 406, 461], ["USE", 167, 461], ["USE", 173, 461], ["USE", 126, 461], ["USE", 132, 461], ["USE", 43, 461], ["USE", 96, 461], ["USE", 333, 462], ["USE", 334, 462], ["USE", 323, 462], ["USE", 324, 462], ["USE", 194, 463], ["USE", 315, 464], ["USE", 298, 464], ["USE", 302, 464], ["DEF", 6, 465], ["USE", 43, 465], ["USE", 50, 465], ["DEF", 402, 466], ["DEF", 403, 466], ["DEF", 333, 466], ["DEF", 334, 466], ["USE", 167, 466], ["USE", 181, 466], ["USE", 126, 466], ["USE", 142, 466], ["USE", 368, 467], ["USE", 369, 467], ["USE", 43, 468], ["USE", 72, 468], ["DEF", 395, 469], ["DEF", 399, 469], ["DEF", 323, 469], ["DEF", 324, 469], ["USE", 167, 469], ["USE", 179, 469], ["USE", 126, 469], ["USE", 140, 469], ["USE", 333, 470], ["USE", 335, 470], ["USE", 323, 470], ["USE", 325, 470], ["USE", 315, 470], ["USE", 298, 470], ["USE", 302, 470], ["USE", 279, 470], ["USE", 288, 470], ["USE", 43, 470], ["USE", 75, 470], ["USE", 73, 470], ["USE", 65, 470], ["USE", 63, 470], ["DEF", 380, 471], ["DEF", 381, 471], ["USE", 264, 471], ["USE", 267, 471], ["USE", 244, 472], ["USE", 247, 472], ["USE", 43, 473], ["USE", 72, 473], ["USE", 62, 473], ["USE", 264, 474], ["USE", 273, 474], ["USE", 43, 475], ["USE", 105, 475], ["USE", 43, 476], ["USE", 167, 477], ["USE", 333, 478], ["USE", 335, 478], ["USE", 323, 478], ["USE", 325, 478], ["USE", 315, 478], ["USE", 298, 478], ["USE", 302, 478], ["USE", 279, 478], ["USE", 288, 478], ["USE", 279, 479], ["USE", 288, 479], ["USE", 126, 480], ["USE", 138, 480], ["USE", 356, 481], ["USE", 360, 481], ["USE", 333, 481], ["USE", 337, 481], ["USE", 323, 481], ["USE", 327, 481], ["USE", 315, 481], ["USE", 317, 481], ["USE", 298, 481], ["USE", 303, 481], ["USE", 279, 481], ["USE", 289, 481], ["USE", 43, 481], ["USE", 77, 481], ["USE", 67, 481], ["USE", 333, 482], ["USE", 334, 482], ["USE", 323, 482], ["USE", 324, 482], ["USE", 333, 483], ["USE", 334, 483], ["DEF", 417, 484], ["DEF", 418, 484], ["DEF", 253, 484], ["DEF", 256, 484], ["USE", 231, 484], ["USE", 235, 484], ["USE", 222, 484], ["USE", 226, 484], ["USE", 167, 484], ["USE", 171, 484], ["USE", 126, 484], ["USE", 130, 484], ["USE", 43, 484], ["USE", 92, 484], ["REACHES", 222, 194], ["REACHES", 9, 43], ["REACHES", 18, 356], ["REACHES", 18, 333], ["REACHES", 18, 323], ["REACHES", 18, 315], ["REACHES", 18, 298], ["REACHES", 18, 279], ["REACHES", 18, 43], ["REACHES", 410, 43], ["REACHES", 43, 36], ["REACHES", 43, 25], ["REACHES", 3, 372], ["REACHES", 368, 126], ["REACHES", 3, 126], ["REACHES", 376, 253], ["REACHES", 402, 167], ["REACHES", 402, 126], ["REACHES", 402, 43], ["REACHES", 333, 167], ["REACHES", 333, 126], ["REACHES", 6, 43], ["REACHES", 15, 167], ["REACHES", 323, 167], ["REACHES", 15, 126], ["REACHES", 323, 126], ["REACHES", 380, 264], ["REACHES", 311, 167], ["REACHES", 298, 167], ["REACHES", 311, 126], ["REACHES", 298, 126], ["REACHES", 12, 167], ["REACHES", 12, 126], ["REACHES", 231, 218], ["REACHES", 190, 167], ["REACHES", 231, 126], ["REACHES", 231, 43], ["REACHES", 190, 43], ["REACHES", 253, 231], ["REACHES", 253, 222], ["REACHES", 253, 167], ["REACHES", 253, 126], ["REACHES", 253, 43], ["POST_DOM", 422, 115], ["POST_DOM", 218, 222], ["POST_DOM", 279, 311], ["POST_DOM", 422, 34], ["POST_DOM", 345, 347], ["POST_DOM", 422, 422], ["POST_DOM", 15, 18], ["POST_DOM", 6, 9], ["POST_DOM", 422, 218], ["POST_DOM", 417, 3], ["POST_DOM", 12, 15], ["POST_DOM", 167, 190], ["POST_DOM", 422, 345], ["POST_DOM", 380, 384], ["POST_DOM", 323, 333], ["POST_DOM", 253, 264], ["POST_DOM", 422, 23], ["POST_DOM", 372, 376], ["POST_DOM", 279, 315], ["POST_DOM", 422, 43], ["POST_DOM", 422, 126], ["POST_DOM", 422, 167], ["POST_DOM", 242, 244], ["POST_DOM", 395, 402], ["POST_DOM", 422, 253], ["POST_DOM", 156, 158], ["POST_DOM", 422, 421], ["POST_DOM", 279, 298], ["POST_DOM", 3, 6], ["POST_DOM", 422, 216], ["POST_DOM", 9, 12], ["POST_DOM", 115, 117], ["POST_DOM", 422, 194], ["POST_DOM", 422, 356], ["POST_DOM", 402, 410], ["POST_DOM", 222, 231], ["POST_DOM", 264, 279], ["POST_DOM", 315, 323], ["POST_DOM", 422, 242], ["POST_DOM", 410, 417], ["POST_DOM", 376, 380], ["POST_DOM", 384, 388], ["POST_DOM", 356, 368], ["POST_DOM", 388, 395], ["POST_DOM", 23, 25], ["POST_DOM", 34, 36], ["POST_DOM", 422, 156], ["POST_DOM", 356, 372], ["CONTROLS", 126, 115], ["CONTROLS", 126, 43], ["CONTROLS", 126, 117], ["CONTROLS", 253, 222], ["CONTROLS", 253, 218], ["CONTROLS", 253, 244], ["CONTROLS", 253, 231], ["CONTROLS", 253, 242], ["CONTROLS", 315, 311], ["CONTROLS", 315, 298], ["CONTROLS", 43, 34], ["CONTROLS", 43, 23], ["CONTROLS", 43, 25], ["CONTROLS", 43, 36], ["CONTROLS", 356, 347], ["CONTROLS", 356, 345], ["CONTROLS", 356, 333], ["CONTROLS", 356, 264], ["CONTROLS", 356, 315], ["CONTROLS", 356, 253], ["CONTROLS", 356, 279], ["CONTROLS", 356, 323], ["CONTROLS", 421, 18], ["CONTROLS", 421, 9], ["CONTROLS", 421, 3], ["CONTROLS", 421, 15], ["CONTROLS", 421, 384], ["CONTROLS", 421, 376], ["CONTROLS", 421, 402], ["CONTROLS", 421, 6], ["CONTROLS", 421, 12], ["CONTROLS", 421, 356], ["CONTROLS", 421, 410], ["CONTROLS", 421, 417], ["CONTROLS", 421, 380], ["CONTROLS", 421, 388], ["CONTROLS", 421, 395], ["CONTROLS", 421, 372], ["CONTROLS", 218, 216], ["CONTROLS", 218, 194], ["CONTROLS", 194, 190], ["CONTROLS", 194, 126], ["CONTROLS", 194, 167], ["CONTROLS", 167, 43], ["CONTROLS", 167, 158], ["CONTROLS", 167, 156], ["CONTROLS", 372, 368], ["IS_FUNCTION_OF_AST", 0, 1], ["IS_FUNCTION_OF_CFG", 0, 421]]}, "bug_txt": "static int pkcs12_gen_mac(PKCS12 *p12, const char *pass, int passlen,\n                          unsigned char *mac, unsigned int *maclen,\n                          int (*pkcs12_key_gen)(const char *pass, int passlen,\n                                                unsigned char *salt, int slen,\n                                                int id, int iter, int n,\n                                                unsigned char *out,\n                                                const EVP_MD *md_type))\n{\n    const EVP_MD *md_type;\n    HMAC_CTX *hmac = NULL;\n    unsigned char key[EVP_MAX_MD_SIZE], *salt;\n    int saltlen, iter;\n    int md_size = 0;\n    int md_type_nid;\n    const X509_ALGOR *macalg;\n    const ASN1_OBJECT *macoid;\n\n    if (pkcs12_key_gen == NULL)\n        pkcs12_key_gen = PKCS12_key_gen_utf8;\n\n    if (!PKCS7_type_is_data(p12->authsafes)) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_CONTENT_TYPE_NOT_DATA);\n        return 0;\n    }\n\n    salt = p12->mac->salt->data;\n    saltlen = p12->mac->salt->length;\n    if (!p12->mac->iter)\n        iter = 1;\n    else\n        iter = ASN1_INTEGER_get(p12->mac->iter);\n    X509_SIG_get0(p12->mac->dinfo, &macalg, NULL);\n    X509_ALGOR_get0(&macoid, NULL, NULL, macalg);\n    if ((md_type = EVP_get_digestbyobj(macoid)) == NULL) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_UNKNOWN_DIGEST_ALGORITHM);\n        return 0;\n    }\n    md_size = EVP_MD_size(md_type);\n    md_type_nid = EVP_MD_type(md_type);\n    if (md_size < 0)\n        return 0;\n    if ((md_type_nid == NID_id_GostR3411_94\n         || md_type_nid == NID_id_GostR3411_2012_256\n         || md_type_nid == NID_id_GostR3411_2012_512)\n        && !getenv(\"LEGACY_GOST_PKCS12\")) {\n        md_size = TK26_MAC_KEY_LEN;\n        if (!pkcs12_gen_gost_mac_key(pass, passlen, salt, saltlen, iter,\n                                     md_size, key, md_type)) {\n            PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_KEY_GEN_ERROR);\n            return 0;\n        }\n    } else\n        if (!(*pkcs12_key_gen)(pass, passlen, salt, saltlen, PKCS12_MAC_ID,\n                               iter, md_size, key, md_type)) {\n        PKCS12err(PKCS12_F_PKCS12_GEN_MAC, PKCS12_R_KEY_GEN_ERROR);\n        return 0;\n    }\n    if ((hmac = HMAC_CTX_new()) == NULL\n        || !HMAC_Init_ex(hmac, key, md_size, md_type, NULL)\n        || !HMAC_Update(hmac, p12->authsafes->d.data->data,\n                        p12->authsafes->d.data->length)\n        || !HMAC_Final(hmac, mac, maclen)) {\n        HMAC_CTX_free(hmac);\n        return 0;\n    }\n    HMAC_CTX_free(hmac);\n    return 1;\n}", "bug_tokens": ["static", "int", "pkcs12", "gen", "mac", "(", "pkcs12", "*", "p12", ",", "const", "char", "*", "pass", ",", "int", "passlen", ",", "unsigned", "char", "*", "mac", ",", "unsigned", "int", "*", "maclen", ",", "int", "(", "*", "pkcs12", "key", "gen", ")", "(", "const", "char", "*", "pass", ",", "int", "passlen", ",", "unsigned", "char", "*", "salt", ",", "int", "slen", ",", "int", "id", ",", "int", "iter", ",", "int", "n", ",", "unsigned", "char", "*", "out", ",", "const", "evp", "md", "*", "md", "type", ")", ")", "{", "const", "evp", "md", "*", "md", "type", ";", "hmac", "ctx", "*", "hmac", "=", "null", ";", "unsigned", "char", "key", "[", "evp", "max", "md", "size", "]", ",", "*", "salt", ";", "int", "saltlen", ",", "iter", ";", "int", "md", "size", "=", "0", ";", "int", "md", "type", "nid", ";", "const", "x509", "algor", "*", "macalg", ";", "const", "asn1", "object", "*", "macoid", ";", "if", "(", "pkcs12", "key", "gen", "=", "=", "null", ")", "pkcs12", "key", "gen", "=", "pkcs12", "key", "gen", "utf8", ";", "if", "(", "!", "pkcs7", "type", "is", "data", "(", "p12", "-", ">", "authsafes", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "content", "type", "not", "data", ")", ";", "return", "0", ";", "}", "salt", "=", "p12", "-", ">", "mac", "-", ">", "salt", "-", ">", "data", ";", "saltlen", "=", "p12", "-", ">", "mac", "-", ">", "salt", "-", ">", "length", ";", "if", "(", "!", "p12", "-", ">", "mac", "-", ">", "iter", ")", "iter", "=", "1", ";", "else", "iter", "=", "asn1", "integer", "get", "(", "p12", "-", ">", "mac", "-", ">", "iter", ")", ";", "x509", "sig", "get0", "(", "p12", "-", ">", "mac", "-", ">", "dinfo", ",", "&", "macalg", ",", "null", ")", ";", "x509", "algor", "get0", "(", "&", "macoid", ",", "null", ",", "null", ",", "macalg", ")", ";", "if", "(", "(", "md", "type", "=", "evp", "get", "digestbyobj", "(", "macoid", ")", ")", "=", "=", "null", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "unknown", "digest", "algorithm", ")", ";", "return", "0", ";", "}", "md", "size", "=", "evp", "md", "size", "(", "md", "type", ")", ";", "md", "type", "nid", "=", "evp", "md", "type", "(", "md", "type", ")", ";", "if", "(", "md", "size", "<", "0", ")", "return", "0", ";", "if", "(", "(", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "94", "|", "|", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "2012", "256", "|", "|", "md", "type", "nid", "=", "=", "nid", "id", "gost", "r3411", "2012", "512", ")", "&", "&", "!", "getenv", "(", "\"", "legacy_gost_pkcs12", "\"", ")", ")", "{", "md", "size", "=", "tk26", "mac", "key", "len", ";", "if", "(", "!", "pkcs12", "gen", "gost", "mac", "key", "(", "pass", ",", "passlen", ",", "salt", ",", "saltlen", ",", "iter", ",", "md", "size", ",", "key", ",", "md", "type", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "key", "gen", "error", ")", ";", "return", "0", ";", "}", "}", "else", "if", "(", "!", "(", "*", "pkcs12", "key", "gen", ")", "(", "pass", ",", "passlen", ",", "salt", ",", "saltlen", ",", "pkcs12", "mac", "id", ",", "iter", ",", "md", "size", ",", "key", ",", "md", "type", ")", ")", "{", "pkcs12err", "(", "pkcs12", "f", "pkcs12", "gen", "mac", ",", "pkcs12", "r", "key", "gen", "error", ")", ";", "return", "0", ";", "}", "if", "(", "(", "hmac", "=", "hmac", "ctx", "new", "(", ")", ")", "=", "=", "null", "|", "|", "!", "hmac", "init", "ex", "(", "hmac", ",", "key", ",", "md", "size", ",", "md", "type", ",", "null", ")", "|", "|", "!", "hmac", "update", "(", "hmac", ",", "p12", "-", ">", "authsafes", "-", ">", "d", ".", "data", "-", ">", "data", ",", "p12", "-", ">", "authsafes", "-", ">", "d", ".", "data", "-", ">", "length", ")", "|", "|", "!", "hmac", "final", "(", "hmac", ",", "mac", ",", "maclen", ")", ")", "{", "hmac", "ctx", "free", "(", "hmac", ")", ";", "return", "0", ";", "}", "hmac", "ctx", "free", "(", "hmac", ")", ";", "return", "1", ";", "}"], "bug_func": "data_process/data/d2a/func/vuln/single/openssl-ff59ce71b50dbd735a065cb2a832ad870593845f_1-auto_labeler-INTEGER_OVERFLOW_L5-bug_function.c", "file": "data_process/data/d2a/func/vuln/multi/openssl-ff59ce71b50dbd735a065cb2a832ad870593845f_1-auto_labeler-INTEGER_OVERFLOW_L5-multi_function.c", "vul_type": "integer_overflow", "target": 1}