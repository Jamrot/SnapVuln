{
    "relevant_statements": [
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "__tail_onwire_len",
        "line_changes": 413,
        "modification": "ADD",
        "statement": "\tBUG_ON(front_len < 0 || front_len > CEPH_MSG_MAX_FRONT_LEN ||",
        "reason": "This statement adds a check to ensure the front segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "__tail_onwire_len",
        "line_changes": 414,
        "modification": "ADD",
        "statement": "\t       middle_len < 0 || middle_len > CEPH_MSG_MAX_MIDDLE_LEN ||",
        "reason": "This statement adds a check to ensure the middle segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "__tail_onwire_len",
        "line_changes": 415,
        "modification": "ADD",
        "statement": "\t       data_len < 0 || data_len > CEPH_MSG_MAX_DATA_LEN);",
        "reason": "This statement adds a check to ensure the data segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "head_onwire_len",
        "line_changes": 393,
        "modification": "ADD",
        "statement": "\tBUG_ON(ctrl_len < 0 || ctrl_len > CEPH_MSG_MAX_CONTROL_LEN);",
        "reason": "This statement adds a check to ensure the control segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 529,
        "modification": "ADD",
        "statement": "\tif (desc->fd_lens[0] < 0 ||",
        "reason": "This statement adds a check to ensure the control segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 530,
        "modification": "ADD",
        "statement": "\t    desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {",
        "reason": "This statement adds a check to ensure the control segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 531,
        "modification": "ADD",
        "statement": "\t\tpr_err(\"bad control segment length %d\\n\", desc->fd_lens[0]);",
        "reason": "This statement logs an error if the control segment length is invalid, aiding in debugging and preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 534,
        "modification": "ADD",
        "statement": "\tif (desc->fd_lens[1] < 0 ||",
        "reason": "This statement adds a check to ensure the front segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 535,
        "modification": "ADD",
        "statement": "\t    desc->fd_lens[1] > CEPH_MSG_MAX_FRONT_LEN) {",
        "reason": "This statement adds a check to ensure the front segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 536,
        "modification": "ADD",
        "statement": "\t\tpr_err(\"bad front segment length %d\\n\", desc->fd_lens[1]);",
        "reason": "This statement logs an error if the front segment length is invalid, aiding in debugging and preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 539,
        "modification": "ADD",
        "statement": "\tif (desc->fd_lens[2] < 0 ||",
        "reason": "This statement adds a check to ensure the middle segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 540,
        "modification": "ADD",
        "statement": "\t    desc->fd_lens[2] > CEPH_MSG_MAX_MIDDLE_LEN) {",
        "reason": "This statement adds a check to ensure the middle segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 541,
        "modification": "ADD",
        "statement": "\t\tpr_err(\"bad middle segment length %d\\n\", desc->fd_lens[2]);",
        "reason": "This statement logs an error if the middle segment length is invalid, aiding in debugging and preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 544,
        "modification": "ADD",
        "statement": "\tif (desc->fd_lens[3] < 0 ||",
        "reason": "This statement adds a check to ensure the data segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 545,
        "modification": "ADD",
        "statement": "\t    desc->fd_lens[3] > CEPH_MSG_MAX_DATA_LEN) {",
        "reason": "This statement adds a check to ensure the data segment length is within valid bounds, preventing buffer overruns."
      },
      {
        "file_path": {
          "file_path_old": "net/ceph/messenger_v2.c",
          "file_path_new": "net/ceph/messenger_v2.c"
        },
        "function_name": "decode_preamble",
        "line_changes": 546,
        "modification": "ADD",
        "statement": "\t\tpr_err(\"bad data segment length %d\\n\", desc->fd_lens[3]);",
        "reason": "This statement logs an error if the data segment length is invalid, aiding in debugging and preventing buffer overruns."
      }
    ],
    "sorted_statements": [
      {
        "statement": "\tBUG_ON(front_len < 0 || front_len > CEPH_MSG_MAX_FRONT_LEN ||",
        "relevance": "1"
      },
      {
        "statement": "\t       middle_len < 0 || middle_len > CEPH_MSG_MAX_MIDDLE_LEN ||",
        "relevance": "2"
      },
      {
        "statement": "\t       data_len < 0 || data_len > CEPH_MSG_MAX_DATA_LEN);",
        "relevance": "3"
      },
      {
        "statement": "\tBUG_ON(ctrl_len < 0 || ctrl_len > CEPH_MSG_MAX_CONTROL_LEN);",
        "relevance": "4"
      },
      {
        "statement": "\tif (desc->fd_lens[0] < 0 ||",
        "relevance": "5"
      },
      {
        "statement": "\t    desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {",
        "relevance": "6"
      },
      {
        "statement": "\t\tpr_err(\"bad control segment length %d\\n\", desc->fd_lens[0]);",
        "relevance": "7"
      },
      {
        "statement": "\tif (desc->fd_lens[1] < 0 ||",
        "relevance": "8"
      },
      {
        "statement": "\t    desc->fd_lens[1] > CEPH_MSG_MAX_FRONT_LEN) {",
        "relevance": "9"
      },
      {
        "statement": "\t\tpr_err(\"bad front segment length %d\\n\", desc->fd_lens[1]);",
        "relevance": "10"
      },
      {
        "statement": "\tif (desc->fd_lens[2] < 0 ||",
        "relevance": "11"
      },
      {
        "statement": "\t    desc->fd_lens[2] > CEPH_MSG_MAX_MIDDLE_LEN) {",
        "relevance": "12"
      },
      {
        "statement": "\t\tpr_err(\"bad middle segment length %d\\n\", desc->fd_lens[2]);",
        "relevance": "13"
      },
      {
        "statement": "\tif (desc->fd_lens[3] < 0 ||",
        "relevance": "14"
      },
      {
        "statement": "\t    desc->fd_lens[3] > CEPH_MSG_MAX_DATA_LEN) {",
        "relevance": "15"
      },
      {
        "statement": "\t\tpr_err(\"bad data segment length %d\\n\", desc->fd_lens[3]);",
        "relevance": "16"
      }
    ]
  }